name: WASM Build Pipeline

on:
  push:
    branches: [ main, ruv-swarm ]
    paths:
      - 'ruv-swarm/crates/ruv-swarm-wasm-unified/**'
      - 'ruv-swarm/crates/ruv-swarm-core/**'
      - 'ruv-swarm/crates/ruv-swarm-persistence/**'
      - '.github/workflows/wasm-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'ruv-swarm/crates/ruv-swarm-wasm-unified/**'
      - 'ruv-swarm/crates/ruv-swarm-core/**'
      - 'ruv-swarm/crates/ruv-swarm-persistence/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build WASM Module
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install wasm-pack
      run: |
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    
    - name: Install wasm-opt
      run: |
        npm install -g wasm-opt
    
    - name: Build WASM module
      working-directory: ./ruv-swarm/crates/ruv-swarm-wasm-unified
      run: |
        ./scripts/build-wasm-unified.sh release default
    
    - name: Run WASM tests
      working-directory: ./ruv-swarm/crates/ruv-swarm-wasm-unified
      run: |
        wasm-pack test --headless --chrome
    
    - name: Check WASM size
      working-directory: ./ruv-swarm/crates/ruv-swarm-wasm-unified
      run: |
        WASM_SIZE=$(stat -c%s pkg/ruv_swarm_wasm_unified_bg.wasm)
        WASM_SIZE_MB=$((WASM_SIZE / 1024 / 1024))
        echo "WASM module size: ${WASM_SIZE_MB}MB"
        if [ $WASM_SIZE_MB -gt 5 ]; then
          echo "Warning: WASM module exceeds 5MB target size"
          exit 1
        fi
    
    - name: Upload WASM artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wasm-module
        path: ruv-swarm/crates/ruv-swarm-wasm-unified/pkg/
        retention-days: 7
  
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download WASM artifacts
      uses: actions/download-artifact@v3
      with:
        name: wasm-module
        path: ruv-swarm/crates/ruv-swarm-wasm-unified/pkg/
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Run performance benchmarks
      working-directory: ./ruv-swarm/npm
      run: |
        npm install
        npm run benchmark:wasm
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: ruv-swarm/npm/benchmark-results.json
        retention-days: 7

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [build, benchmark]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download WASM artifacts
      uses: actions/download-artifact@v3
      with:
        name: wasm-module
        path: ruv-swarm/npm/wasm-unified/
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Update package version
      working-directory: ./ruv-swarm/npm
      run: |
        npm version patch --no-git-tag-version
    
    - name: Publish to NPM
      working-directory: ./ruv-swarm/npm
      run: |
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}