c702909d09a0928f49d7f275c42a4031
/* istanbul ignore next */
function cov_28z3ai4p9y() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/wasm-loader2.js";
  var hash = "2a000676d467e31bc46331976f808ec5393a7daa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/wasm-loader2.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "2": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "3": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "4": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 75
        }
      },
      "5": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 36
        }
      },
      "6": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "7": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 35
        }
      },
      "8": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 69,
          column: 36
        }
      },
      "9": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 37
        }
      },
      "10": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 63
        }
      },
      "11": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "12": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "13": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "14": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 50
        }
      },
      "15": {
        start: {
          line: 86,
          column: 23
        },
        end: {
          line: 86,
          column: 54
        }
      },
      "16": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "17": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 55
        }
      },
      "18": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "19": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 104,
          column: 7
        }
      },
      "20": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "21": {
        start: {
          line: 97,
          column: 29
        },
        end: {
          line: 97,
          column: 53
        }
      },
      "22": {
        start: {
          line: 98,
          column: 10
        },
        end: {
          line: 98,
          column: 51
        }
      },
      "23": {
        start: {
          line: 99,
          column: 10
        },
        end: {
          line: 99,
          column: 28
        }
      },
      "24": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 121
        }
      },
      "25": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 111,
          column: 7
        }
      },
      "26": {
        start: {
          line: 108,
          column: 27
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "27": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "28": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 26
        }
      },
      "29": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 96
        }
      },
      "30": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "31": {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 117,
          column: 33
        }
      },
      "32": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 120,
          column: 70
        }
      },
      "33": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 57
        }
      },
      "34": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "35": {
        start: {
          line: 124,
          column: 21
        },
        end: {
          line: 124,
          column: 41
        }
      },
      "36": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 43
        }
      },
      "37": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 46
        }
      },
      "38": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 96
        }
      },
      "39": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "40": {
        start: {
          line: 131,
          column: 6
        },
        end: {
          line: 131,
          column: 46
        }
      },
      "41": {
        start: {
          line: 134,
          column: 6
        },
        end: {
          line: 139,
          column: 7
        }
      },
      "42": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 105
        }
      },
      "43": {
        start: {
          line: 136,
          column: 27
        },
        end: {
          line: 136,
          column: 51
        }
      },
      "44": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 49
        }
      },
      "45": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 26
        }
      },
      "46": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 141,
          column: 74
        }
      },
      "47": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 142,
          column: 18
        }
      },
      "48": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "49": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 35
        }
      },
      "50": {
        start: {
          line: 153,
          column: 21
        },
        end: {
          line: 153,
          column: 61
        }
      },
      "51": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 188,
          column: 5
        }
      },
      "52": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 174,
          column: 7
        }
      },
      "53": {
        start: {
          line: 160,
          column: 25
        },
        end: {
          line: 160,
          column: 46
        }
      },
      "54": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "55": {
        start: {
          line: 162,
          column: 10
        },
        end: {
          line: 162,
          column: 81
        }
      },
      "56": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 50
        }
      },
      "57": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "58": {
        start: {
          line: 168,
          column: 10
        },
        end: {
          line: 168,
          column: 51
        }
      },
      "59": {
        start: {
          line: 171,
          column: 10
        },
        end: {
          line: 171,
          column: 91
        }
      },
      "60": {
        start: {
          line: 172,
          column: 10
        },
        end: {
          line: 172,
          column: 58
        }
      },
      "61": {
        start: {
          line: 176,
          column: 22
        },
        end: {
          line: 176,
          column: 55
        }
      },
      "62": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 75
        }
      },
      "63": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 184,
          column: 8
        }
      },
      "64": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 186,
          column: 86
        }
      },
      "65": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 187,
          column: 54
        }
      },
      "66": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "67": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 82
        }
      },
      "68": {
        start: {
          line: 198,
          column: 23
        },
        end: {
          line: 198,
          column: 46
        }
      },
      "69": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 209,
          column: 7
        }
      },
      "70": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 202,
          column: 82
        }
      },
      "71": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "72": {
        start: {
          line: 204,
          column: 29
        },
        end: {
          line: 204,
          column: 56
        }
      },
      "73": {
        start: {
          line: 205,
          column: 10
        },
        end: {
          line: 205,
          column: 45
        }
      },
      "74": {
        start: {
          line: 207,
          column: 10
        },
        end: {
          line: 207,
          column: 84
        }
      },
      "75": {
        start: {
          line: 211,
          column: 6
        },
        end: {
          line: 216,
          column: 8
        }
      },
      "76": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 218,
          column: 66
        }
      },
      "77": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 50
        }
      },
      "78": {
        start: {
          line: 224,
          column: 24
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "79": {
        start: {
          line: 231,
          column: 10
        },
        end: {
          line: 231,
          column: 62
        }
      },
      "80": {
        start: {
          line: 233,
          column: 24
        },
        end: {
          line: 233,
          column: 25
        }
      },
      "81": {
        start: {
          line: 234,
          column: 30
        },
        end: {
          line: 234,
          column: 31
        }
      },
      "82": {
        start: {
          line: 235,
          column: 35
        },
        end: {
          line: 235,
          column: 36
        }
      },
      "83": {
        start: {
          line: 236,
          column: 33
        },
        end: {
          line: 236,
          column: 34
        }
      },
      "84": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 237,
          column: 28
        }
      },
      "85": {
        start: {
          line: 238,
          column: 30
        },
        end: {
          line: 238,
          column: 31
        }
      },
      "86": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 25
        }
      },
      "87": {
        start: {
          line: 240,
          column: 30
        },
        end: {
          line: 240,
          column: 50
        }
      },
      "88": {
        start: {
          line: 241,
          column: 25
        },
        end: {
          line: 241,
          column: 26
        }
      },
      "89": {
        start: {
          line: 242,
          column: 24
        },
        end: {
          line: 242,
          column: 25
        }
      },
      "90": {
        start: {
          line: 243,
          column: 23
        },
        end: {
          line: 243,
          column: 24
        }
      },
      "91": {
        start: {
          line: 244,
          column: 23
        },
        end: {
          line: 244,
          column: 24
        }
      },
      "92": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 246,
          column: 68
        }
      },
      "93": {
        start: {
          line: 247,
          column: 10
        },
        end: {
          line: 247,
          column: 40
        }
      },
      "94": {
        start: {
          line: 248,
          column: 10
        },
        end: {
          line: 248,
          column: 19
        }
      },
      "95": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 275,
          column: 5
        }
      },
      "96": {
        start: {
          line: 256,
          column: 6
        },
        end: {
          line: 263,
          column: 8
        }
      },
      "97": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 78
        }
      },
      "98": {
        start: {
          line: 265,
          column: 6
        },
        end: {
          line: 272,
          column: 8
        }
      },
      "99": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 81
        }
      },
      "100": {
        start: {
          line: 274,
          column: 6
        },
        end: {
          line: 274,
          column: 25
        }
      },
      "101": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 67
        }
      },
      "102": {
        start: {
          line: 282,
          column: 31
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "103": {
        start: {
          line: 284,
          column: 35
        },
        end: {
          line: 284,
          column: 36
        }
      },
      "104": {
        start: {
          line: 285,
          column: 53
        },
        end: {
          line: 285,
          column: 56
        }
      },
      "105": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "106": {
        start: {
          line: 292,
          column: 6
        },
        end: {
          line: 295,
          column: 8
        }
      },
      "107": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 76
        }
      },
      "108": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 17
        }
      },
      "109": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 296,
          column: 49
        }
      },
      "110": {
        start: {
          line: 296,
          column: 47
        },
        end: {
          line: 296,
          column: 48
        }
      },
      "111": {
        start: {
          line: 297,
          column: 6
        },
        end: {
          line: 297,
          column: 70
        }
      },
      "112": {
        start: {
          line: 297,
          column: 46
        },
        end: {
          line: 297,
          column: 69
        }
      },
      "113": {
        start: {
          line: 298,
          column: 6
        },
        end: {
          line: 298,
          column: 12
        }
      },
      "114": {
        start: {
          line: 300,
          column: 6
        },
        end: {
          line: 303,
          column: 8
        }
      },
      "115": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 73
        }
      },
      "116": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "117": {
        start: {
          line: 304,
          column: 6
        },
        end: {
          line: 304,
          column: 66
        }
      },
      "118": {
        start: {
          line: 304,
          column: 42
        },
        end: {
          line: 304,
          column: 65
        }
      },
      "119": {
        start: {
          line: 305,
          column: 6
        },
        end: {
          line: 305,
          column: 12
        }
      },
      "120": {
        start: {
          line: 307,
          column: 6
        },
        end: {
          line: 310,
          column: 8
        }
      },
      "121": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 81
        }
      },
      "122": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 17
        }
      },
      "123": {
        start: {
          line: 311,
          column: 6
        },
        end: {
          line: 311,
          column: 12
        }
      },
      "124": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 320,
          column: 6
        }
      },
      "125": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 325,
          column: 34
        }
      },
      "126": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 327,
          column: 59
        }
      },
      "127": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 328,
          column: 16
        }
      },
      "128": {
        start: {
          line: 333,
          column: 28
        },
        end: {
          line: 334,
          column: 55
        }
      },
      "129": {
        start: {
          line: 334,
          column: 22
        },
        end: {
          line: 334,
          column: 54
        }
      },
      "130": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 336,
          column: 74
        }
      },
      "131": {
        start: {
          line: 336,
          column: 50
        },
        end: {
          line: 336,
          column: 71
        }
      },
      "132": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 338,
          column: 105
        }
      },
      "133": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 339,
          column: 16
        }
      },
      "134": {
        start: {
          line: 344,
          column: 26
        },
        end: {
          line: 344,
          column: 28
        }
      },
      "135": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "136": {
        start: {
          line: 347,
          column: 6
        },
        end: {
          line: 358,
          column: 9
        }
      },
      "137": {
        start: {
          line: 349,
          column: 10
        },
        end: {
          line: 353,
          column: 11
        }
      },
      "138": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 40
        }
      },
      "139": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 112
        }
      },
      "140": {
        start: {
          line: 355,
          column: 25
        },
        end: {
          line: 355,
          column: 53
        }
      },
      "141": {
        start: {
          line: 356,
          column: 10
        },
        end: {
          line: 356,
          column: 38
        }
      },
      "142": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 361,
          column: 25
        }
      },
      "143": {
        start: {
          line: 365,
          column: 19
        },
        end: {
          line: 365,
          column: 21
        }
      },
      "144": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "145": {
        start: {
          line: 368,
          column: 6
        },
        end: {
          line: 375,
          column: 8
        }
      },
      "146": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 378,
          column: 18
        }
      },
      "147": {
        start: {
          line: 382,
          column: 21
        },
        end: {
          line: 382,
          column: 22
        }
      },
      "148": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "149": {
        start: {
          line: 385,
          column: 6
        },
        end: {
          line: 387,
          column: 7
        }
      },
      "150": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 54
        }
      },
      "151": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 390,
          column: 22
        }
      },
      "152": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 396,
          column: 5
        }
      },
      "153": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 395,
          column: 23
        }
      },
      "154": {
        start: {
          line: 397,
          column: 14
        },
        end: {
          line: 397,
          column: 18
        }
      },
      "155": {
        start: {
          line: 398,
          column: 18
        },
        end: {
          line: 398,
          column: 45
        }
      },
      "156": {
        start: {
          line: 399,
          column: 14
        },
        end: {
          line: 399,
          column: 55
        }
      },
      "157": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 400,
          column: 78
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 62,
            column: 3
          }
        },
        loc: {
          start: {
            line: 62,
            column: 45
          },
          end: {
            line: 75,
            column: 3
          }
        },
        line: 62
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 77,
            column: 2
          },
          end: {
            line: 77,
            column: 3
          }
        },
        loc: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 144,
            column: 3
          }
        },
        line: 77
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 146,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        },
        loc: {
          start: {
            line: 146,
            column: 47
          },
          end: {
            line: 189,
            column: 3
          }
        },
        line: 146
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 191,
            column: 2
          },
          end: {
            line: 191,
            column: 3
          }
        },
        loc: {
          start: {
            line: 191,
            column: 25
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 191
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 223,
            column: 2
          },
          end: {
            line: 223,
            column: 3
          }
        },
        loc: {
          start: {
            line: 223,
            column: 31
          },
          end: {
            line: 276,
            column: 3
          }
        },
        line: 223
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 20
          }
        },
        loc: {
          start: {
            line: 230,
            column: 29
          },
          end: {
            line: 232,
            column: 9
          }
        },
        line: 230
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 233,
            column: 18
          },
          end: {
            line: 233,
            column: 19
          }
        },
        loc: {
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 25
          }
        },
        line: 233
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 234,
            column: 24
          },
          end: {
            line: 234,
            column: 25
          }
        },
        loc: {
          start: {
            line: 234,
            column: 30
          },
          end: {
            line: 234,
            column: 31
          }
        },
        line: 234
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 235,
            column: 29
          },
          end: {
            line: 235,
            column: 30
          }
        },
        loc: {
          start: {
            line: 235,
            column: 35
          },
          end: {
            line: 235,
            column: 36
          }
        },
        line: 235
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 236,
            column: 27
          },
          end: {
            line: 236,
            column: 28
          }
        },
        loc: {
          start: {
            line: 236,
            column: 33
          },
          end: {
            line: 236,
            column: 34
          }
        },
        line: 236
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 237,
            column: 21
          },
          end: {
            line: 237,
            column: 22
          }
        },
        loc: {
          start: {
            line: 237,
            column: 27
          },
          end: {
            line: 237,
            column: 28
          }
        },
        line: 237
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 238,
            column: 24
          },
          end: {
            line: 238,
            column: 25
          }
        },
        loc: {
          start: {
            line: 238,
            column: 30
          },
          end: {
            line: 238,
            column: 31
          }
        },
        line: 238
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 239,
            column: 18
          },
          end: {
            line: 239,
            column: 19
          }
        },
        loc: {
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 239,
            column: 25
          }
        },
        line: 239
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 240,
            column: 24
          },
          end: {
            line: 240,
            column: 25
          }
        },
        loc: {
          start: {
            line: 240,
            column: 30
          },
          end: {
            line: 240,
            column: 50
          }
        },
        line: 240
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 241,
            column: 19
          },
          end: {
            line: 241,
            column: 20
          }
        },
        loc: {
          start: {
            line: 241,
            column: 25
          },
          end: {
            line: 241,
            column: 26
          }
        },
        line: 241
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 242,
            column: 18
          },
          end: {
            line: 242,
            column: 19
          }
        },
        loc: {
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 242,
            column: 25
          }
        },
        line: 242
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 243,
            column: 17
          },
          end: {
            line: 243,
            column: 18
          }
        },
        loc: {
          start: {
            line: 243,
            column: 23
          },
          end: {
            line: 243,
            column: 24
          }
        },
        line: 243
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 244,
            column: 17
          },
          end: {
            line: 244,
            column: 18
          }
        },
        loc: {
          start: {
            line: 244,
            column: 23
          },
          end: {
            line: 244,
            column: 24
          }
        },
        line: 244
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 245,
            column: 20
          },
          end: {
            line: 245,
            column: 21
          }
        },
        loc: {
          start: {
            line: 245,
            column: 34
          },
          end: {
            line: 249,
            column: 9
          }
        },
        line: 245
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 34
          }
        },
        loc: {
          start: {
            line: 259,
            column: 50
          },
          end: {
            line: 261,
            column: 11
          }
        },
        line: 259
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 268,
            column: 24
          },
          end: {
            line: 268,
            column: 25
          }
        },
        loc: {
          start: {
            line: 268,
            column: 44
          },
          end: {
            line: 270,
            column: 11
          }
        },
        line: 268
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 278,
            column: 2
          },
          end: {
            line: 278,
            column: 3
          }
        },
        loc: {
          start: {
            line: 278,
            column: 38
          },
          end: {
            line: 321,
            column: 3
          }
        },
        line: 278
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 284,
            column: 25
          },
          end: {
            line: 284,
            column: 26
          }
        },
        loc: {
          start: {
            line: 284,
            column: 35
          },
          end: {
            line: 284,
            column: 36
          }
        },
        line: 284
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 285,
            column: 26
          },
          end: {
            line: 285,
            column: 27
          }
        },
        loc: {
          start: {
            line: 285,
            column: 53
          },
          end: {
            line: 285,
            column: 56
          }
        },
        line: 285
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 286,
            column: 23
          },
          end: {
            line: 286,
            column: 24
          }
        },
        loc: {
          start: {
            line: 286,
            column: 38
          },
          end: {
            line: 286,
            column: 40
          }
        },
        line: 286
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 292,
            column: 49
          },
          end: {
            line: 292,
            column: 50
          }
        },
        loc: {
          start: {
            line: 292,
            column: 55
          },
          end: {
            line: 295,
            column: 7
          }
        },
        line: 292
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 296,
            column: 41
          },
          end: {
            line: 296,
            column: 42
          }
        },
        loc: {
          start: {
            line: 296,
            column: 47
          },
          end: {
            line: 296,
            column: 48
          }
        },
        line: 296
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 297,
            column: 40
          },
          end: {
            line: 297,
            column: 41
          }
        },
        loc: {
          start: {
            line: 297,
            column: 46
          },
          end: {
            line: 297,
            column: 69
          }
        },
        line: 297
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 300,
            column: 52
          },
          end: {
            line: 300,
            column: 53
          }
        },
        loc: {
          start: {
            line: 300,
            column: 58
          },
          end: {
            line: 303,
            column: 7
          }
        },
        line: 300
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 304,
            column: 36
          },
          end: {
            line: 304,
            column: 37
          }
        },
        loc: {
          start: {
            line: 304,
            column: 42
          },
          end: {
            line: 304,
            column: 65
          }
        },
        line: 304
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 307,
            column: 53
          },
          end: {
            line: 307,
            column: 54
          }
        },
        loc: {
          start: {
            line: 307,
            column: 59
          },
          end: {
            line: 310,
            column: 7
          }
        },
        line: 307
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 323,
            column: 2
          },
          end: {
            line: 323,
            column: 3
          }
        },
        loc: {
          start: {
            line: 323,
            column: 26
          },
          end: {
            line: 329,
            column: 3
          }
        },
        line: 323
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 331,
            column: 2
          },
          end: {
            line: 331,
            column: 3
          }
        },
        loc: {
          start: {
            line: 331,
            column: 25
          },
          end: {
            line: 340,
            column: 3
          }
        },
        line: 331
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 334,
            column: 14
          },
          end: {
            line: 334,
            column: 15
          }
        },
        loc: {
          start: {
            line: 334,
            column: 22
          },
          end: {
            line: 334,
            column: 54
          }
        },
        line: 334
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 336,
            column: 42
          },
          end: {
            line: 336,
            column: 43
          }
        },
        loc: {
          start: {
            line: 336,
            column: 50
          },
          end: {
            line: 336,
            column: 71
          }
        },
        line: 336
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 342,
            column: 2
          },
          end: {
            line: 342,
            column: 3
          }
        },
        loc: {
          start: {
            line: 342,
            column: 21
          },
          end: {
            line: 362,
            column: 3
          }
        },
        line: 342
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 348,
            column: 13
          },
          end: {
            line: 348,
            column: 14
          }
        },
        loc: {
          start: {
            line: 348,
            column: 31
          },
          end: {
            line: 357,
            column: 9
          }
        },
        line: 348
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 364,
            column: 2
          },
          end: {
            line: 364,
            column: 3
          }
        },
        loc: {
          start: {
            line: 364,
            column: 20
          },
          end: {
            line: 379,
            column: 3
          }
        },
        line: 364
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 381,
            column: 2
          },
          end: {
            line: 381,
            column: 3
          }
        },
        loc: {
          start: {
            line: 381,
            column: 24
          },
          end: {
            line: 391,
            column: 3
          }
        },
        line: 381
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 393,
            column: 2
          },
          end: {
            line: 393,
            column: 3
          }
        },
        loc: {
          start: {
            line: 393,
            column: 21
          },
          end: {
            line: 401,
            column: 3
          }
        },
        line: 393
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 62,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 62,
            column: 43
          }
        }],
        line: 62
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 67,
            column: 35
          }
        }, {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 69,
            column: 36
          }
        }, {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 71,
            column: 37
          }
        }, {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 73,
            column: 63
          }
        }],
        line: 65
      },
      "2": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 26
          }
        }, {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 92,
            column: 49
          }
        }],
        line: 92
      },
      "7": {
        loc: {
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 104,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 104,
            column: 7
          }
        }, {
          start: {
            line: 101,
            column: 13
          },
          end: {
            line: 104,
            column: 7
          }
        }],
        line: 95
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 10
          },
          end: {
            line: 95,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 10
          },
          end: {
            line: 95,
            column: 33
          }
        }, {
          start: {
            line: 95,
            column: 37
          },
          end: {
            line: 95,
            column: 65
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 111,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 111,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 10
          },
          end: {
            line: 107,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 10
          },
          end: {
            line: 107,
            column: 31
          }
        }, {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 59
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 134,
            column: 6
          },
          end: {
            line: 139,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 6
          },
          end: {
            line: 139,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "13": {
        loc: {
          start: {
            line: 134,
            column: 10
          },
          end: {
            line: 134,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 10
          },
          end: {
            line: 134,
            column: 29
          }
        }, {
          start: {
            line: 134,
            column: 33
          },
          end: {
            line: 134,
            column: 57
          }
        }],
        line: 134
      },
      "14": {
        loc: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "15": {
        loc: {
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        }, {
          start: {
            line: 165,
            column: 13
          },
          end: {
            line: 174,
            column: 7
          }
        }],
        line: 158
      },
      "16": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "17": {
        loc: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 209,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 209,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "18": {
        loc: {
          start: {
            line: 201,
            column: 10
          },
          end: {
            line: 201,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 10
          },
          end: {
            line: 201,
            column: 26
          }
        }, {
          start: {
            line: 201,
            column: 30
          },
          end: {
            line: 201,
            column: 59
          }
        }],
        line: 201
      },
      "19": {
        loc: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 263,
            column: 8
          }
        }, {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 272,
            column: 8
          }
        }, {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 274,
            column: 25
          }
        }],
        line: 254
      },
      "20": {
        loc: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 298,
            column: 12
          }
        }, {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 305,
            column: 12
          }
        }, {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 311,
            column: 12
          }
        }],
        line: 290
      },
      "21": {
        loc: {
          start: {
            line: 349,
            column: 10
          },
          end: {
            line: 353,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 10
          },
          end: {
            line: 353,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "22": {
        loc: {
          start: {
            line: 374,
            column: 23
          },
          end: {
            line: 374,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 23
          },
          end: {
            line: 374,
            column: 45
          }
        }, {
          start: {
            line: 374,
            column: 49
          },
          end: {
            line: 374,
            column: 85
          }
        }],
        line: 374
      },
      "23": {
        loc: {
          start: {
            line: 385,
            column: 6
          },
          end: {
            line: 387,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 6
          },
          end: {
            line: 387,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 385
      },
      "24": {
        loc: {
          start: {
            line: 385,
            column: 10
          },
          end: {
            line: 385,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 10
          },
          end: {
            line: 385,
            column: 23
          }
        }, {
          start: {
            line: 385,
            column: 27
          },
          end: {
            line: 385,
            column: 47
          }
        }],
        line: 385
      },
      "25": {
        loc: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2a000676d467e31bc46331976f808ec5393a7daa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28z3ai4p9y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_28z3ai4p9y();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Progressive WASM Module Loader
 * Implements on-demand, eager, and progressive loading strategies
 * for optimal performance and memory usage
 */

import path from 'path';
import { promises as fs } from 'fs';
class WasmModuleLoader {
  constructor() {
    /* istanbul ignore next */
    cov_28z3ai4p9y().f[0]++;
    cov_28z3ai4p9y().s[0]++;
    this.modules = new Map();
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[1]++;
    this.loadingPromises = new Map();
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[2]++;
    this.loadingStrategy = 'on-demand'; // 'eager', 'on-demand', 'progressive'
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[3]++;
    this.moduleManifest = {
      core: {
        path: './wasm/ruv_swarm_wasm_bg.wasm',
        jsBindings: './wasm/ruv_swarm_wasm.js',
        size: 512 * 1024,
        // 512KB
        priority: 'high',
        dependencies: [],
        exists: true,
        // This module definitely exists
        type: 'wasm-bindgen' // Uses wasm-bindgen generated bindings
      },
      // Legacy modules - keep for compatibility but mark as optional
      neural: {
        path: './wasm/ruv-fann.wasm',
        size: 1024 * 1024,
        // 1MB
        priority: 'medium',
        dependencies: ['core'],
        exists: false,
        // This is a standalone module, not currently built
        optional: true
      },
      forecasting: {
        path: './wasm/neuro-divergent.wasm',
        size: 1536 * 1024,
        // 1.5MB
        priority: 'medium',
        dependencies: ['core'],
        exists: false,
        // This is a standalone module, not currently built
        optional: true
      },
      swarm: {
        path: './wasm/ruv-swarm-orchestration.wasm',
        size: 768 * 1024,
        // 768KB
        priority: 'high',
        dependencies: ['core'],
        exists: false,
        // This functionality is in core module
        optional: true
      },
      persistence: {
        path: './wasm/ruv-swarm-persistence.wasm',
        size: 256 * 1024,
        // 256KB
        priority: 'high',
        dependencies: ['core'],
        exists: false,
        // This functionality is handled by Node.js layer
        optional: true
      }
    };
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[4]++;
    this.baseDir = path.join(new URL('.', import.meta.url).pathname, '..');
  }
  initialize() {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* (strategy =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().b[0][0]++, 'progressive')) {
      cov_28z3ai4p9y().f[1]++;
      cov_28z3ai4p9y().s[5]++;
      _this.loadingStrategy = strategy;
      cov_28z3ai4p9y().s[6]++;
      switch (strategy) {
        case 'eager':
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[1][0]++;
          cov_28z3ai4p9y().s[7]++;
          return _this.loadAllModules();
        case 'progressive':
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[1][1]++;
          cov_28z3ai4p9y().s[8]++;
          return _this.loadCoreModules();
        case 'on-demand':
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[1][2]++;
          cov_28z3ai4p9y().s[9]++;
          return _this.setupLazyLoading();
        default:
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[1][3]++;
          cov_28z3ai4p9y().s[10]++;
          throw new Error(`Unknown loading strategy: ${strategy}`);
      }
    }).apply(this, arguments);
  }
  loadModule(moduleName) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_28z3ai4p9y().f[2]++;
      cov_28z3ai4p9y().s[11]++;
      if (_this2.modules.has(moduleName)) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[2][0]++;
        cov_28z3ai4p9y().s[12]++;
        return _this2.modules.get(moduleName);
      } else
      /* istanbul ignore next */
      {
        cov_28z3ai4p9y().b[2][1]++;
      }
      cov_28z3ai4p9y().s[13]++;
      if (_this2.loadingPromises.has(moduleName)) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[3][0]++;
        cov_28z3ai4p9y().s[14]++;
        return _this2.loadingPromises.get(moduleName);
      } else
      /* istanbul ignore next */
      {
        cov_28z3ai4p9y().b[3][1]++;
      }
      const moduleInfo =
      /* istanbul ignore next */
      (cov_28z3ai4p9y().s[15]++, _this2.moduleManifest[moduleName]);
      cov_28z3ai4p9y().s[16]++;
      if (!moduleInfo) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[4][0]++;
        cov_28z3ai4p9y().s[17]++;
        throw new Error(`Unknown module: ${moduleName}`);
      } else
      /* istanbul ignore next */
      {
        cov_28z3ai4p9y().b[4][1]++;
      }

      // Check if module is marked as non-existent and optional
      cov_28z3ai4p9y().s[18]++;
      if (
      /* istanbul ignore next */
      (cov_28z3ai4p9y().b[6][0]++, !moduleInfo.exists) &&
      /* istanbul ignore next */
      (cov_28z3ai4p9y().b[6][1]++, moduleInfo.optional)) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[5][0]++;
        cov_28z3ai4p9y().s[19]++;
        // Silently use core module for neural and forecasting features
        // These are integrated into the core module, not separate files
        if (
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[8][0]++, moduleName === 'neural') ||
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[8][1]++, moduleName === 'forecasting')) {
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[7][0]++;
          cov_28z3ai4p9y().s[20]++;
          if (_this2.modules.has('core')) {
            /* istanbul ignore next */
            cov_28z3ai4p9y().b[9][0]++;
            const coreModule =
            /* istanbul ignore next */
            (cov_28z3ai4p9y().s[21]++, _this2.modules.get('core'));
            /* istanbul ignore next */
            cov_28z3ai4p9y().s[22]++;
            _this2.modules.set(moduleName, coreModule); // Alias to core module
            /* istanbul ignore next */
            cov_28z3ai4p9y().s[23]++;
            return coreModule;
          } else
          /* istanbul ignore next */
          {
            cov_28z3ai4p9y().b[9][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[7][1]++;
          cov_28z3ai4p9y().s[24]++;
          // Only warn for other optional modules
          console.warn(`⚠️ Optional module ${moduleName} is not available, functionality will be provided by core module`);
        }

        // Return a reference to the core module instead of a placeholder
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[25]++;
        if (
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[11][0]++, moduleName !== 'core') &&
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[11][1]++, _this2.modules.has('core'))) {
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[10][0]++;
          const coreModule =
          /* istanbul ignore next */
          (cov_28z3ai4p9y().s[26]++, _this2.modules.get('core'));
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[27]++;
          _this2.modules.set(moduleName, coreModule); // Alias to core module
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[28]++;
          return coreModule;
        } else
        /* istanbul ignore next */
        {
          cov_28z3ai4p9y().b[10][1]++;
        }
        cov_28z3ai4p9y().s[29]++;
        throw new Error(`Optional module ${moduleName} not available and core module not loaded`);
      } else
      /* istanbul ignore next */
      {
        cov_28z3ai4p9y().b[5][1]++;
      }

      // Load dependencies first
      cov_28z3ai4p9y().s[30]++;
      for (const dep of moduleInfo.dependencies) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[31]++;
        /* istanbul ignore next */
        yield _this2.loadModule(dep);
      }
      const loadingPromise =
      /* istanbul ignore next */
      (cov_28z3ai4p9y().s[32]++, _this2.loadWasmModule(moduleName, moduleInfo));
      cov_28z3ai4p9y().s[33]++;
      _this2.loadingPromises.set(moduleName, loadingPromise);
      cov_28z3ai4p9y().s[34]++;
      try {
        const module =
        /* istanbul ignore next */
        (cov_28z3ai4p9y().s[35]++, yield loadingPromise);
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[36]++;
        _this2.modules.set(moduleName, module);
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[37]++;
        _this2.loadingPromises.delete(moduleName);
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[38]++;
        console.log(`✅ Loaded WASM module: ${moduleName} (${_this2.formatBytes(moduleInfo.size)})`);
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[39]++;
        return module;
      } catch (error) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[40]++;
        _this2.loadingPromises.delete(moduleName);

        // If it's an optional module, provide fallback to core functionality
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[41]++;
        if (
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[13][0]++, moduleInfo.optional) &&
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[13][1]++, _this2.modules.has('core'))) {
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[12][0]++;
          cov_28z3ai4p9y().s[42]++;
          console.warn(`⚠️ Optional module ${moduleName} failed to load, using core module functionality`);
          const coreModule =
          /* istanbul ignore next */
          (cov_28z3ai4p9y().s[43]++, _this2.modules.get('core'));
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[44]++;
          _this2.modules.set(moduleName, coreModule);
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[45]++;
          return coreModule;
        } else
        /* istanbul ignore next */
        {
          cov_28z3ai4p9y().b[12][1]++;
        }
        cov_28z3ai4p9y().s[46]++;
        console.error(`❌ Failed to load WASM module: ${moduleName}`, error);
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[47]++;
        throw error;
      }
    })();
  }
  loadWasmModule(moduleName, moduleInfo) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* () {
      cov_28z3ai4p9y().f[3]++;
      cov_28z3ai4p9y().s[48]++;
      // Special handling for the core module which uses ES module bindings
      if (moduleName === 'core') {
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[14][0]++;
        cov_28z3ai4p9y().s[49]++;
        return _this3.loadCoreModule();
      } else
      /* istanbul ignore next */
      {
        cov_28z3ai4p9y().b[14][1]++;
      }

      // For other modules, load the WASM file directly
      const wasmPath =
      /* istanbul ignore next */
      (cov_28z3ai4p9y().s[50]++, path.join(_this3.baseDir, moduleInfo.path));
      cov_28z3ai4p9y().s[51]++;
      try {
        let wasmBuffer;
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[52]++;
        if (typeof window !== 'undefined') {
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[15][0]++;
          // Browser environment
          const response =
          /* istanbul ignore next */
          (cov_28z3ai4p9y().s[53]++, yield fetch(wasmPath));
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[54]++;
          if (!response.ok) {
            /* istanbul ignore next */
            cov_28z3ai4p9y().b[16][0]++;
            cov_28z3ai4p9y().s[55]++;
            throw new Error(`Failed to fetch WASM module: ${response.statusText}`);
          } else
          /* istanbul ignore next */
          {
            cov_28z3ai4p9y().b[16][1]++;
          }
          cov_28z3ai4p9y().s[56]++;
          wasmBuffer =
          /* istanbul ignore next */
          yield response.arrayBuffer();
        } else {
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[15][1]++;
          cov_28z3ai4p9y().s[57]++;
          // Node.js environment
          try {
            /* istanbul ignore next */
            cov_28z3ai4p9y().s[58]++;
            wasmBuffer =
            /* istanbul ignore next */
            yield fs.readFile(wasmPath);
          } catch (error) {
            /* istanbul ignore next */
            cov_28z3ai4p9y().s[59]++;
            // Fallback: module might not exist yet, return a placeholder
            console.warn(`Module ${moduleName} not found at ${wasmPath}, using placeholder`);
            /* istanbul ignore next */
            cov_28z3ai4p9y().s[60]++;
            return _this3.createPlaceholderModule(moduleName);
          }
        }
        const imports =
        /* istanbul ignore next */
        (cov_28z3ai4p9y().s[61]++, _this3.getModuleImports(moduleName));
        const wasmModule =
        /* istanbul ignore next */
        (cov_28z3ai4p9y().s[62]++, yield WebAssembly.instantiate(wasmBuffer, imports));
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[63]++;
        return {
          instance: wasmModule.instance,
          module: wasmModule.module,
          exports: wasmModule.instance.exports,
          memory: wasmModule.instance.exports.memory
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[64]++;
        console.warn(`Failed to load ${moduleName}, using placeholder:`, error.message);
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[65]++;
        return _this3.createPlaceholderModule(moduleName);
      }
    })();
  }
  loadCoreModule() {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* () {
      cov_28z3ai4p9y().f[4]++;
      cov_28z3ai4p9y().s[66]++;
      // Load the core module using ES module bindings
      try {
        // Ensure we're using URL-based import for ES modules
        const wasmJsUrl =
        /* istanbul ignore next */
        (cov_28z3ai4p9y().s[67]++, new URL('../wasm/ruv_swarm_wasm.js', import.meta.url).href);

        // Use dynamic import with URL protocol for ES modules
        const bindings =
        /* istanbul ignore next */
        (cov_28z3ai4p9y().s[68]++, yield import(wasmJsUrl));

        // Initialize WASM module with file buffer for Node.js
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[69]++;
        if (
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[18][0]++, bindings.default) &&
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[18][1]++, typeof window === 'undefined')) {
          /* istanbul ignore next */
          cov_28z3ai4p9y().b[17][0]++;
          const wasmPath =
          /* istanbul ignore next */
          (cov_28z3ai4p9y().s[70]++, path.join(_this4.baseDir, 'wasm', 'ruv_swarm_wasm_bg.wasm'));
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[71]++;
          try {
            const wasmBuffer =
            /* istanbul ignore next */
            (cov_28z3ai4p9y().s[72]++, yield fs.readFile(wasmPath));
            /* istanbul ignore next */
            cov_28z3ai4p9y().s[73]++;
            /* istanbul ignore next */
            yield bindings.default(wasmBuffer);
          } catch (error) {
            /* istanbul ignore next */
            cov_28z3ai4p9y().s[74]++;
            console.warn('Failed to load WASM file, using bindings defaults:', error);
          }
        } else
        /* istanbul ignore next */
        {
          cov_28z3ai4p9y().b[17][1]++;
        }
        cov_28z3ai4p9y().s[75]++;
        return {
          instance: {
            exports: bindings
          },
          module: null,
          exports: bindings,
          memory: bindings.memory
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[76]++;
        console.warn('Failed to load core module bindings:', error);
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[77]++;
        return _this4.createPlaceholderModule('core');
      }
    })();
  }
  getModuleImports(moduleName) {
    /* istanbul ignore next */
    cov_28z3ai4p9y().f[5]++;
    const baseImports =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().s[78]++, {
      env: {
        memory: new WebAssembly.Memory({
          initial: 256,
          maximum: 4096
        })
      },
      wasi_snapshot_preview1: {
        // Basic WASI imports for compatibility
        proc_exit: code => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[6]++;
          cov_28z3ai4p9y().s[79]++;
          throw new Error(`Process exited with code ${code}`);
        },
        fd_write: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[7]++;
          cov_28z3ai4p9y().s[80]++;
          return 0;
        },
        fd_prestat_get: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[8]++;
          cov_28z3ai4p9y().s[81]++;
          return 1;
        },
        fd_prestat_dir_name: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[9]++;
          cov_28z3ai4p9y().s[82]++;
          return 1;
        },
        environ_sizes_get: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[10]++;
          cov_28z3ai4p9y().s[83]++;
          return 0;
        },
        environ_get: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[11]++;
          cov_28z3ai4p9y().s[84]++;
          return 0;
        },
        args_sizes_get: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[12]++;
          cov_28z3ai4p9y().s[85]++;
          return 0;
        },
        args_get: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[13]++;
          cov_28z3ai4p9y().s[86]++;
          return 0;
        },
        clock_time_get: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[14]++;
          cov_28z3ai4p9y().s[87]++;
          return Date.now() * 1000000;
        },
        path_open: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[15]++;
          cov_28z3ai4p9y().s[88]++;
          return 1;
        },
        fd_close: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[16]++;
          cov_28z3ai4p9y().s[89]++;
          return 0;
        },
        fd_read: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[17]++;
          cov_28z3ai4p9y().s[90]++;
          return 0;
        },
        fd_seek: () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[18]++;
          cov_28z3ai4p9y().s[91]++;
          return 0;
        },
        random_get: (ptr, len) => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[19]++;
          const bytes =
          /* istanbul ignore next */
          (cov_28z3ai4p9y().s[92]++, new Uint8Array(this.memory.buffer, ptr, len));
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[93]++;
          crypto.getRandomValues(bytes);
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[94]++;
          return 0;
        }
      }
    });

    // Module-specific imports
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[95]++;
    switch (moduleName) {
      case 'neural':
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[19][0]++;
        cov_28z3ai4p9y().s[96]++;
        return /* istanbul ignore next */_objectSpread(_objectSpread({}, baseImports), {}, {
          neural: {
            log_training_progress: (epoch, loss) => {
              /* istanbul ignore next */
              cov_28z3ai4p9y().f[20]++;
              cov_28z3ai4p9y().s[97]++;
              console.log(`Training progress - Epoch: ${epoch}, Loss: ${loss}`);
            }
          }
        });
      case 'forecasting':
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[19][1]++;
        cov_28z3ai4p9y().s[98]++;
        return /* istanbul ignore next */_objectSpread(_objectSpread({}, baseImports), {}, {
          forecasting: {
            log_forecast: (model, horizon) => {
              /* istanbul ignore next */
              cov_28z3ai4p9y().f[21]++;
              cov_28z3ai4p9y().s[99]++;
              console.log(`Forecasting with model: ${model}, horizon: ${horizon}`);
            }
          }
        });
      default:
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[19][2]++;
        cov_28z3ai4p9y().s[100]++;
        return baseImports;
    }
  }
  createPlaceholderModule(moduleName) {
    /* istanbul ignore next */
    cov_28z3ai4p9y().f[22]++;
    cov_28z3ai4p9y().s[101]++;
    // Create a placeholder module with basic functionality
    console.warn(`Creating placeholder for module: ${moduleName}`);
    const placeholderExports =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().s[102]++, {
      memory: new WebAssembly.Memory({
        initial: 1,
        maximum: 10
      }),
      __wbindgen_malloc: size => {
        /* istanbul ignore next */
        cov_28z3ai4p9y().f[23]++;
        cov_28z3ai4p9y().s[103]++;
        return 0;
      },
      __wbindgen_realloc: (ptr, oldSize, newSize) => {
        /* istanbul ignore next */
        cov_28z3ai4p9y().f[24]++;
        cov_28z3ai4p9y().s[104]++;
        return ptr;
      },
      __wbindgen_free: (ptr, size) => {
        /* istanbul ignore next */
        cov_28z3ai4p9y().f[25]++;
      }
    });

    // Add module-specific placeholder functions
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[105]++;
    switch (moduleName) {
      case 'neural':
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[20][0]++;
        cov_28z3ai4p9y().s[106]++;
        placeholderExports.create_neural_network = () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[26]++;
          cov_28z3ai4p9y().s[107]++;
          console.warn('Neural network module not loaded, using placeholder');
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[108]++;
          return 0;
        };
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[109]++;
        placeholderExports.train_network = () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[27]++;
          cov_28z3ai4p9y().s[110]++;
          return 0;
        };
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[111]++;
        placeholderExports.forward_pass = () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[28]++;
          cov_28z3ai4p9y().s[112]++;
          return new Float32Array([0.5]);
        };
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[113]++;
        break;
      case 'forecasting':
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[20][1]++;
        cov_28z3ai4p9y().s[114]++;
        placeholderExports.create_forecasting_model = () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[29]++;
          cov_28z3ai4p9y().s[115]++;
          console.warn('Forecasting module not loaded, using placeholder');
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[116]++;
          return 0;
        };
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[117]++;
        placeholderExports.forecast = () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[30]++;
          cov_28z3ai4p9y().s[118]++;
          return new Float32Array([0.0]);
        };
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[119]++;
        break;
      case 'swarm':
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[20][2]++;
        cov_28z3ai4p9y().s[120]++;
        placeholderExports.create_swarm_orchestrator = () => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[31]++;
          cov_28z3ai4p9y().s[121]++;
          console.warn('Swarm orchestration module not loaded, using placeholder');
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[122]++;
          return 0;
        };
        /* istanbul ignore next */
        cov_28z3ai4p9y().s[123]++;
        break;
    }
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[124]++;
    return {
      instance: {
        exports: placeholderExports
      },
      module: null,
      exports: placeholderExports,
      memory: placeholderExports.memory,
      isPlaceholder: true
    };
  }
  loadCoreModules() {
    /* istanbul ignore next */
    var _this5 = this;
    return _asyncToGenerator(function* () {
      cov_28z3ai4p9y().f[32]++;
      cov_28z3ai4p9y().s[125]++;
      // Load only the core module - other functionality is included in it
      /* istanbul ignore next */
      yield _this5.loadModule('core');
      cov_28z3ai4p9y().s[126]++;
      console.log('🚀 Core WASM module loaded successfully');
      cov_28z3ai4p9y().s[127]++;
      return true;
    })();
  }
  loadAllModules() {
    /* istanbul ignore next */
    var _this6 = this;
    return _asyncToGenerator(function* () {
      cov_28z3ai4p9y().f[33]++;
      // Only load modules that actually exist
      const existingModules =
      /* istanbul ignore next */
      (cov_28z3ai4p9y().s[128]++, Object.keys(_this6.moduleManifest).filter(name => {
        /* istanbul ignore next */
        cov_28z3ai4p9y().f[34]++;
        cov_28z3ai4p9y().s[129]++;
        return _this6.moduleManifest[name].exists;
      }));
      cov_28z3ai4p9y().s[130]++;
      /* istanbul ignore next */
      yield Promise.all(existingModules.map(name => {
        /* istanbul ignore next */
        cov_28z3ai4p9y().f[35]++;
        cov_28z3ai4p9y().s[131]++;
        return _this6.loadModule(name);
      }));
      cov_28z3ai4p9y().s[132]++;
      console.log(`🎯 All available WASM modules loaded successfully (${existingModules.length} modules)`);
      cov_28z3ai4p9y().s[133]++;
      return true;
    })();
  }
  setupLazyLoading() {
    /* istanbul ignore next */
    cov_28z3ai4p9y().f[36]++;
    // Create proxy objects that load modules on first access
    const moduleProxies =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().s[134]++, {});
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[135]++;
    for (const moduleName of Object.keys(this.moduleManifest)) {
      /* istanbul ignore next */
      cov_28z3ai4p9y().s[136]++;
      moduleProxies[moduleName] = new Proxy({}, {
        get: (target, prop) => {
          /* istanbul ignore next */
          cov_28z3ai4p9y().f[37]++;
          cov_28z3ai4p9y().s[137]++;
          if (!this.modules.has(moduleName)) {
            /* istanbul ignore next */
            cov_28z3ai4p9y().b[21][0]++;
            cov_28z3ai4p9y().s[138]++;
            // Trigger module loading
            this.loadModule(moduleName);
            /* istanbul ignore next */
            cov_28z3ai4p9y().s[139]++;
            throw new Error(`Module ${moduleName} is loading. Please await loadModule('${moduleName}') first.`);
          } else
          /* istanbul ignore next */
          {
            cov_28z3ai4p9y().b[21][1]++;
          }
          const module =
          /* istanbul ignore next */
          (cov_28z3ai4p9y().s[140]++, this.modules.get(moduleName));
          /* istanbul ignore next */
          cov_28z3ai4p9y().s[141]++;
          return module.exports[prop];
        }
      });
    }
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[142]++;
    return moduleProxies;
  }
  getModuleStatus() {
    /* istanbul ignore next */
    cov_28z3ai4p9y().f[38]++;
    const status =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().s[143]++, {});
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[144]++;
    for (const [name, info] of Object.entries(this.moduleManifest)) {
      /* istanbul ignore next */
      cov_28z3ai4p9y().s[145]++;
      status[name] = {
        loaded: this.modules.has(name),
        loading: this.loadingPromises.has(name),
        size: info.size,
        priority: info.priority,
        dependencies: info.dependencies,
        isPlaceholder:
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[22][0]++, this.modules.has(name)) &&
        /* istanbul ignore next */
        (cov_28z3ai4p9y().b[22][1]++, this.modules.get(name).isPlaceholder)
      };
    }
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[146]++;
    return status;
  }
  getTotalMemoryUsage() {
    /* istanbul ignore next */
    cov_28z3ai4p9y().f[39]++;
    let totalBytes =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().s[147]++, 0);
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[148]++;
    for (const module of this.modules.values()) {
      /* istanbul ignore next */
      cov_28z3ai4p9y().s[149]++;
      if (
      /* istanbul ignore next */
      (cov_28z3ai4p9y().b[24][0]++, module.memory) &&
      /* istanbul ignore next */
      (cov_28z3ai4p9y().b[24][1]++, module.memory.buffer)) {
        /* istanbul ignore next */
        cov_28z3ai4p9y().b[23][0]++;
        cov_28z3ai4p9y().s[150]++;
        totalBytes += module.memory.buffer.byteLength;
      } else
      /* istanbul ignore next */
      {
        cov_28z3ai4p9y().b[23][1]++;
      }
    }
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[151]++;
    return totalBytes;
  }
  formatBytes(bytes) {
    /* istanbul ignore next */
    cov_28z3ai4p9y().f[40]++;
    cov_28z3ai4p9y().s[152]++;
    if (bytes === 0) {
      /* istanbul ignore next */
      cov_28z3ai4p9y().b[25][0]++;
      cov_28z3ai4p9y().s[153]++;
      return '0 Bytes';
    } else
    /* istanbul ignore next */
    {
      cov_28z3ai4p9y().b[25][1]++;
    }
    const k =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().s[154]++, 1024);
    const sizes =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().s[155]++, ['Bytes', 'KB', 'MB', 'GB']);
    const i =
    /* istanbul ignore next */
    (cov_28z3ai4p9y().s[156]++, Math.floor(Math.log(bytes) / Math.log(k)));
    /* istanbul ignore next */
    cov_28z3ai4p9y().s[157]++;
    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;
  }
}
export { WasmModuleLoader };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,