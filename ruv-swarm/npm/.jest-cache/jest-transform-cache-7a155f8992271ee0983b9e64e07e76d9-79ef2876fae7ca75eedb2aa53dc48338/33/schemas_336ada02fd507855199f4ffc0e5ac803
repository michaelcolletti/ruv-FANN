23d7a86add7aa88ea78d581ee36b21e9
/* istanbul ignore next */
function cov_1viyw925f1() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/schemas.js";
  var hash = "33af569af02aca78ec2d0136b97cee176945956a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/schemas.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "1": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 58
        }
      },
      "2": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 18,
          column: 7
        }
      },
      "3": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "4": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 23,
          column: 8
        }
      },
      "5": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "6": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 35,
          column: 8
        }
      },
      "7": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "8": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "9": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "10": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 50,
          column: 8
        }
      },
      "11": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "12": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 62,
          column: 7
        }
      },
      "13": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "14": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "15": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "16": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 78,
          column: 7
        }
      },
      "17": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 77,
          column: 10
        }
      },
      "18": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "19": {
        start: {
          line: 83,
          column: 21
        },
        end: {
          line: 83,
          column: 75
        }
      },
      "20": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "21": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "22": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 99,
          column: 7
        }
      },
      "23": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "24": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "25": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 109,
          column: 8
        }
      },
      "26": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "27": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 46
        }
      },
      "28": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "29": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "30": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "31": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "32": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "33": {
        start: {
          line: 129,
          column: 10
        },
        end: {
          line: 129,
          column: 104
        }
      },
      "34": {
        start: {
          line: 130,
          column: 15
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "35": {
        start: {
          line: 131,
          column: 10
        },
        end: {
          line: 136,
          column: 12
        }
      },
      "36": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "37": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 145,
          column: 7
        }
      },
      "38": {
        start: {
          line: 143,
          column: 19
        },
        end: {
          line: 143,
          column: 20
        }
      },
      "39": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 84
        }
      },
      "40": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "41": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "42": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 41
        }
      },
      "43": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 77
        }
      },
      "44": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 42
        }
      },
      "45": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 36
        }
      },
      "46": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 84
        }
      },
      "47": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 43
        }
      },
      "48": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 20
        }
      },
      "49": {
        start: {
          line: 174,
          column: 19
        },
        end: {
          line: 701,
          column: 1
        }
      },
      "50": {
        start: {
          line: 711,
          column: 19
        },
        end: {
          line: 711,
          column: 39
        }
      },
      "51": {
        start: {
          line: 712,
          column: 4
        },
        end: {
          line: 719,
          column: 5
        }
      },
      "52": {
        start: {
          line: 713,
          column: 6
        },
        end: {
          line: 718,
          column: 8
        }
      },
      "53": {
        start: {
          line: 722,
          column: 4
        },
        end: {
          line: 724,
          column: 5
        }
      },
      "54": {
        start: {
          line: 723,
          column: 6
        },
        end: {
          line: 723,
          column: 18
        }
      },
      "55": {
        start: {
          line: 726,
          column: 28
        },
        end: {
          line: 726,
          column: 30
        }
      },
      "56": {
        start: {
          line: 729,
          column: 4
        },
        end: {
          line: 741,
          column: 5
        }
      },
      "57": {
        start: {
          line: 730,
          column: 6
        },
        end: {
          line: 740,
          column: 7
        }
      },
      "58": {
        start: {
          line: 731,
          column: 22
        },
        end: {
          line: 731,
          column: 39
        }
      },
      "59": {
        start: {
          line: 732,
          column: 8
        },
        end: {
          line: 732,
          column: 91
        }
      },
      "60": {
        start: {
          line: 735,
          column: 8
        },
        end: {
          line: 738,
          column: 9
        }
      },
      "61": {
        start: {
          line: 736,
          column: 10
        },
        end: {
          line: 736,
          column: 40
        }
      },
      "62": {
        start: {
          line: 737,
          column: 10
        },
        end: {
          line: 737,
          column: 45
        }
      },
      "63": {
        start: {
          line: 739,
          column: 8
        },
        end: {
          line: 739,
          column: 20
        }
      },
      "64": {
        start: {
          line: 744,
          column: 26
        },
        end: {
          line: 744,
          column: 45
        }
      },
      "65": {
        start: {
          line: 745,
          column: 27
        },
        end: {
          line: 745,
          column: 46
        }
      },
      "66": {
        start: {
          line: 746,
          column: 29
        },
        end: {
          line: 746,
          column: 91
        }
      },
      "67": {
        start: {
          line: 746,
          column: 60
        },
        end: {
          line: 746,
          column: 90
        }
      },
      "68": {
        start: {
          line: 748,
          column: 4
        },
        end: {
          line: 751,
          column: 5
        }
      },
      "69": {
        start: {
          line: 749,
          column: 6
        },
        end: {
          line: 749,
          column: 92
        }
      },
      "70": {
        start: {
          line: 753,
          column: 4
        },
        end: {
          line: 753,
          column: 27
        }
      },
      "71": {
        start: {
          line: 760,
          column: 19
        },
        end: {
          line: 760,
          column: 39
        }
      },
      "72": {
        start: {
          line: 761,
          column: 4
        },
        end: {
          line: 763,
          column: 5
        }
      },
      "73": {
        start: {
          line: 762,
          column: 6
        },
        end: {
          line: 762,
          column: 18
        }
      },
      "74": {
        start: {
          line: 765,
          column: 16
        },
        end: {
          line: 768,
          column: 5
        }
      },
      "75": {
        start: {
          line: 770,
          column: 4
        },
        end: {
          line: 793,
          column: 5
        }
      },
      "76": {
        start: {
          line: 771,
          column: 6
        },
        end: {
          line: 776,
          column: 8
        }
      },
      "77": {
        start: {
          line: 778,
          column: 6
        },
        end: {
          line: 780,
          column: 7
        }
      },
      "78": {
        start: {
          line: 779,
          column: 8
        },
        end: {
          line: 779,
          column: 67
        }
      },
      "79": {
        start: {
          line: 781,
          column: 6
        },
        end: {
          line: 786,
          column: 7
        }
      },
      "80": {
        start: {
          line: 782,
          column: 8
        },
        end: {
          line: 785,
          column: 10
        }
      },
      "81": {
        start: {
          line: 787,
          column: 6
        },
        end: {
          line: 792,
          column: 7
        }
      },
      "82": {
        start: {
          line: 788,
          column: 8
        },
        end: {
          line: 791,
          column: 10
        }
      },
      "83": {
        start: {
          line: 795,
          column: 4
        },
        end: {
          line: 795,
          column: 15
        }
      },
      "84": {
        start: {
          line: 802,
          column: 15
        },
        end: {
          line: 802,
          column: 46
        }
      },
      "85": {
        start: {
          line: 804,
          column: 4
        },
        end: {
          line: 811,
          column: 5
        }
      },
      "86": {
        start: {
          line: 805,
          column: 6
        },
        end: {
          line: 805,
          column: 28
        }
      },
      "87": {
        start: {
          line: 807,
          column: 6
        },
        end: {
          line: 807,
          column: 28
        }
      },
      "88": {
        start: {
          line: 808,
          column: 6
        },
        end: {
          line: 810,
          column: 7
        }
      },
      "89": {
        start: {
          line: 809,
          column: 8
        },
        end: {
          line: 809,
          column: 47
        }
      },
      "90": {
        start: {
          line: 813,
          column: 4
        },
        end: {
          line: 815,
          column: 5
        }
      },
      "91": {
        start: {
          line: 814,
          column: 6
        },
        end: {
          line: 814,
          column: 60
        }
      },
      "92": {
        start: {
          line: 817,
          column: 4
        },
        end: {
          line: 819,
          column: 5
        }
      },
      "93": {
        start: {
          line: 818,
          column: 6
        },
        end: {
          line: 818,
          column: 74
        }
      },
      "94": {
        start: {
          line: 821,
          column: 4
        },
        end: {
          line: 823,
          column: 5
        }
      },
      "95": {
        start: {
          line: 822,
          column: 6
        },
        end: {
          line: 822,
          column: 89
        }
      },
      "96": {
        start: {
          line: 825,
          column: 4
        },
        end: {
          line: 825,
          column: 16
        }
      },
      "97": {
        start: {
          line: 832,
          column: 4
        },
        end: {
          line: 832,
          column: 35
        }
      },
      "98": {
        start: {
          line: 839,
          column: 22
        },
        end: {
          line: 839,
          column: 98
        }
      },
      "99": {
        start: {
          line: 840,
          column: 4
        },
        end: {
          line: 840,
          column: 31
        }
      },
      "100": {
        start: {
          line: 847,
          column: 4
        },
        end: {
          line: 850,
          column: 5
        }
      },
      "101": {
        start: {
          line: 849,
          column: 6
        },
        end: {
          line: 849,
          column: 61
        }
      },
      "102": {
        start: {
          line: 851,
          column: 4
        },
        end: {
          line: 851,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        loc: {
          start: {
            line: 12,
            column: 54
          },
          end: {
            line: 25,
            column: 3
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 49
          },
          end: {
            line: 149,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 151,
            column: 2
          },
          end: {
            line: 151,
            column: 3
          }
        },
        loc: {
          start: {
            line: 151,
            column: 43
          },
          end: {
            line: 168,
            column: 3
          }
        },
        line: 151
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 710,
            column: 2
          },
          end: {
            line: 710,
            column: 3
          }
        },
        loc: {
          start: {
            line: 710,
            column: 42
          },
          end: {
            line: 754,
            column: 3
          }
        },
        line: 710
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 746,
            column: 51
          },
          end: {
            line: 746,
            column: 52
          }
        },
        loc: {
          start: {
            line: 746,
            column: 60
          },
          end: {
            line: 746,
            column: 90
          }
        },
        line: 746
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 759,
            column: 2
          },
          end: {
            line: 759,
            column: 3
          }
        },
        loc: {
          start: {
            line: 759,
            column: 32
          },
          end: {
            line: 796,
            column: 3
          }
        },
        line: 759
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 801,
            column: 2
          },
          end: {
            line: 801,
            column: 3
          }
        },
        loc: {
          start: {
            line: 801,
            column: 53
          },
          end: {
            line: 826,
            column: 3
          }
        },
        line: 801
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 831,
            column: 2
          },
          end: {
            line: 831,
            column: 3
          }
        },
        loc: {
          start: {
            line: 831,
            column: 25
          },
          end: {
            line: 833,
            column: 3
          }
        },
        line: 831
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 838,
            column: 2
          },
          end: {
            line: 838,
            column: 3
          }
        },
        loc: {
          start: {
            line: 838,
            column: 26
          },
          end: {
            line: 841,
            column: 3
          }
        },
        line: 838
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 846,
            column: 2
          },
          end: {
            line: 846,
            column: 3
          }
        },
        loc: {
          start: {
            line: 846,
            column: 30
          },
          end: {
            line: 852,
            column: 3
          }
        },
        line: 846
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 12,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 45
          },
          end: {
            line: 12,
            column: 52
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 18,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 18,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 23
          }
        }, {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 29,
            column: 47
          }
        }, {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 24
          }
        }, {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 48
          }
        }, {
          start: {
            line: 39,
            column: 52
          },
          end: {
            line: 39,
            column: 66
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 19
          }
        }, {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 61
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 6
          },
          end: {
            line: 62,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 6
          },
          end: {
            line: 62,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 10
          },
          end: {
            line: 55,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 10
          },
          end: {
            line: 55,
            column: 34
          }
        }, {
          start: {
            line: 55,
            column: 38
          },
          end: {
            line: 55,
            column: 56
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 10
          },
          end: {
            line: 63,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 10
          },
          end: {
            line: 63,
            column: 34
          }
        }, {
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 63,
            column: 56
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 78,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 78,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "14": {
        loc: {
          start: {
            line: 71,
            column: 10
          },
          end: {
            line: 71,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 10
          },
          end: {
            line: 71,
            column: 24
          }
        }, {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 52
          }
        }],
        line: 71
      },
      "15": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "16": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 32
          }
        }, {
          start: {
            line: 82,
            column: 36
          },
          end: {
            line: 82,
            column: 59
          }
        }],
        line: 82
      },
      "17": {
        loc: {
          start: {
            line: 83,
            column: 21
          },
          end: {
            line: 83,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 48
          },
          end: {
            line: 83,
            column: 60
          }
        }, {
          start: {
            line: 83,
            column: 63
          },
          end: {
            line: 83,
            column: 75
          }
        }],
        line: 83
      },
      "18": {
        loc: {
          start: {
            line: 84,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "19": {
        loc: {
          start: {
            line: 84,
            column: 10
          },
          end: {
            line: 84,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 10
          },
          end: {
            line: 84,
            column: 40
          }
        }, {
          start: {
            line: 84,
            column: 44
          },
          end: {
            line: 84,
            column: 69
          }
        }],
        line: 84
      },
      "20": {
        loc: {
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 99,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 99,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "21": {
        loc: {
          start: {
            line: 92,
            column: 10
          },
          end: {
            line: 92,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 10
          },
          end: {
            line: 92,
            column: 40
          }
        }, {
          start: {
            line: 92,
            column: 44
          },
          end: {
            line: 92,
            column: 69
          }
        }],
        line: 92
      },
      "22": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "23": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 19
          }
        }, {
          start: {
            line: 103,
            column: 23
          },
          end: {
            line: 103,
            column: 51
          }
        }],
        line: 103
      },
      "24": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "25": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 113,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 113,
            column: 32
          }
        }, {
          start: {
            line: 113,
            column: 36
          },
          end: {
            line: 113,
            column: 50
          }
        }],
        line: 113
      },
      "26": {
        loc: {
          start: {
            line: 115,
            column: 6
          },
          end: {
            line: 122,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 6
          },
          end: {
            line: 122,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "27": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "28": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 32
          }
        }, {
          start: {
            line: 126,
            column: 36
          },
          end: {
            line: 126,
            column: 53
          }
        }],
        line: 126
      },
      "29": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: 130,
            column: 15
          },
          end: {
            line: 137,
            column: 9
          }
        }],
        line: 128
      },
      "30": {
        loc: {
          start: {
            line: 130,
            column: 15
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 15
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "31": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "32": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 31
          }
        }, {
          start: {
            line: 142,
            column: 35
          },
          end: {
            line: 142,
            column: 47
          }
        }],
        line: 142
      },
      "33": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 153,
            column: 6
          },
          end: {
            line: 154,
            column: 41
          }
        }, {
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 156,
            column: 77
          }
        }, {
          start: {
            line: 157,
            column: 6
          },
          end: {
            line: 158,
            column: 42
          }
        }, {
          start: {
            line: 159,
            column: 6
          },
          end: {
            line: 160,
            column: 36
          }
        }, {
          start: {
            line: 161,
            column: 6
          },
          end: {
            line: 162,
            column: 84
          }
        }, {
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 164,
            column: 43
          }
        }, {
          start: {
            line: 165,
            column: 6
          },
          end: {
            line: 166,
            column: 20
          }
        }],
        line: 152
      },
      "34": {
        loc: {
          start: {
            line: 156,
            column: 15
          },
          end: {
            line: 156,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 15
          },
          end: {
            line: 156,
            column: 40
          }
        }, {
          start: {
            line: 156,
            column: 44
          },
          end: {
            line: 156,
            column: 57
          }
        }, {
          start: {
            line: 156,
            column: 61
          },
          end: {
            line: 156,
            column: 76
          }
        }],
        line: 156
      },
      "35": {
        loc: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 40
          }
        }, {
          start: {
            line: 162,
            column: 44
          },
          end: {
            line: 162,
            column: 58
          }
        }, {
          start: {
            line: 162,
            column: 62
          },
          end: {
            line: 162,
            column: 83
          }
        }],
        line: 162
      },
      "36": {
        loc: {
          start: {
            line: 712,
            column: 4
          },
          end: {
            line: 719,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 712,
            column: 4
          },
          end: {
            line: 719,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 712
      },
      "37": {
        loc: {
          start: {
            line: 722,
            column: 4
          },
          end: {
            line: 724,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 722,
            column: 4
          },
          end: {
            line: 724,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 722
      },
      "38": {
        loc: {
          start: {
            line: 722,
            column: 8
          },
          end: {
            line: 722,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 722,
            column: 8
          },
          end: {
            line: 722,
            column: 15
          }
        }, {
          start: {
            line: 722,
            column: 19
          },
          end: {
            line: 722,
            column: 45
          }
        }],
        line: 722
      },
      "39": {
        loc: {
          start: {
            line: 735,
            column: 8
          },
          end: {
            line: 738,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 735,
            column: 8
          },
          end: {
            line: 738,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 735
      },
      "40": {
        loc: {
          start: {
            line: 748,
            column: 4
          },
          end: {
            line: 751,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 748,
            column: 4
          },
          end: {
            line: 751,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 748
      },
      "41": {
        loc: {
          start: {
            line: 761,
            column: 4
          },
          end: {
            line: 763,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 761,
            column: 4
          },
          end: {
            line: 763,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 761
      },
      "42": {
        loc: {
          start: {
            line: 773,
            column: 18
          },
          end: {
            line: 773,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 773,
            column: 18
          },
          end: {
            line: 773,
            column: 38
          }
        }, {
          start: {
            line: 773,
            column: 42
          },
          end: {
            line: 773,
            column: 47
          }
        }],
        line: 773
      },
      "43": {
        loc: {
          start: {
            line: 778,
            column: 6
          },
          end: {
            line: 780,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 778,
            column: 6
          },
          end: {
            line: 780,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 778
      },
      "44": {
        loc: {
          start: {
            line: 781,
            column: 6
          },
          end: {
            line: 786,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 781,
            column: 6
          },
          end: {
            line: 786,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 781
      },
      "45": {
        loc: {
          start: {
            line: 781,
            column: 10
          },
          end: {
            line: 781,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 781,
            column: 10
          },
          end: {
            line: 781,
            column: 39
          }
        }, {
          start: {
            line: 781,
            column: 43
          },
          end: {
            line: 781,
            column: 72
          }
        }],
        line: 781
      },
      "46": {
        loc: {
          start: {
            line: 787,
            column: 6
          },
          end: {
            line: 792,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 787,
            column: 6
          },
          end: {
            line: 792,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 787
      },
      "47": {
        loc: {
          start: {
            line: 787,
            column: 10
          },
          end: {
            line: 787,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 787,
            column: 10
          },
          end: {
            line: 787,
            column: 45
          }
        }, {
          start: {
            line: 787,
            column: 49
          },
          end: {
            line: 787,
            column: 84
          }
        }],
        line: 787
      },
      "48": {
        loc: {
          start: {
            line: 804,
            column: 4
          },
          end: {
            line: 811,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 804,
            column: 4
          },
          end: {
            line: 811,
            column: 5
          }
        }, {
          start: {
            line: 806,
            column: 11
          },
          end: {
            line: 811,
            column: 5
          }
        }],
        line: 804
      },
      "49": {
        loc: {
          start: {
            line: 808,
            column: 6
          },
          end: {
            line: 810,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 808,
            column: 6
          },
          end: {
            line: 810,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 808
      },
      "50": {
        loc: {
          start: {
            line: 813,
            column: 4
          },
          end: {
            line: 815,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 813,
            column: 4
          },
          end: {
            line: 815,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 813
      },
      "51": {
        loc: {
          start: {
            line: 817,
            column: 4
          },
          end: {
            line: 819,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 817,
            column: 4
          },
          end: {
            line: 819,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 817
      },
      "52": {
        loc: {
          start: {
            line: 817,
            column: 8
          },
          end: {
            line: 817,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 817,
            column: 8
          },
          end: {
            line: 817,
            column: 32
          }
        }, {
          start: {
            line: 817,
            column: 36
          },
          end: {
            line: 817,
            column: 60
          }
        }],
        line: 817
      },
      "53": {
        loc: {
          start: {
            line: 818,
            column: 26
          },
          end: {
            line: 818,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 818,
            column: 26
          },
          end: {
            line: 818,
            column: 36
          }
        }, {
          start: {
            line: 818,
            column: 40
          },
          end: {
            line: 818,
            column: 45
          }
        }],
        line: 818
      },
      "54": {
        loc: {
          start: {
            line: 818,
            column: 52
          },
          end: {
            line: 818,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 818,
            column: 52
          },
          end: {
            line: 818,
            column: 62
          }
        }, {
          start: {
            line: 818,
            column: 66
          },
          end: {
            line: 818,
            column: 71
          }
        }],
        line: 818
      },
      "55": {
        loc: {
          start: {
            line: 821,
            column: 4
          },
          end: {
            line: 823,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 821,
            column: 4
          },
          end: {
            line: 823,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 821
      },
      "56": {
        loc: {
          start: {
            line: 821,
            column: 8
          },
          end: {
            line: 821,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 821,
            column: 8
          },
          end: {
            line: 821,
            column: 38
          }
        }, {
          start: {
            line: 821,
            column: 42
          },
          end: {
            line: 821,
            column: 72
          }
        }],
        line: 821
      },
      "57": {
        loc: {
          start: {
            line: 822,
            column: 27
          },
          end: {
            line: 822,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 822,
            column: 27
          },
          end: {
            line: 822,
            column: 43
          }
        }, {
          start: {
            line: 822,
            column: 47
          },
          end: {
            line: 822,
            column: 48
          }
        }],
        line: 822
      },
      "58": {
        loc: {
          start: {
            line: 822,
            column: 55
          },
          end: {
            line: 822,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 822,
            column: 55
          },
          end: {
            line: 822,
            column: 71
          }
        }, {
          start: {
            line: 822,
            column: 75
          },
          end: {
            line: 822,
            column: 86
          }
        }],
        line: 822
      },
      "59": {
        loc: {
          start: {
            line: 847,
            column: 4
          },
          end: {
            line: 850,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 847,
            column: 4
          },
          end: {
            line: 850,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 847
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0, 0, 0, 0, 0],
      "34": [0, 0, 0],
      "35": [0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33af569af02aca78ec2d0136b97cee176945956a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1viyw925f1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1viyw925f1();
/**
 * Input Validation Schemas for RUV-Swarm MCP Tools
 * Provides comprehensive validation for all 25+ MCP tools
 */

import { ValidationError } from './errors.js';

/**
 * Base validator class
 */
class BaseValidator {
  static validate(value, schema, fieldName =
  /* istanbul ignore next */
  (cov_1viyw925f1().b[0][0]++, 'value')) {
    /* istanbul ignore next */
    cov_1viyw925f1().f[0]++;
    cov_1viyw925f1().s[0]++;
    try {
      /* istanbul ignore next */
      cov_1viyw925f1().s[1]++;
      return this.validateValue(value, schema, fieldName);
    } catch (error) {
      /* istanbul ignore next */
      cov_1viyw925f1().s[2]++;
      if (error instanceof ValidationError) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[1][0]++;
        cov_1viyw925f1().s[3]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[1][1]++;
      }
      cov_1viyw925f1().s[4]++;
      throw new ValidationError(`Validation failed for ${fieldName}: ${error.message}`, fieldName, value);
    }
  }
  static validateValue(value, schema, fieldName) {
    /* istanbul ignore next */
    cov_1viyw925f1().f[1]++;
    cov_1viyw925f1().s[5]++;
    // Handle required fields
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[3][0]++, schema.required) && (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[3][1]++, value === undefined) ||
    /* istanbul ignore next */
    (cov_1viyw925f1().b[3][2]++, value === null))) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[2][0]++;
      cov_1viyw925f1().s[6]++;
      throw new ValidationError(`${fieldName} is required`, fieldName, value, schema.type);
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[2][1]++;
    }

    // Handle optional fields
    cov_1viyw925f1().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[5][0]++, !schema.required) && (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[5][1]++, value === undefined) ||
    /* istanbul ignore next */
    (cov_1viyw925f1().b[5][2]++, value === null))) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[4][0]++;
      cov_1viyw925f1().s[8]++;
      return schema.default;
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[4][1]++;
    }

    // Type validation
    cov_1viyw925f1().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[7][0]++, schema.type) &&
    /* istanbul ignore next */
    (cov_1viyw925f1().b[7][1]++, !this.validateType(value, schema.type))) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[6][0]++;
      cov_1viyw925f1().s[10]++;
      throw new ValidationError(`${fieldName} must be of type ${schema.type}`, fieldName, value, schema.type);
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[6][1]++;
    }

    // Range validation for numbers
    cov_1viyw925f1().s[11]++;
    if (schema.type === 'number') {
      /* istanbul ignore next */
      cov_1viyw925f1().b[8][0]++;
      cov_1viyw925f1().s[12]++;
      if (
      /* istanbul ignore next */
      (cov_1viyw925f1().b[10][0]++, schema.min !== undefined) &&
      /* istanbul ignore next */
      (cov_1viyw925f1().b[10][1]++, value < schema.min)) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[9][0]++;
        cov_1viyw925f1().s[13]++;
        throw new ValidationError(`${fieldName} must be at least ${schema.min}`, fieldName, value, schema.type);
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[9][1]++;
      }
      cov_1viyw925f1().s[14]++;
      if (
      /* istanbul ignore next */
      (cov_1viyw925f1().b[12][0]++, schema.max !== undefined) &&
      /* istanbul ignore next */
      (cov_1viyw925f1().b[12][1]++, value > schema.max)) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[11][0]++;
        cov_1viyw925f1().s[15]++;
        throw new ValidationError(`${fieldName} must be at most ${schema.max}`, fieldName, value, schema.type);
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[11][1]++;
      }
      cov_1viyw925f1().s[16]++;
      if (
      /* istanbul ignore next */
      (cov_1viyw925f1().b[14][0]++, schema.integer) &&
      /* istanbul ignore next */
      (cov_1viyw925f1().b[14][1]++, !Number.isInteger(value))) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[13][0]++;
        cov_1viyw925f1().s[17]++;
        throw new ValidationError(`${fieldName} must be an integer`, fieldName, value, 'integer');
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[8][1]++;
    }

    // Length validation for strings and arrays
    cov_1viyw925f1().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[16][0]++, schema.type === 'string') ||
    /* istanbul ignore next */
    (cov_1viyw925f1().b[16][1]++, schema.type === 'array')) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[15][0]++;
      const length =
      /* istanbul ignore next */
      (cov_1viyw925f1().s[19]++, schema.type === 'string' ?
      /* istanbul ignore next */
      (cov_1viyw925f1().b[17][0]++, value.length) :
      /* istanbul ignore next */
      (cov_1viyw925f1().b[17][1]++, value.length));
      /* istanbul ignore next */
      cov_1viyw925f1().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_1viyw925f1().b[19][0]++, schema.minLength !== undefined) &&
      /* istanbul ignore next */
      (cov_1viyw925f1().b[19][1]++, length < schema.minLength)) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[18][0]++;
        cov_1viyw925f1().s[21]++;
        throw new ValidationError(`${fieldName} must be at least ${schema.minLength} characters/items long`, fieldName, value, schema.type);
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[18][1]++;
      }
      cov_1viyw925f1().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_1viyw925f1().b[21][0]++, schema.maxLength !== undefined) &&
      /* istanbul ignore next */
      (cov_1viyw925f1().b[21][1]++, length > schema.maxLength)) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[20][0]++;
        cov_1viyw925f1().s[23]++;
        throw new ValidationError(`${fieldName} must be at most ${schema.maxLength} characters/items long`, fieldName, value, schema.type);
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[20][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[15][1]++;
    }

    // Enum validation
    cov_1viyw925f1().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[23][0]++, schema.enum) &&
    /* istanbul ignore next */
    (cov_1viyw925f1().b[23][1]++, !schema.enum.includes(value))) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[22][0]++;
      cov_1viyw925f1().s[25]++;
      throw new ValidationError(`${fieldName} must be one of: ${schema.enum.join(', ')}`, fieldName, value, `enum(${schema.enum.join('|')})`);
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[22][1]++;
    }

    // Pattern validation for strings
    cov_1viyw925f1().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[25][0]++, schema.type === 'string') &&
    /* istanbul ignore next */
    (cov_1viyw925f1().b[25][1]++, schema.pattern)) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[24][0]++;
      const regex =
      /* istanbul ignore next */
      (cov_1viyw925f1().s[27]++, new RegExp(schema.pattern));
      /* istanbul ignore next */
      cov_1viyw925f1().s[28]++;
      if (!regex.test(value)) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[26][0]++;
        cov_1viyw925f1().s[29]++;
        throw new ValidationError(`${fieldName} does not match the required pattern`, fieldName, value, 'string(pattern)');
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[26][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[24][1]++;
    }

    // Object property validation
    cov_1viyw925f1().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[28][0]++, schema.type === 'object') &&
    /* istanbul ignore next */
    (cov_1viyw925f1().b[28][1]++, schema.properties)) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[27][0]++;
      cov_1viyw925f1().s[31]++;
      for (const [propName, propSchema] of Object.entries(schema.properties)) {
        /* istanbul ignore next */
        cov_1viyw925f1().s[32]++;
        if (value[propName] !== undefined) {
          /* istanbul ignore next */
          cov_1viyw925f1().b[29][0]++;
          cov_1viyw925f1().s[33]++;
          value[propName] = this.validateValue(value[propName], propSchema, `${fieldName}.${propName}`);
        } else {
          /* istanbul ignore next */
          cov_1viyw925f1().b[29][1]++;
          cov_1viyw925f1().s[34]++;
          if (propSchema.required) {
            /* istanbul ignore next */
            cov_1viyw925f1().b[30][0]++;
            cov_1viyw925f1().s[35]++;
            throw new ValidationError(`${fieldName}.${propName} is required`, `${fieldName}.${propName}`, undefined, propSchema.type);
          } else
          /* istanbul ignore next */
          {
            cov_1viyw925f1().b[30][1]++;
          }
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[27][1]++;
    }

    // Array item validation
    cov_1viyw925f1().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[32][0]++, schema.type === 'array') &&
    /* istanbul ignore next */
    (cov_1viyw925f1().b[32][1]++, schema.items)) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[31][0]++;
      cov_1viyw925f1().s[37]++;
      for (let i =
      /* istanbul ignore next */
      (cov_1viyw925f1().s[38]++, 0); i < value.length; i++) {
        /* istanbul ignore next */
        cov_1viyw925f1().s[39]++;
        value[i] = this.validateValue(value[i], schema.items, `${fieldName}[${i}]`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[31][1]++;
    }
    cov_1viyw925f1().s[40]++;
    return value;
  }
  static validateType(value, expectedType) {
    /* istanbul ignore next */
    cov_1viyw925f1().f[2]++;
    cov_1viyw925f1().s[41]++;
    switch (expectedType) {
      case 'string':
        /* istanbul ignore next */
        cov_1viyw925f1().b[33][0]++;
        cov_1viyw925f1().s[42]++;
        return typeof value === 'string';
      case 'number':
        /* istanbul ignore next */
        cov_1viyw925f1().b[33][1]++;
        cov_1viyw925f1().s[43]++;
        return /* istanbul ignore next */(cov_1viyw925f1().b[34][0]++, typeof value === 'number') &&
        /* istanbul ignore next */
        (cov_1viyw925f1().b[34][1]++, !isNaN(value)) &&
        /* istanbul ignore next */
        (cov_1viyw925f1().b[34][2]++, isFinite(value));
      case 'boolean':
        /* istanbul ignore next */
        cov_1viyw925f1().b[33][2]++;
        cov_1viyw925f1().s[44]++;
        return typeof value === 'boolean';
      case 'array':
        /* istanbul ignore next */
        cov_1viyw925f1().b[33][3]++;
        cov_1viyw925f1().s[45]++;
        return Array.isArray(value);
      case 'object':
        /* istanbul ignore next */
        cov_1viyw925f1().b[33][4]++;
        cov_1viyw925f1().s[46]++;
        return /* istanbul ignore next */(cov_1viyw925f1().b[35][0]++, typeof value === 'object') &&
        /* istanbul ignore next */
        (cov_1viyw925f1().b[35][1]++, value !== null) &&
        /* istanbul ignore next */
        (cov_1viyw925f1().b[35][2]++, !Array.isArray(value));
      case 'function':
        /* istanbul ignore next */
        cov_1viyw925f1().b[33][5]++;
        cov_1viyw925f1().s[47]++;
        return typeof value === 'function';
      default:
        /* istanbul ignore next */
        cov_1viyw925f1().b[33][6]++;
        cov_1viyw925f1().s[48]++;
        return true;
    }
  }
}

/**
 * Schema definitions for all MCP tools
 */
const MCPSchemas =
/* istanbul ignore next */
(cov_1viyw925f1().s[49]++, {
  // Core Swarm Management
  swarm_init: {
    topology: {
      type: 'string',
      enum: ['mesh', 'hierarchical', 'ring', 'star'],
      default: 'mesh'
    },
    maxAgents: {
      type: 'number',
      integer: true,
      min: 1,
      max: 100,
      default: 5
    },
    strategy: {
      type: 'string',
      enum: ['balanced', 'specialized', 'adaptive'],
      default: 'balanced'
    },
    enableCognitiveDiversity: {
      type: 'boolean',
      default: true
    },
    enableNeuralAgents: {
      type: 'boolean',
      default: true
    },
    enableForecasting: {
      type: 'boolean',
      default: false
    }
  },
  agent_spawn: {
    type: {
      type: 'string',
      enum: ['researcher', 'coder', 'analyst', 'optimizer', 'coordinator', 'tester', 'reviewer', 'documenter'],
      default: 'researcher'
    },
    name: {
      type: 'string',
      minLength: 1,
      maxLength: 100,
      required: false
    },
    capabilities: {
      type: 'array',
      items: {
        type: 'string',
        minLength: 1
      },
      required: false
    },
    cognitivePattern: {
      type: 'string',
      enum: ['convergent', 'divergent', 'lateral', 'systems', 'critical', 'adaptive'],
      required: false
    },
    swarmId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    }
  },
  task_orchestrate: {
    task: {
      type: 'string',
      required: true,
      minLength: 1,
      maxLength: 1000
    },
    priority: {
      type: 'string',
      enum: ['low', 'medium', 'high', 'critical'],
      default: 'medium'
    },
    strategy: {
      type: 'string',
      enum: ['parallel', 'sequential', 'adaptive'],
      default: 'adaptive'
    },
    maxAgents: {
      type: 'number',
      integer: true,
      min: 1,
      max: 50,
      required: false
    },
    swarmId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    },
    requiredCapabilities: {
      type: 'array',
      items: {
        type: 'string',
        minLength: 1
      },
      required: false
    },
    estimatedDuration: {
      type: 'number',
      min: 1000,
      max: 3600000,
      // 1 hour max
      required: false
    }
  },
  swarm_status: {
    verbose: {
      type: 'boolean',
      default: false
    },
    swarmId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    }
  },
  task_status: {
    taskId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    },
    detailed: {
      type: 'boolean',
      default: false
    }
  },
  task_results: {
    taskId: {
      type: 'string',
      required: true,
      pattern: '^[a-fA-F0-9-]+$'
    },
    format: {
      type: 'string',
      enum: ['summary', 'detailed', 'raw', 'performance'],
      default: 'summary'
    },
    includeAgentResults: {
      type: 'boolean',
      default: true
    }
  },
  agent_list: {
    filter: {
      type: 'string',
      enum: ['all', 'active', 'idle', 'busy'],
      default: 'all'
    },
    swarmId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    }
  },
  agent_metrics: {
    agentId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    },
    swarmId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    },
    metric: {
      type: 'string',
      enum: ['all', 'cpu', 'memory', 'tasks', 'performance', 'neural'],
      default: 'all'
    }
  },
  benchmark_run: {
    type: {
      type: 'string',
      enum: ['all', 'wasm', 'swarm', 'agent', 'task', 'neural'],
      default: 'all'
    },
    iterations: {
      type: 'number',
      integer: true,
      min: 1,
      max: 100,
      default: 10
    },
    includeNeuralBenchmarks: {
      type: 'boolean',
      default: true
    },
    includeSwarmBenchmarks: {
      type: 'boolean',
      default: true
    }
  },
  features_detect: {
    category: {
      type: 'string',
      enum: ['all', 'wasm', 'simd', 'memory', 'platform', 'neural', 'forecasting'],
      default: 'all'
    }
  },
  memory_usage: {
    detail: {
      type: 'string',
      enum: ['summary', 'detailed', 'by-agent'],
      default: 'summary'
    }
  },
  // Neural Network Tools
  neural_status: {
    agentId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    }
  },
  neural_train: {
    agentId: {
      type: 'string',
      required: true,
      pattern: '^[a-fA-F0-9-]+$'
    },
    iterations: {
      type: 'number',
      integer: true,
      min: 1,
      max: 1000,
      default: 10
    },
    learningRate: {
      type: 'number',
      min: 0.00001,
      max: 1.0,
      default: 0.001
    },
    modelType: {
      type: 'string',
      enum: ['feedforward', 'lstm', 'transformer', 'attention', 'cnn', 'rnn', 'gru'],
      default: 'feedforward'
    },
    trainingData: {
      type: 'object',
      required: false
    }
  },
  neural_patterns: {
    pattern: {
      type: 'string',
      enum: ['all', 'convergent', 'divergent', 'lateral', 'systems', 'critical', 'abstract', 'adaptive'],
      default: 'all'
    }
  },
  // DAA (Decentralized Autonomous Agents) Tools
  daa_init: {
    enableCoordination: {
      type: 'boolean',
      default: true
    },
    enableLearning: {
      type: 'boolean',
      default: true
    },
    persistenceMode: {
      type: 'string',
      enum: ['auto', 'memory', 'disk'],
      default: 'auto'
    }
  },
  daa_agent_create: {
    id: {
      type: 'string',
      required: true,
      minLength: 1,
      maxLength: 100
    },
    capabilities: {
      type: 'array',
      items: {
        type: 'string',
        minLength: 1
      },
      required: false
    },
    cognitivePattern: {
      type: 'string',
      enum: ['convergent', 'divergent', 'lateral', 'systems', 'critical', 'adaptive'],
      required: false
    },
    enableMemory: {
      type: 'boolean',
      default: true
    },
    learningRate: {
      type: 'number',
      min: 0.001,
      max: 1.0,
      default: 0.1
    }
  },
  daa_agent_adapt: {
    agentId: {
      type: 'string',
      required: true,
      minLength: 1
    },
    feedback: {
      type: 'string',
      minLength: 1,
      maxLength: 1000,
      required: false
    },
    performanceScore: {
      type: 'number',
      min: 0,
      max: 1,
      required: false
    },
    suggestions: {
      type: 'array',
      items: {
        type: 'string',
        minLength: 1
      },
      required: false
    }
  },
  daa_workflow_create: {
    id: {
      type: 'string',
      required: true,
      minLength: 1,
      maxLength: 100
    },
    name: {
      type: 'string',
      required: true,
      minLength: 1,
      maxLength: 200
    },
    steps: {
      type: 'array',
      items: {
        type: 'object'
      },
      required: false
    },
    dependencies: {
      type: 'object',
      required: false
    },
    strategy: {
      type: 'string',
      enum: ['parallel', 'sequential', 'adaptive'],
      default: 'adaptive'
    }
  },
  daa_workflow_execute: {
    workflowId: {
      type: 'string',
      required: true,
      minLength: 1
    },
    agentIds: {
      type: 'array',
      items: {
        type: 'string',
        minLength: 1
      },
      required: false
    },
    parallelExecution: {
      type: 'boolean',
      default: true
    }
  },
  daa_knowledge_share: {
    sourceAgentId: {
      type: 'string',
      required: true,
      minLength: 1
    },
    targetAgentIds: {
      type: 'array',
      items: {
        type: 'string',
        minLength: 1
      },
      required: true,
      minLength: 1
    },
    knowledgeDomain: {
      type: 'string',
      minLength: 1,
      required: false
    },
    knowledgeContent: {
      type: 'object',
      required: false
    }
  },
  daa_learning_status: {
    agentId: {
      type: 'string',
      required: false
    },
    detailed: {
      type: 'boolean',
      default: false
    }
  },
  daa_cognitive_pattern: {
    agentId: {
      type: 'string',
      required: false
    },
    pattern: {
      type: 'string',
      enum: ['convergent', 'divergent', 'lateral', 'systems', 'critical', 'adaptive'],
      required: false
    },
    analyze: {
      type: 'boolean',
      default: false
    }
  },
  daa_meta_learning: {
    sourceDomain: {
      type: 'string',
      minLength: 1,
      required: false
    },
    targetDomain: {
      type: 'string',
      minLength: 1,
      required: false
    },
    transferMode: {
      type: 'string',
      enum: ['adaptive', 'direct', 'gradual'],
      default: 'adaptive'
    },
    agentIds: {
      type: 'array',
      items: {
        type: 'string',
        minLength: 1
      },
      required: false
    }
  },
  daa_performance_metrics: {
    category: {
      type: 'string',
      enum: ['all', 'system', 'performance', 'efficiency', 'neural'],
      default: 'all'
    },
    timeRange: {
      type: 'string',
      pattern: '^\\d+[hmd]$',
      // e.g., "1h", "24h", "7d"
      required: false
    }
  },
  // Monitoring Tools
  swarm_monitor: {
    swarmId: {
      type: 'string',
      pattern: '^[a-fA-F0-9-]+$',
      required: false
    },
    duration: {
      type: 'number',
      integer: true,
      min: 1,
      max: 3600,
      // 1 hour max
      default: 10
    },
    interval: {
      type: 'number',
      integer: true,
      min: 1,
      max: 60,
      default: 1
    },
    includeAgents: {
      type: 'boolean',
      default: true
    },
    includeTasks: {
      type: 'boolean',
      default: true
    },
    includeMetrics: {
      type: 'boolean',
      default: true
    },
    realTime: {
      type: 'boolean',
      default: false
    }
  }
});

/**
 * Validation utilities
 */
class ValidationUtils {
  /**
   * Validate parameters against a schema
   */
  static validateParams(params, toolName) {
    /* istanbul ignore next */
    cov_1viyw925f1().f[3]++;
    const schema =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[50]++, MCPSchemas[toolName]);
    /* istanbul ignore next */
    cov_1viyw925f1().s[51]++;
    if (!schema) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[36][0]++;
      cov_1viyw925f1().s[52]++;
      throw new ValidationError(`No validation schema found for tool: ${toolName}`, 'toolName', toolName, 'string');
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[36][1]++;
    }

    // Handle empty or null params
    cov_1viyw925f1().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[38][0]++, !params) ||
    /* istanbul ignore next */
    (cov_1viyw925f1().b[38][1]++, typeof params !== 'object')) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[37][0]++;
      cov_1viyw925f1().s[54]++;
      params = {};
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[37][1]++;
    }
    const validatedParams =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[55]++, {});

    // Validate each parameter
    /* istanbul ignore next */
    cov_1viyw925f1().s[56]++;
    for (const [fieldName, fieldSchema] of Object.entries(schema)) {
      /* istanbul ignore next */
      cov_1viyw925f1().s[57]++;
      try {
        const value =
        /* istanbul ignore next */
        (cov_1viyw925f1().s[58]++, params[fieldName]);
        /* istanbul ignore next */
        cov_1viyw925f1().s[59]++;
        validatedParams[fieldName] = BaseValidator.validate(value, fieldSchema, fieldName);
      } catch (error) {
        /* istanbul ignore next */
        cov_1viyw925f1().s[60]++;
        // Add tool context to error
        if (error instanceof ValidationError) {
          /* istanbul ignore next */
          cov_1viyw925f1().b[39][0]++;
          cov_1viyw925f1().s[61]++;
          error.details.tool = toolName;
          /* istanbul ignore next */
          cov_1viyw925f1().s[62]++;
          error.details.schema = fieldSchema;
        } else
        /* istanbul ignore next */
        {
          cov_1viyw925f1().b[39][1]++;
        }
        cov_1viyw925f1().s[63]++;
        throw error;
      }
    }

    // Check for unexpected parameters
    const allowedFields =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[64]++, Object.keys(schema));
    const providedFields =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[65]++, Object.keys(params));
    const unexpectedFields =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[66]++, providedFields.filter(field => {
      /* istanbul ignore next */
      cov_1viyw925f1().f[4]++;
      cov_1viyw925f1().s[67]++;
      return !allowedFields.includes(field);
    }));
    /* istanbul ignore next */
    cov_1viyw925f1().s[68]++;
    if (unexpectedFields.length > 0) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[40][0]++;
      cov_1viyw925f1().s[69]++;
      console.warn(`Unexpected parameters for ${toolName}: ${unexpectedFields.join(', ')}`);
      // Note: We don't throw here to maintain backward compatibility
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[40][1]++;
    }
    cov_1viyw925f1().s[70]++;
    return validatedParams;
  }

  /**
   * Get schema documentation for a tool
   */
  static getSchemaDoc(toolName) {
    /* istanbul ignore next */
    cov_1viyw925f1().f[5]++;
    const schema =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[71]++, MCPSchemas[toolName]);
    /* istanbul ignore next */
    cov_1viyw925f1().s[72]++;
    if (!schema) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[41][0]++;
      cov_1viyw925f1().s[73]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[41][1]++;
    }
    const doc =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[74]++, {
      tool: toolName,
      parameters: {}
    });
    /* istanbul ignore next */
    cov_1viyw925f1().s[75]++;
    for (const [fieldName, fieldSchema] of Object.entries(schema)) {
      /* istanbul ignore next */
      cov_1viyw925f1().s[76]++;
      doc.parameters[fieldName] = {
        type: fieldSchema.type,
        required:
        /* istanbul ignore next */
        (cov_1viyw925f1().b[42][0]++, fieldSchema.required) ||
        /* istanbul ignore next */
        (cov_1viyw925f1().b[42][1]++, false),
        default: fieldSchema.default,
        description: this.generateFieldDescription(fieldName, fieldSchema)
      };
      /* istanbul ignore next */
      cov_1viyw925f1().s[77]++;
      if (fieldSchema.enum) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[43][0]++;
        cov_1viyw925f1().s[78]++;
        doc.parameters[fieldName].allowedValues = fieldSchema.enum;
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[43][1]++;
      }
      cov_1viyw925f1().s[79]++;
      if (
      /* istanbul ignore next */
      (cov_1viyw925f1().b[45][0]++, fieldSchema.min !== undefined) ||
      /* istanbul ignore next */
      (cov_1viyw925f1().b[45][1]++, fieldSchema.max !== undefined)) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[44][0]++;
        cov_1viyw925f1().s[80]++;
        doc.parameters[fieldName].range = {
          min: fieldSchema.min,
          max: fieldSchema.max
        };
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[44][1]++;
      }
      cov_1viyw925f1().s[81]++;
      if (
      /* istanbul ignore next */
      (cov_1viyw925f1().b[47][0]++, fieldSchema.minLength !== undefined) ||
      /* istanbul ignore next */
      (cov_1viyw925f1().b[47][1]++, fieldSchema.maxLength !== undefined)) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[46][0]++;
        cov_1viyw925f1().s[82]++;
        doc.parameters[fieldName].length = {
          min: fieldSchema.minLength,
          max: fieldSchema.maxLength
        };
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[46][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1viyw925f1().s[83]++;
    return doc;
  }

  /**
   * Generate human-readable description for a field
   */
  static generateFieldDescription(fieldName, schema) {
    /* istanbul ignore next */
    cov_1viyw925f1().f[6]++;
    let desc =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[84]++, `${fieldName} (${schema.type})`);
    /* istanbul ignore next */
    cov_1viyw925f1().s[85]++;
    if (schema.required) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[48][0]++;
      cov_1viyw925f1().s[86]++;
      desc += ' - Required';
    } else {
      /* istanbul ignore next */
      cov_1viyw925f1().b[48][1]++;
      cov_1viyw925f1().s[87]++;
      desc += ' - Optional';
      /* istanbul ignore next */
      cov_1viyw925f1().s[88]++;
      if (schema.default !== undefined) {
        /* istanbul ignore next */
        cov_1viyw925f1().b[49][0]++;
        cov_1viyw925f1().s[89]++;
        desc += `, default: ${schema.default}`;
      } else
      /* istanbul ignore next */
      {
        cov_1viyw925f1().b[49][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1viyw925f1().s[90]++;
    if (schema.enum) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[50][0]++;
      cov_1viyw925f1().s[91]++;
      desc += `. Allowed values: ${schema.enum.join(', ')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[50][1]++;
    }
    cov_1viyw925f1().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[52][0]++, schema.min !== undefined) ||
    /* istanbul ignore next */
    (cov_1viyw925f1().b[52][1]++, schema.max !== undefined)) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[51][0]++;
      cov_1viyw925f1().s[93]++;
      desc += `. Range: ${
      /* istanbul ignore next */
      (cov_1viyw925f1().b[53][0]++, schema.min) ||
      /* istanbul ignore next */
      (cov_1viyw925f1().b[53][1]++, 'any')} to ${
      /* istanbul ignore next */
      (cov_1viyw925f1().b[54][0]++, schema.max) ||
      /* istanbul ignore next */
      (cov_1viyw925f1().b[54][1]++, 'any')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[51][1]++;
    }
    cov_1viyw925f1().s[94]++;
    if (
    /* istanbul ignore next */
    (cov_1viyw925f1().b[56][0]++, schema.minLength !== undefined) ||
    /* istanbul ignore next */
    (cov_1viyw925f1().b[56][1]++, schema.maxLength !== undefined)) {
      /* istanbul ignore next */
      cov_1viyw925f1().b[55][0]++;
      cov_1viyw925f1().s[95]++;
      desc += `. Length: ${
      /* istanbul ignore next */
      (cov_1viyw925f1().b[57][0]++, schema.minLength) ||
      /* istanbul ignore next */
      (cov_1viyw925f1().b[57][1]++, 0)} to ${
      /* istanbul ignore next */
      (cov_1viyw925f1().b[58][0]++, schema.maxLength) ||
      /* istanbul ignore next */
      (cov_1viyw925f1().b[58][1]++, 'unlimited')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[55][1]++;
    }
    cov_1viyw925f1().s[96]++;
    return desc;
  }

  /**
   * Get all available tool schemas
   */
  static getAllSchemas() {
    /* istanbul ignore next */
    cov_1viyw925f1().f[7]++;
    cov_1viyw925f1().s[97]++;
    return Object.keys(MCPSchemas);
  }

  /**
   * Validate a UUID string
   */
  static isValidUUID(str) {
    /* istanbul ignore next */
    cov_1viyw925f1().f[8]++;
    const uuidRegex =
    /* istanbul ignore next */
    (cov_1viyw925f1().s[98]++, /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i);
    /* istanbul ignore next */
    cov_1viyw925f1().s[99]++;
    return uuidRegex.test(str);
  }

  /**
   * Sanitize input to prevent injection attacks
   */
  static sanitizeInput(input) {
    /* istanbul ignore next */
    cov_1viyw925f1().f[9]++;
    cov_1viyw925f1().s[100]++;
    if (typeof input === 'string') {
      /* istanbul ignore next */
      cov_1viyw925f1().b[59][0]++;
      cov_1viyw925f1().s[101]++;
      // Remove potentially dangerous characters
      return input.replace(/[<>"'&\x00-\x1f\x7f-\x9f]/g, '');
    } else
    /* istanbul ignore next */
    {
      cov_1viyw925f1().b[59][1]++;
    }
    cov_1viyw925f1().s[102]++;
    return input;
  }
}

/**
 * Export validation schemas and utilities
 */
export { MCPSchemas, BaseValidator, ValidationUtils };
export default ValidationUtils;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,