476047a74bb5fb3ccf0da8390da0a987
/* istanbul ignore next */
function cov_1b98w2pyjx() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/cnn.js";
  var hash = "b0438ca0ee925b093f8d3fc4f25699fe577a8fa8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/cnn.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 17
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 25,
          column: 6
        }
      },
      "2": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "3": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 25
        }
      },
      "4": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 27
        }
      },
      "5": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 26
        }
      },
      "6": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 29
        }
      },
      "7": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 37,
          column: 50
        }
      },
      "8": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "9": {
        start: {
          line: 41,
          column: 38
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "10": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 43
        }
      },
      "11": {
        start: {
          line: 45,
          column: 28
        },
        end: {
          line: 50,
          column: 8
        }
      },
      "12": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "13": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 62
        }
      },
      "14": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 70
        }
      },
      "15": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "16": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "17": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 65
        }
      },
      "18": {
        start: {
          line: 74,
          column: 56
        },
        end: {
          line: 74,
          column: 61
        }
      },
      "19": {
        start: {
          line: 77,
          column: 19
        },
        end: {
          line: 77,
          column: 32
        }
      },
      "20": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "21": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 67
        }
      },
      "22": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 61
        }
      },
      "23": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 23
        }
      },
      "24": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 82
        }
      },
      "25": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 76
        }
      },
      "26": {
        start: {
          line: 90,
          column: 17
        },
        end: {
          line: 90,
          column: 49
        }
      },
      "27": {
        start: {
          line: 90,
          column: 40
        },
        end: {
          line: 90,
          column: 45
        }
      },
      "28": {
        start: {
          line: 91,
          column: 19
        },
        end: {
          line: 91,
          column: 41
        }
      },
      "29": {
        start: {
          line: 94,
          column: 18
        },
        end: {
          line: 94,
          column: 63
        }
      },
      "30": {
        start: {
          line: 94,
          column: 54
        },
        end: {
          line: 94,
          column: 59
        }
      },
      "31": {
        start: {
          line: 95,
          column: 18
        },
        end: {
          line: 95,
          column: 40
        }
      },
      "32": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "33": {
        start: {
          line: 97,
          column: 17
        },
        end: {
          line: 97,
          column: 18
        }
      },
      "34": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 50
        }
      },
      "35": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 18
        }
      },
      "36": {
        start: {
          line: 105,
          column: 38
        },
        end: {
          line: 105,
          column: 48
        }
      },
      "37": {
        start: {
          line: 106,
          column: 57
        },
        end: {
          line: 106,
          column: 66
        }
      },
      "38": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "39": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 48
        }
      },
      "40": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 46
        }
      },
      "41": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 114,
          column: 68
        }
      },
      "42": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 66
        }
      },
      "43": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 48
        }
      },
      "44": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "45": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "46": {
        start: {
          line: 125,
          column: 17
        },
        end: {
          line: 125,
          column: 18
        }
      },
      "47": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 28
        }
      },
      "48": {
        start: {
          line: 129,
          column: 25
        },
        end: {
          line: 129,
          column: 61
        }
      },
      "49": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "50": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 25
        }
      },
      "51": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "52": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 55
        }
      },
      "53": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 24
        }
      },
      "54": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "55": {
        start: {
          line: 144,
          column: 17
        },
        end: {
          line: 144,
          column: 18
        }
      },
      "56": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 145,
          column: 67
        }
      },
      "57": {
        start: {
          line: 146,
          column: 6
        },
        end: {
          line: 146,
          column: 23
        }
      },
      "58": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "59": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 53
        }
      },
      "60": {
        start: {
          line: 155,
          column: 24
        },
        end: {
          line: 155,
          column: 52
        }
      },
      "61": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 85
        }
      },
      "62": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 24
        }
      },
      "63": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "64": {
        start: {
          line: 165,
          column: 22
        },
        end: {
          line: 165,
          column: 56
        }
      },
      "65": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 48
        }
      },
      "66": {
        start: {
          line: 167,
          column: 19
        },
        end: {
          line: 167,
          column: 46
        }
      },
      "67": {
        start: {
          line: 169,
          column: 54
        },
        end: {
          line: 169,
          column: 65
        }
      },
      "68": {
        start: {
          line: 170,
          column: 57
        },
        end: {
          line: 170,
          column: 66
        }
      },
      "69": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 90
        }
      },
      "70": {
        start: {
          line: 174,
          column: 56
        },
        end: {
          line: 174,
          column: 67
        }
      },
      "71": {
        start: {
          line: 176,
          column: 19
        },
        end: {
          line: 176,
          column: 92
        }
      },
      "72": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "73": {
        start: {
          line: 179,
          column: 17
        },
        end: {
          line: 179,
          column: 18
        }
      },
      "74": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 221,
          column: 7
        }
      },
      "75": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 21
        }
      },
      "76": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "77": {
        start: {
          line: 181,
          column: 22
        },
        end: {
          line: 181,
          column: 23
        }
      },
      "78": {
        start: {
          line: 182,
          column: 10
        },
        end: {
          line: 219,
          column: 11
        }
      },
      "79": {
        start: {
          line: 182,
          column: 24
        },
        end: {
          line: 182,
          column: 25
        }
      },
      "80": {
        start: {
          line: 183,
          column: 22
        },
        end: {
          line: 183,
          column: 32
        }
      },
      "81": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "82": {
        start: {
          line: 186,
          column: 26
        },
        end: {
          line: 186,
          column: 27
        }
      },
      "83": {
        start: {
          line: 187,
          column: 14
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "84": {
        start: {
          line: 187,
          column: 28
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "85": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "86": {
        start: {
          line: 188,
          column: 30
        },
        end: {
          line: 188,
          column: 31
        }
      },
      "87": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 189,
          column: 43
        }
      },
      "88": {
        start: {
          line: 190,
          column: 27
        },
        end: {
          line: 190,
          column: 43
        }
      },
      "89": {
        start: {
          line: 193,
          column: 18
        },
        end: {
          line: 196,
          column: 19
        }
      },
      "90": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "91": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 53
        }
      },
      "92": {
        start: {
          line: 199,
          column: 18
        },
        end: {
          line: 209,
          column: 19
        }
      },
      "93": {
        start: {
          line: 200,
          column: 37
        },
        end: {
          line: 202,
          column: 58
        }
      },
      "94": {
        start: {
          line: 204,
          column: 38
        },
        end: {
          line: 206,
          column: 53
        }
      },
      "95": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 71
        }
      },
      "96": {
        start: {
          line: 214,
          column: 30
        },
        end: {
          line: 216,
          column: 52
        }
      },
      "97": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 36
        }
      },
      "98": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 74
        }
      },
      "99": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 225,
          column: 18
        }
      },
      "100": {
        start: {
          line: 229,
          column: 49
        },
        end: {
          line: 229,
          column: 60
        }
      },
      "101": {
        start: {
          line: 230,
          column: 25
        },
        end: {
          line: 230,
          column: 54
        }
      },
      "102": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 231,
          column: 52
        }
      },
      "103": {
        start: {
          line: 233,
          column: 19
        },
        end: {
          line: 233,
          column: 86
        }
      },
      "104": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "105": {
        start: {
          line: 235,
          column: 17
        },
        end: {
          line: 235,
          column: 18
        }
      },
      "106": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 264,
          column: 7
        }
      },
      "107": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 21
        }
      },
      "108": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "109": {
        start: {
          line: 237,
          column: 22
        },
        end: {
          line: 237,
          column: 23
        }
      },
      "110": {
        start: {
          line: 238,
          column: 10
        },
        end: {
          line: 262,
          column: 11
        }
      },
      "111": {
        start: {
          line: 238,
          column: 23
        },
        end: {
          line: 238,
          column: 24
        }
      },
      "112": {
        start: {
          line: 239,
          column: 25
        },
        end: {
          line: 239,
          column: 34
        }
      },
      "113": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "114": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 242,
          column: 27
        }
      },
      "115": {
        start: {
          line: 243,
          column: 14
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "116": {
        start: {
          line: 243,
          column: 28
        },
        end: {
          line: 243,
          column: 29
        }
      },
      "117": {
        start: {
          line: 244,
          column: 27
        },
        end: {
          line: 244,
          column: 45
        }
      },
      "118": {
        start: {
          line: 245,
          column: 27
        },
        end: {
          line: 245,
          column: 45
        }
      },
      "119": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 253,
          column: 17
        }
      },
      "120": {
        start: {
          line: 248,
          column: 35
        },
        end: {
          line: 250,
          column: 50
        }
      },
      "121": {
        start: {
          line: 252,
          column: 18
        },
        end: {
          line: 252,
          column: 61
        }
      },
      "122": {
        start: {
          line: 257,
          column: 30
        },
        end: {
          line: 259,
          column: 45
        }
      },
      "123": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 39
        }
      },
      "124": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 267,
          column: 68
        }
      },
      "125": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 268,
          column: 18
        }
      },
      "126": {
        start: {
          line: 272,
          column: 33
        },
        end: {
          line: 272,
          column: 44
        }
      },
      "127": {
        start: {
          line: 273,
          column: 21
        },
        end: {
          line: 273,
          column: 52
        }
      },
      "128": {
        start: {
          line: 273,
          column: 43
        },
        end: {
          line: 273,
          column: 48
        }
      },
      "129": {
        start: {
          line: 275,
          column: 19
        },
        end: {
          line: 275,
          column: 57
        }
      },
      "130": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "131": {
        start: {
          line: 278,
          column: 17
        },
        end: {
          line: 278,
          column: 18
        }
      },
      "132": {
        start: {
          line: 279,
          column: 6
        },
        end: {
          line: 279,
          column: 27
        }
      },
      "133": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 282,
          column: 41
        }
      },
      "134": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 18
        }
      },
      "135": {
        start: {
          line: 287,
          column: 35
        },
        end: {
          line: 287,
          column: 46
        }
      },
      "136": {
        start: {
          line: 288,
          column: 23
        },
        end: {
          line: 288,
          column: 36
        }
      },
      "137": {
        start: {
          line: 290,
          column: 19
        },
        end: {
          line: 290,
          column: 59
        }
      },
      "138": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "139": {
        start: {
          line: 292,
          column: 17
        },
        end: {
          line: 292,
          column: 18
        }
      },
      "140": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "141": {
        start: {
          line: 293,
          column: 19
        },
        end: {
          line: 293,
          column: 20
        }
      },
      "142": {
        start: {
          line: 294,
          column: 18
        },
        end: {
          line: 294,
          column: 27
        }
      },
      "143": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "144": {
        start: {
          line: 296,
          column: 21
        },
        end: {
          line: 296,
          column: 22
        }
      },
      "145": {
        start: {
          line: 297,
          column: 10
        },
        end: {
          line: 297,
          column: 72
        }
      },
      "146": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 41
        }
      },
      "147": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 304,
          column: 43
        }
      },
      "148": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 305,
          column: 18
        }
      },
      "149": {
        start: {
          line: 309,
          column: 30
        },
        end: {
          line: 309,
          column: 41
        }
      },
      "150": {
        start: {
          line: 310,
          column: 19
        },
        end: {
          line: 310,
          column: 49
        }
      },
      "151": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 332,
          column: 5
        }
      },
      "152": {
        start: {
          line: 312,
          column: 17
        },
        end: {
          line: 312,
          column: 18
        }
      },
      "153": {
        start: {
          line: 313,
          column: 21
        },
        end: {
          line: 313,
          column: 29
        }
      },
      "154": {
        start: {
          line: 314,
          column: 19
        },
        end: {
          line: 314,
          column: 28
        }
      },
      "155": {
        start: {
          line: 317,
          column: 6
        },
        end: {
          line: 319,
          column: 7
        }
      },
      "156": {
        start: {
          line: 317,
          column: 19
        },
        end: {
          line: 317,
          column: 20
        }
      },
      "157": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 53
        }
      },
      "158": {
        start: {
          line: 322,
          column: 19
        },
        end: {
          line: 322,
          column: 20
        }
      },
      "159": {
        start: {
          line: 323,
          column: 6
        },
        end: {
          line: 326,
          column: 7
        }
      },
      "160": {
        start: {
          line: 323,
          column: 19
        },
        end: {
          line: 323,
          column: 20
        }
      },
      "161": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 66
        }
      },
      "162": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 37
        }
      },
      "163": {
        start: {
          line: 329,
          column: 6
        },
        end: {
          line: 331,
          column: 7
        }
      },
      "164": {
        start: {
          line: 329,
          column: 19
        },
        end: {
          line: 329,
          column: 20
        }
      },
      "165": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 37
        }
      },
      "166": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 334,
          column: 31
        }
      },
      "167": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 18
        }
      },
      "168": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 15
        }
      },
      "169": {
        start: {
          line: 346,
          column: 28
        },
        end: {
          line: 346,
          column: 30
        }
      },
      "170": {
        start: {
          line: 349,
          column: 23
        },
        end: {
          line: 349,
          column: 78
        }
      },
      "171": {
        start: {
          line: 350,
          column: 22
        },
        end: {
          line: 350,
          column: 55
        }
      },
      "172": {
        start: {
          line: 351,
          column: 20
        },
        end: {
          line: 351,
          column: 50
        }
      },
      "173": {
        start: {
          line: 353,
          column: 4
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "174": {
        start: {
          line: 353,
          column: 21
        },
        end: {
          line: 353,
          column: 22
        }
      },
      "175": {
        start: {
          line: 354,
          column: 22
        },
        end: {
          line: 354,
          column: 23
        }
      },
      "176": {
        start: {
          line: 355,
          column: 26
        },
        end: {
          line: 355,
          column: 27
        }
      },
      "177": {
        start: {
          line: 356,
          column: 23
        },
        end: {
          line: 356,
          column: 24
        }
      },
      "178": {
        start: {
          line: 359,
          column: 23
        },
        end: {
          line: 359,
          column: 46
        }
      },
      "179": {
        start: {
          line: 362,
          column: 6
        },
        end: {
          line: 379,
          column: 7
        }
      },
      "180": {
        start: {
          line: 362,
          column: 19
        },
        end: {
          line: 362,
          column: 20
        }
      },
      "181": {
        start: {
          line: 363,
          column: 22
        },
        end: {
          line: 363,
          column: 81
        }
      },
      "182": {
        start: {
          line: 366,
          column: 28
        },
        end: {
          line: 366,
          column: 66
        }
      },
      "183": {
        start: {
          line: 369,
          column: 21
        },
        end: {
          line: 369,
          column: 70
        }
      },
      "184": {
        start: {
          line: 370,
          column: 25
        },
        end: {
          line: 370,
          column: 75
        }
      },
      "185": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 26
        }
      },
      "186": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 34
        }
      },
      "187": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 48
        }
      },
      "188": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 21
        }
      },
      "189": {
        start: {
          line: 382,
          column: 25
        },
        end: {
          line: 382,
          column: 53
        }
      },
      "190": {
        start: {
          line: 384,
          column: 27
        },
        end: {
          line: 384,
          column: 49
        }
      },
      "191": {
        start: {
          line: 385,
          column: 31
        },
        end: {
          line: 385,
          column: 57
        }
      },
      "192": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "193": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 401,
          column: 8
        }
      },
      "194": {
        start: {
          line: 403,
          column: 6
        },
        end: {
          line: 403,
          column: 57
        }
      },
      "195": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 411,
          column: 6
        }
      },
      "196": {
        start: {
          line: 415,
          column: 20
        },
        end: {
          line: 415,
          column: 21
        }
      },
      "197": {
        start: {
          line: 416,
          column: 24
        },
        end: {
          line: 416,
          column: 25
        }
      },
      "198": {
        start: {
          line: 417,
          column: 21
        },
        end: {
          line: 417,
          column: 22
        }
      },
      "199": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "200": {
        start: {
          line: 420,
          column: 26
        },
        end: {
          line: 420,
          column: 65
        }
      },
      "201": {
        start: {
          line: 421,
          column: 19
        },
        end: {
          line: 421,
          column: 68
        }
      },
      "202": {
        start: {
          line: 422,
          column: 23
        },
        end: {
          line: 422,
          column: 73
        }
      },
      "203": {
        start: {
          line: 424,
          column: 6
        },
        end: {
          line: 424,
          column: 24
        }
      },
      "204": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 425,
          column: 32
        }
      },
      "205": {
        start: {
          line: 426,
          column: 6
        },
        end: {
          line: 426,
          column: 19
        }
      },
      "206": {
        start: {
          line: 429,
          column: 4
        },
        end: {
          line: 432,
          column: 6
        }
      },
      "207": {
        start: {
          line: 436,
          column: 18
        },
        end: {
          line: 436,
          column: 19
        }
      },
      "208": {
        start: {
          line: 437,
          column: 22
        },
        end: {
          line: 437,
          column: 42
        }
      },
      "209": {
        start: {
          line: 438,
          column: 23
        },
        end: {
          line: 438,
          column: 43
        }
      },
      "210": {
        start: {
          line: 440,
          column: 4
        },
        end: {
          line: 465,
          column: 5
        }
      },
      "211": {
        start: {
          line: 440,
          column: 17
        },
        end: {
          line: 440,
          column: 18
        }
      },
      "212": {
        start: {
          line: 441,
          column: 22
        },
        end: {
          line: 441,
          column: 23
        }
      },
      "213": {
        start: {
          line: 442,
          column: 20
        },
        end: {
          line: 442,
          column: 29
        }
      },
      "214": {
        start: {
          line: 445,
          column: 6
        },
        end: {
          line: 451,
          column: 7
        }
      },
      "215": {
        start: {
          line: 445,
          column: 19
        },
        end: {
          line: 445,
          column: 20
        }
      },
      "216": {
        start: {
          line: 446,
          column: 21
        },
        end: {
          line: 446,
          column: 52
        }
      },
      "217": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 450,
          column: 9
        }
      },
      "218": {
        start: {
          line: 448,
          column: 10
        },
        end: {
          line: 448,
          column: 25
        }
      },
      "219": {
        start: {
          line: 449,
          column: 10
        },
        end: {
          line: 449,
          column: 24
        }
      },
      "220": {
        start: {
          line: 454,
          column: 22
        },
        end: {
          line: 454,
          column: 23
        }
      },
      "221": {
        start: {
          line: 455,
          column: 6
        },
        end: {
          line: 460,
          column: 7
        }
      },
      "222": {
        start: {
          line: 455,
          column: 19
        },
        end: {
          line: 455,
          column: 20
        }
      },
      "223": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 459,
          column: 9
        }
      },
      "224": {
        start: {
          line: 457,
          column: 10
        },
        end: {
          line: 457,
          column: 24
        }
      },
      "225": {
        start: {
          line: 458,
          column: 10
        },
        end: {
          line: 458,
          column: 16
        }
      },
      "226": {
        start: {
          line: 462,
          column: 6
        },
        end: {
          line: 464,
          column: 7
        }
      },
      "227": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 18
        }
      },
      "228": {
        start: {
          line: 467,
          column: 4
        },
        end: {
          line: 467,
          column: 31
        }
      },
      "229": {
        start: {
          line: 471,
          column: 4
        },
        end: {
          line: 475,
          column: 6
        }
      },
      "230": {
        start: {
          line: 479,
          column: 16
        },
        end: {
          line: 479,
          column: 17
        }
      },
      "231": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 485,
          column: 5
        }
      },
      "232": {
        start: {
          line: 482,
          column: 17
        },
        end: {
          line: 482,
          column: 18
        }
      },
      "233": {
        start: {
          line: 483,
          column: 6
        },
        end: {
          line: 483,
          column: 49
        }
      },
      "234": {
        start: {
          line: 484,
          column: 6
        },
        end: {
          line: 484,
          column: 41
        }
      },
      "235": {
        start: {
          line: 488,
          column: 4
        },
        end: {
          line: 491,
          column: 5
        }
      },
      "236": {
        start: {
          line: 488,
          column: 17
        },
        end: {
          line: 488,
          column: 18
        }
      },
      "237": {
        start: {
          line: 489,
          column: 6
        },
        end: {
          line: 489,
          column: 43
        }
      },
      "238": {
        start: {
          line: 490,
          column: 6
        },
        end: {
          line: 490,
          column: 42
        }
      },
      "239": {
        start: {
          line: 493,
          column: 4
        },
        end: {
          line: 493,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 2
          },
          end: {
            line: 36,
            column: 3
          }
        },
        loc: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 87,
            column: 3
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 74,
            column: 46
          },
          end: {
            line: 74,
            column: 47
          }
        },
        loc: {
          start: {
            line: 74,
            column: 56
          },
          end: {
            line: 74,
            column: 61
          }
        },
        line: 74
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 89,
            column: 3
          }
        },
        loc: {
          start: {
            line: 89,
            column: 22
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 89
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 90,
            column: 31
          }
        },
        loc: {
          start: {
            line: 90,
            column: 40
          },
          end: {
            line: 90,
            column: 45
          }
        },
        line: 90
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 94,
            column: 45
          }
        },
        loc: {
          start: {
            line: 94,
            column: 54
          },
          end: {
            line: 94,
            column: 59
          }
        },
        line: 94
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        loc: {
          start: {
            line: 104,
            column: 44
          },
          end: {
            line: 119,
            column: 3
          }
        },
        line: 104
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 121,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        },
        loc: {
          start: {
            line: 121,
            column: 41
          },
          end: {
            line: 162,
            column: 3
          }
        },
        line: 121
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 164,
            column: 2
          },
          end: {
            line: 164,
            column: 3
          }
        },
        loc: {
          start: {
            line: 164,
            column: 28
          },
          end: {
            line: 226,
            column: 3
          }
        },
        line: 164
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 228,
            column: 2
          },
          end: {
            line: 228,
            column: 3
          }
        },
        loc: {
          start: {
            line: 228,
            column: 29
          },
          end: {
            line: 269,
            column: 3
          }
        },
        line: 228
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 271,
            column: 2
          },
          end: {
            line: 271,
            column: 3
          }
        },
        loc: {
          start: {
            line: 271,
            column: 17
          },
          end: {
            line: 284,
            column: 3
          }
        },
        line: 271
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 273,
            column: 33
          },
          end: {
            line: 273,
            column: 34
          }
        },
        loc: {
          start: {
            line: 273,
            column: 43
          },
          end: {
            line: 273,
            column: 48
          }
        },
        line: 273
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 286,
            column: 2
          },
          end: {
            line: 286,
            column: 3
          }
        },
        loc: {
          start: {
            line: 286,
            column: 32
          },
          end: {
            line: 306,
            column: 3
          }
        },
        line: 286
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 308,
            column: 2
          },
          end: {
            line: 308,
            column: 3
          }
        },
        loc: {
          start: {
            line: 308,
            column: 17
          },
          end: {
            line: 336,
            column: 3
          }
        },
        line: 308
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 338,
            column: 2
          },
          end: {
            line: 338,
            column: 3
          }
        },
        loc: {
          start: {
            line: 338,
            column: 42
          },
          end: {
            line: 412,
            column: 3
          }
        },
        line: 338
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 414,
            column: 2
          },
          end: {
            line: 414,
            column: 3
          }
        },
        loc: {
          start: {
            line: 414,
            column: 23
          },
          end: {
            line: 433,
            column: 3
          }
        },
        line: 414
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 435,
            column: 2
          },
          end: {
            line: 435,
            column: 3
          }
        },
        loc: {
          start: {
            line: 435,
            column: 42
          },
          end: {
            line: 468,
            column: 3
          }
        },
        line: 435
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 470,
            column: 2
          },
          end: {
            line: 470,
            column: 3
          }
        },
        loc: {
          start: {
            line: 470,
            column: 14
          },
          end: {
            line: 476,
            column: 3
          }
        },
        line: 470
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 478,
            column: 2
          },
          end: {
            line: 478,
            column: 3
          }
        },
        loc: {
          start: {
            line: 478,
            column: 20
          },
          end: {
            line: 494,
            column: 3
          }
        },
        line: 478
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 14
          },
          end: {
            line: 9,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 25
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 35
          }
        }, {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 14,
            column: 50
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 19,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 35
          }
        }, {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 7
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 37
          }
        }, {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 20,
            column: 42
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 21,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 21,
            column: 37
          }
        }, {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 21,
            column: 50
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 35
          }
        }, {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 22,
            column: 41
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 19
          },
          end: {
            line: 23,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 19
          },
          end: {
            line: 23,
            column: 37
          }
        }, {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 23,
            column: 44
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 64,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "8": {
        loc: {
          start: {
            line: 106,
            column: 33
          },
          end: {
            line: 106,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 106,
            column: 42
          },
          end: {
            line: 106,
            column: 43
          }
        }],
        line: 106
      },
      "9": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: 113,
            column: 11
          },
          end: {
            line: 116,
            column: 5
          }
        }],
        line: 110
      },
      "10": {
        loc: {
          start: {
            line: 121,
            column: 23
          },
          end: {
            line: 121,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 121,
            column: 34
          },
          end: {
            line: 121,
            column: 39
          }
        }],
        line: 121
      },
      "11": {
        loc: {
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "12": {
        loc: {
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "13": {
        loc: {
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 151,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 151,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "14": {
        loc: {
          start: {
            line: 149,
            column: 10
          },
          end: {
            line: 149,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 10
          },
          end: {
            line: 149,
            column: 18
          }
        }, {
          start: {
            line: 149,
            column: 22
          },
          end: {
            line: 149,
            column: 49
          }
        }],
        line: 149
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 33
          },
          end: {
            line: 170,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 170,
            column: 42
          },
          end: {
            line: 170,
            column: 43
          }
        }],
        line: 170
      },
      "16": {
        loc: {
          start: {
            line: 193,
            column: 18
          },
          end: {
            line: 196,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 18
          },
          end: {
            line: 196,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "17": {
        loc: {
          start: {
            line: 199,
            column: 18
          },
          end: {
            line: 209,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 18
          },
          end: {
            line: 209,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "18": {
        loc: {
          start: {
            line: 199,
            column: 22
          },
          end: {
            line: 199,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 22
          },
          end: {
            line: 199,
            column: 29
          }
        }, {
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 199,
            column: 44
          }
        }, {
          start: {
            line: 199,
            column: 48
          },
          end: {
            line: 199,
            column: 55
          }
        }, {
          start: {
            line: 199,
            column: 59
          },
          end: {
            line: 199,
            column: 69
          }
        }],
        line: 199
      },
      "19": {
        loc: {
          start: {
            line: 247,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "20": {
        loc: {
          start: {
            line: 247,
            column: 20
          },
          end: {
            line: 247,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 20
          },
          end: {
            line: 247,
            column: 31
          }
        }, {
          start: {
            line: 247,
            column: 35
          },
          end: {
            line: 247,
            column: 45
          }
        }],
        line: 247
      },
      "21": {
        loc: {
          start: {
            line: 338,
            column: 28
          },
          end: {
            line: 338,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 338,
            column: 38
          },
          end: {
            line: 338,
            column: 40
          }
        }],
        line: 338
      },
      "22": {
        loc: {
          start: {
            line: 340,
            column: 6
          },
          end: {
            line: 340,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 340,
            column: 15
          },
          end: {
            line: 340,
            column: 17
          }
        }],
        line: 340
      },
      "23": {
        loc: {
          start: {
            line: 341,
            column: 6
          },
          end: {
            line: 341,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 341,
            column: 18
          },
          end: {
            line: 341,
            column: 20
          }
        }],
        line: 341
      },
      "24": {
        loc: {
          start: {
            line: 342,
            column: 6
          },
          end: {
            line: 342,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 342,
            column: 21
          },
          end: {
            line: 342,
            column: 26
          }
        }],
        line: 342
      },
      "25": {
        loc: {
          start: {
            line: 343,
            column: 6
          },
          end: {
            line: 343,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 343,
            column: 24
          },
          end: {
            line: 343,
            column: 27
          }
        }],
        line: 343
      },
      "26": {
        loc: {
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 450,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 450,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "27": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 459,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 459,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "28": {
        loc: {
          start: {
            line: 462,
            column: 6
          },
          end: {
            line: 464,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 6
          },
          end: {
            line: 464,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b0438ca0ee925b093f8d3fc4f25699fe577a8fa8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b98w2pyjx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b98w2pyjx();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Convolutional Neural Network (CNN) Model
 * For pattern recognition and image processing tasks
 */

import { NeuralModel } from './base.js';
class CNNModel extends NeuralModel {
  constructor(config =
  /* istanbul ignore next */
  (cov_1b98w2pyjx().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[0]++;
    cov_1b98w2pyjx().s[0]++;
    super('cnn');

    // CNN configuration
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[1]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread({
      inputShape:
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[1][0]++, config.inputShape) ||
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[1][1]++, [28, 28, 1]),
      // [height, width, channels]
      convLayers:
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[2][0]++, config.convLayers) ||
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[2][1]++, [{
        filters: 32,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }, {
        filters: 64,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }, {
        filters: 128,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }]),
      poolingSize:
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[3][0]++, config.poolingSize) ||
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[3][1]++, 2),
      denseLayers:
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[4][0]++, config.denseLayers) ||
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[4][1]++, [128, 64]),
      outputSize:
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[5][0]++, config.outputSize) ||
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[5][1]++, 10),
      dropoutRate:
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[6][0]++, config.dropoutRate) ||
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[6][1]++, 0.5)
    }, config);

    // Initialize layers
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[2]++;
    this.convWeights = [];
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[3]++;
    this.convBiases = [];
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[4]++;
    this.denseWeights = [];
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[5]++;
    this.denseBiases = [];
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[6]++;
    this.initializeWeights();
  }
  initializeWeights() {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[1]++;
    let currentShape =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[7]++, [...this.config.inputShape]);

    // Initialize convolutional layers
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[8]++;
    for (const convLayer of this.config.convLayers) {
      const {
        filters,
        kernelSize
      } =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[9]++, convLayer);
      const inputChannels =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[10]++, currentShape[2]);

      // Initialize kernel weights [kernelSize, kernelSize, inputChannels, filters]
      const kernelWeights =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[11]++, this.createWeight([kernelSize, kernelSize, inputChannels, filters]));
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[12]++;
      this.convWeights.push({
        kernel: kernelWeights,
        shape: [kernelSize, kernelSize, inputChannels, filters]
      });

      // Initialize biases for each filter
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[13]++;
      this.convBiases.push(new Float32Array(filters).fill(0));

      // Update shape for next layer
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[14]++;
      currentShape = this.getConvOutputShape(currentShape, convLayer);

      // Apply pooling
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[15]++;
      if (this.config.poolingSize > 1) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().b[7][0]++;
        cov_1b98w2pyjx().s[16]++;
        currentShape = [Math.floor(currentShape[0] / this.config.poolingSize), Math.floor(currentShape[1] / this.config.poolingSize), currentShape[2]];
      } else
      /* istanbul ignore next */
      {
        cov_1b98w2pyjx().b[7][1]++;
      }
    }

    // Calculate flattened size
    const flattenedSize =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[17]++, currentShape.reduce((a, b) => {
      /* istanbul ignore next */
      cov_1b98w2pyjx().f[2]++;
      cov_1b98w2pyjx().s[18]++;
      return a * b;
    }, 1));

    // Initialize dense layers
    let lastSize =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[19]++, flattenedSize);
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[20]++;
    for (const units of this.config.denseLayers) {
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[21]++;
      this.denseWeights.push(this.createWeight([lastSize, units]));
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[22]++;
      this.denseBiases.push(new Float32Array(units).fill(0));
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[23]++;
      lastSize = units;
    }

    // Output layer
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[24]++;
    this.denseWeights.push(this.createWeight([lastSize, this.config.outputSize]));
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[25]++;
    this.denseBiases.push(new Float32Array(this.config.outputSize).fill(0));
  }
  createWeight(shape) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[3]++;
    const size =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[26]++, shape.reduce((a, b) => {
      /* istanbul ignore next */
      cov_1b98w2pyjx().f[4]++;
      cov_1b98w2pyjx().s[27]++;
      return a * b;
    }, 1));
    const weight =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[28]++, new Float32Array(size));

    // He initialization for ReLU activation
    const fanIn =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[29]++, shape.slice(0, -1).reduce((a, b) => {
      /* istanbul ignore next */
      cov_1b98w2pyjx().f[5]++;
      cov_1b98w2pyjx().s[30]++;
      return a * b;
    }, 1));
    const scale =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[31]++, Math.sqrt(2.0 / fanIn));
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[32]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[33]++, 0); i < size; i++) {
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[34]++;
      weight[i] = (Math.random() * 2 - 1) * scale;
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[35]++;
    return weight;
  }
  getConvOutputShape(inputShape, convLayer) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[6]++;
    const [height, width, channels] =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[36]++, inputShape);
    const {
      filters,
      kernelSize,
      stride =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[8][0]++, 1),
      padding
    } =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[37]++, convLayer);
    let outputHeight, outputWidth;
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[38]++;
    if (padding === 'same') {
      /* istanbul ignore next */
      cov_1b98w2pyjx().b[9][0]++;
      cov_1b98w2pyjx().s[39]++;
      outputHeight = Math.ceil(height / stride);
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[40]++;
      outputWidth = Math.ceil(width / stride);
    } else {
      /* istanbul ignore next */
      cov_1b98w2pyjx().b[9][1]++;
      cov_1b98w2pyjx().s[41]++;
      outputHeight = Math.floor((height - kernelSize) / stride) + 1;
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[42]++;
      outputWidth = Math.floor((width - kernelSize) / stride) + 1;
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[43]++;
    return [outputHeight, outputWidth, filters];
  }
  forward(
  /* istanbul ignore next */
  _x) {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* (input, training =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().b[10][0]++, false)) {
      cov_1b98w2pyjx().f[7]++;
      let x =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[44]++, input);

      // Convolutional layers
      cov_1b98w2pyjx().s[45]++;
      for (let i =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[46]++, 0); i < _this.config.convLayers.length; i++) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[47]++;
        x = _this.conv2d(x, i);

        // Apply activation
        const activation =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[48]++, _this.config.convLayers[i].activation);
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[49]++;
        if (activation === 'relu') {
          /* istanbul ignore next */
          cov_1b98w2pyjx().b[11][0]++;
          cov_1b98w2pyjx().s[50]++;
          x = _this.relu(x);
        } else
        /* istanbul ignore next */
        {
          cov_1b98w2pyjx().b[11][1]++;
        }

        // Apply pooling
        cov_1b98w2pyjx().s[51]++;
        if (_this.config.poolingSize > 1) {
          /* istanbul ignore next */
          cov_1b98w2pyjx().b[12][0]++;
          cov_1b98w2pyjx().s[52]++;
          x = _this.maxPool2d(x, _this.config.poolingSize);
        } else
        /* istanbul ignore next */
        {
          cov_1b98w2pyjx().b[12][1]++;
        }
      }

      // Flatten
      cov_1b98w2pyjx().s[53]++;
      x = _this.flatten(x);

      // Dense layers
      cov_1b98w2pyjx().s[54]++;
      for (let i =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[55]++, 0); i < _this.config.denseLayers.length; i++) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[56]++;
        x = _this.dense(x, _this.denseWeights[i], _this.denseBiases[i]);
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[57]++;
        x = _this.relu(x);

        // Apply dropout if training
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[58]++;
        if (
        /* istanbul ignore next */
        (cov_1b98w2pyjx().b[14][0]++, training) &&
        /* istanbul ignore next */
        (cov_1b98w2pyjx().b[14][1]++, _this.config.dropoutRate > 0)) {
          /* istanbul ignore next */
          cov_1b98w2pyjx().b[13][0]++;
          cov_1b98w2pyjx().s[59]++;
          x = _this.dropout(x, _this.config.dropoutRate);
        } else
        /* istanbul ignore next */
        {
          cov_1b98w2pyjx().b[13][1]++;
        }
      }

      // Output layer
      const outputIndex =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[60]++, _this.denseWeights.length - 1);
      cov_1b98w2pyjx().s[61]++;
      x = _this.dense(x, _this.denseWeights[outputIndex], _this.denseBiases[outputIndex]);

      // Apply softmax for classification
      cov_1b98w2pyjx().s[62]++;
      x = _this.softmax(x);
      cov_1b98w2pyjx().s[63]++;
      return x;
    }).apply(this, arguments);
  }
  conv2d(input, layerIndex) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[8]++;
    const convLayer =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[64]++, this.config.convLayers[layerIndex]);
    const weights =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[65]++, this.convWeights[layerIndex]);
    const biases =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[66]++, this.convBiases[layerIndex]);
    const [batchSize, height, width, inputChannels] =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[67]++, input.shape);
    const {
      filters,
      kernelSize,
      stride =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().b[15][0]++, 1),
      padding
    } =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[68]++, convLayer);

    // Calculate output dimensions
    const outputShape =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[69]++, this.getConvOutputShape([height, width, inputChannels], convLayer));
    const [outputHeight, outputWidth, outputChannels] =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[70]++, outputShape);
    const output =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[71]++, new Float32Array(batchSize * outputHeight * outputWidth * outputChannels));

    // Apply convolution
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[72]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[73]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[74]++;
      for (let oh =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[75]++, 0); oh < outputHeight; oh++) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[76]++;
        for (let ow =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[77]++, 0); ow < outputWidth; ow++) {
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[78]++;
          for (let oc =
          /* istanbul ignore next */
          (cov_1b98w2pyjx().s[79]++, 0); oc < outputChannels; oc++) {
            let sum =
            /* istanbul ignore next */
            (cov_1b98w2pyjx().s[80]++, biases[oc]);

            // Apply kernel
            /* istanbul ignore next */
            cov_1b98w2pyjx().s[81]++;
            for (let kh =
            /* istanbul ignore next */
            (cov_1b98w2pyjx().s[82]++, 0); kh < kernelSize; kh++) {
              /* istanbul ignore next */
              cov_1b98w2pyjx().s[83]++;
              for (let kw =
              /* istanbul ignore next */
              (cov_1b98w2pyjx().s[84]++, 0); kw < kernelSize; kw++) {
                /* istanbul ignore next */
                cov_1b98w2pyjx().s[85]++;
                for (let ic =
                /* istanbul ignore next */
                (cov_1b98w2pyjx().s[86]++, 0); ic < inputChannels; ic++) {
                  let ih =
                  /* istanbul ignore next */
                  (cov_1b98w2pyjx().s[87]++, oh * stride + kh);
                  let iw =
                  /* istanbul ignore next */
                  (cov_1b98w2pyjx().s[88]++, ow * stride + kw);

                  // Handle padding
                  /* istanbul ignore next */
                  cov_1b98w2pyjx().s[89]++;
                  if (padding === 'same') {
                    /* istanbul ignore next */
                    cov_1b98w2pyjx().b[16][0]++;
                    cov_1b98w2pyjx().s[90]++;
                    ih -= Math.floor(kernelSize / 2);
                    /* istanbul ignore next */
                    cov_1b98w2pyjx().s[91]++;
                    iw -= Math.floor(kernelSize / 2);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1b98w2pyjx().b[16][1]++;
                  }

                  // Check bounds
                  cov_1b98w2pyjx().s[92]++;
                  if (
                  /* istanbul ignore next */
                  (cov_1b98w2pyjx().b[18][0]++, ih >= 0) &&
                  /* istanbul ignore next */
                  (cov_1b98w2pyjx().b[18][1]++, ih < height) &&
                  /* istanbul ignore next */
                  (cov_1b98w2pyjx().b[18][2]++, iw >= 0) &&
                  /* istanbul ignore next */
                  (cov_1b98w2pyjx().b[18][3]++, iw < width)) {
                    /* istanbul ignore next */
                    cov_1b98w2pyjx().b[17][0]++;
                    const inputIdx =
                    /* istanbul ignore next */
                    (cov_1b98w2pyjx().s[93]++, b * height * width * inputChannels + ih * width * inputChannels + iw * inputChannels + ic);
                    const weightIdx =
                    /* istanbul ignore next */
                    (cov_1b98w2pyjx().s[94]++, kh * kernelSize * inputChannels * filters + kw * inputChannels * filters + ic * filters + oc);
                    /* istanbul ignore next */
                    cov_1b98w2pyjx().s[95]++;
                    sum += input[inputIdx] * weights.kernel[weightIdx];
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1b98w2pyjx().b[17][1]++;
                  }
                }
              }
            }
            const outputIdx =
            /* istanbul ignore next */
            (cov_1b98w2pyjx().s[96]++, b * outputHeight * outputWidth * outputChannels + oh * outputWidth * outputChannels + ow * outputChannels + oc);
            /* istanbul ignore next */
            cov_1b98w2pyjx().s[97]++;
            output[outputIdx] = sum;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[98]++;
    output.shape = [batchSize, outputHeight, outputWidth, outputChannels];
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[99]++;
    return output;
  }
  maxPool2d(input, poolSize) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[9]++;
    const [batchSize, height, width, channels] =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[100]++, input.shape);
    const outputHeight =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[101]++, Math.floor(height / poolSize));
    const outputWidth =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[102]++, Math.floor(width / poolSize));
    const output =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[103]++, new Float32Array(batchSize * outputHeight * outputWidth * channels));
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[104]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[105]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[106]++;
      for (let oh =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[107]++, 0); oh < outputHeight; oh++) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[108]++;
        for (let ow =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[109]++, 0); ow < outputWidth; ow++) {
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[110]++;
          for (let c =
          /* istanbul ignore next */
          (cov_1b98w2pyjx().s[111]++, 0); c < channels; c++) {
            let maxVal =
            /* istanbul ignore next */
            (cov_1b98w2pyjx().s[112]++, -Infinity);

            // Find max in pool window
            /* istanbul ignore next */
            cov_1b98w2pyjx().s[113]++;
            for (let ph =
            /* istanbul ignore next */
            (cov_1b98w2pyjx().s[114]++, 0); ph < poolSize; ph++) {
              /* istanbul ignore next */
              cov_1b98w2pyjx().s[115]++;
              for (let pw =
              /* istanbul ignore next */
              (cov_1b98w2pyjx().s[116]++, 0); pw < poolSize; pw++) {
                const ih =
                /* istanbul ignore next */
                (cov_1b98w2pyjx().s[117]++, oh * poolSize + ph);
                const iw =
                /* istanbul ignore next */
                (cov_1b98w2pyjx().s[118]++, ow * poolSize + pw);
                /* istanbul ignore next */
                cov_1b98w2pyjx().s[119]++;
                if (
                /* istanbul ignore next */
                (cov_1b98w2pyjx().b[20][0]++, ih < height) &&
                /* istanbul ignore next */
                (cov_1b98w2pyjx().b[20][1]++, iw < width)) {
                  /* istanbul ignore next */
                  cov_1b98w2pyjx().b[19][0]++;
                  const inputIdx =
                  /* istanbul ignore next */
                  (cov_1b98w2pyjx().s[120]++, b * height * width * channels + ih * width * channels + iw * channels + c);
                  /* istanbul ignore next */
                  cov_1b98w2pyjx().s[121]++;
                  maxVal = Math.max(maxVal, input[inputIdx]);
                } else
                /* istanbul ignore next */
                {
                  cov_1b98w2pyjx().b[19][1]++;
                }
              }
            }
            const outputIdx =
            /* istanbul ignore next */
            (cov_1b98w2pyjx().s[122]++, b * outputHeight * outputWidth * channels + oh * outputWidth * channels + ow * channels + c);
            /* istanbul ignore next */
            cov_1b98w2pyjx().s[123]++;
            output[outputIdx] = maxVal;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[124]++;
    output.shape = [batchSize, outputHeight, outputWidth, channels];
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[125]++;
    return output;
  }
  flatten(input) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[10]++;
    const [batchSize, ...dims] =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[126]++, input.shape);
    const flatSize =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[127]++, dims.reduce((a, b) => {
      /* istanbul ignore next */
      cov_1b98w2pyjx().f[11]++;
      cov_1b98w2pyjx().s[128]++;
      return a * b;
    }, 1));
    const output =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[129]++, new Float32Array(batchSize * flatSize));

    // Copy data in flattened order
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[130]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[131]++, 0); i < output.length; i++) {
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[132]++;
      output[i] = input[i];
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[133]++;
    output.shape = [batchSize, flatSize];
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[134]++;
    return output;
  }
  dense(input, weights, biases) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[12]++;
    const [batchSize, inputSize] =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[135]++, input.shape);
    const outputSize =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[136]++, biases.length);
    const output =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[137]++, new Float32Array(batchSize * outputSize));
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[138]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[139]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[140]++;
      for (let o =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[141]++, 0); o < outputSize; o++) {
        let sum =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[142]++, biases[o]);
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[143]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[144]++, 0); i < inputSize; i++) {
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[145]++;
          sum += input[b * inputSize + i] * weights[i * outputSize + o];
        }
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[146]++;
        output[b * outputSize + o] = sum;
      }
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[147]++;
    output.shape = [batchSize, outputSize];
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[148]++;
    return output;
  }
  softmax(input) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[13]++;
    const [batchSize, size] =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[149]++, input.shape);
    const output =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[150]++, new Float32Array(input.length));
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[151]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[152]++, 0); b < batchSize; b++) {
      const offset =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[153]++, b * size);
      let maxVal =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[154]++, -Infinity);

      // Find max for numerical stability
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[155]++;
      for (let i =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[156]++, 0); i < size; i++) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[157]++;
        maxVal = Math.max(maxVal, input[offset + i]);
      }

      // Compute exp and sum
      let sumExp =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[158]++, 0);
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[159]++;
      for (let i =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[160]++, 0); i < size; i++) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[161]++;
        output[offset + i] = Math.exp(input[offset + i] - maxVal);
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[162]++;
        sumExp += output[offset + i];
      }

      // Normalize
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[163]++;
      for (let i =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[164]++, 0); i < size; i++) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[165]++;
        output[offset + i] /= sumExp;
      }
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[166]++;
    output.shape = input.shape;
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[167]++;
    return output;
  }
  train(
  /* istanbul ignore next */
  _x2) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* (trainingData, options =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().b[21][0]++, {})) {
      cov_1b98w2pyjx().f[14]++;
      const {
        epochs =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().b[22][0]++, 10),
        batchSize =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().b[23][0]++, 32),
        learningRate =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().b[24][0]++, 0.001),
        validationSplit =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().b[25][0]++, 0.1)
      } =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[168]++, options);
      const trainingHistory =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[169]++, []);

      // Split data
      const splitIndex =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[170]++, Math.floor(trainingData.length * (1 - validationSplit)));
      const trainData =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[171]++, trainingData.slice(0, splitIndex));
      const valData =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[172]++, trainingData.slice(splitIndex));
      cov_1b98w2pyjx().s[173]++;
      for (let epoch =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[174]++, 0); epoch < epochs; epoch++) {
        let epochLoss =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[175]++, 0);
        let epochAccuracy =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[176]++, 0);
        let batchCount =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[177]++, 0);

        // Shuffle training data
        const shuffled =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[178]++, _this2.shuffle(trainData));

        // Process batches
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[179]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[180]++, 0); i < shuffled.length; i += batchSize) {
          const batch =
          /* istanbul ignore next */
          (cov_1b98w2pyjx().s[181]++, shuffled.slice(i, Math.min(i + batchSize, shuffled.length)));

          // Forward pass
          const predictions =
          /* istanbul ignore next */
          (cov_1b98w2pyjx().s[182]++, yield _this2.forward(batch.inputs, true));

          // Calculate loss and accuracy
          const loss =
          /* istanbul ignore next */
          (cov_1b98w2pyjx().s[183]++, _this2.crossEntropyLoss(predictions, batch.targets));
          const accuracy =
          /* istanbul ignore next */
          (cov_1b98w2pyjx().s[184]++, _this2.calculateAccuracy(predictions, batch.targets));
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[185]++;
          epochLoss += loss;
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[186]++;
          epochAccuracy += accuracy;

          // Backward pass (simplified)
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[187]++;
          /* istanbul ignore next */
          yield _this2.backward(loss, learningRate);
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[188]++;
          batchCount++;
        }

        // Validation
        const valMetrics =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[189]++, yield _this2.evaluate(valData));
        const avgTrainLoss =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[190]++, epochLoss / batchCount);
        const avgTrainAccuracy =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[191]++, epochAccuracy / batchCount);
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[192]++;
        trainingHistory.push({
          epoch: epoch + 1,
          trainLoss: avgTrainLoss,
          trainAccuracy: avgTrainAccuracy,
          valLoss: valMetrics.loss,
          valAccuracy: valMetrics.accuracy
        });
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[193]++;
        console.log(`Epoch ${epoch + 1}/${epochs} - ` + `Train Loss: ${avgTrainLoss.toFixed(4)}, ` + `Train Acc: ${(avgTrainAccuracy * 100).toFixed(2)}%, ` + `Val Loss: ${valMetrics.loss.toFixed(4)}, ` + `Val Acc: ${(valMetrics.accuracy * 100).toFixed(2)}%`);
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[194]++;
        _this2.updateMetrics(avgTrainLoss, avgTrainAccuracy);
      }
      cov_1b98w2pyjx().s[195]++;
      return {
        history: trainingHistory,
        finalLoss: trainingHistory[trainingHistory.length - 1].trainLoss,
        finalAccuracy: trainingHistory[trainingHistory.length - 1].trainAccuracy,
        modelType: 'cnn'
      };
    }).apply(this, arguments);
  }
  evaluate(data) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* () {
      cov_1b98w2pyjx().f[15]++;
      let totalLoss =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[196]++, 0);
      let totalAccuracy =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[197]++, 0);
      let batchCount =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[198]++, 0);
      cov_1b98w2pyjx().s[199]++;
      for (const batch of data) {
        const predictions =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[200]++, yield _this3.forward(batch.inputs, false));
        const loss =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[201]++, _this3.crossEntropyLoss(predictions, batch.targets));
        const accuracy =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[202]++, _this3.calculateAccuracy(predictions, batch.targets));
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[203]++;
        totalLoss += loss;
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[204]++;
        totalAccuracy += accuracy;
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[205]++;
        batchCount++;
      }
      cov_1b98w2pyjx().s[206]++;
      return {
        loss: totalLoss / batchCount,
        accuracy: totalAccuracy / batchCount
      };
    })();
  }
  calculateAccuracy(predictions, targets) {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[16]++;
    let correct =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[207]++, 0);
    const batchSize =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[208]++, predictions.shape[0]);
    const numClasses =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[209]++, predictions.shape[1]);
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[210]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[211]++, 0); b < batchSize; b++) {
      let predClass =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[212]++, 0);
      let maxProb =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[213]++, -Infinity);

      // Find predicted class
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[214]++;
      for (let c =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[215]++, 0); c < numClasses; c++) {
        const prob =
        /* istanbul ignore next */
        (cov_1b98w2pyjx().s[216]++, predictions[b * numClasses + c]);
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[217]++;
        if (prob > maxProb) {
          /* istanbul ignore next */
          cov_1b98w2pyjx().b[26][0]++;
          cov_1b98w2pyjx().s[218]++;
          maxProb = prob;
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[219]++;
          predClass = c;
        } else
        /* istanbul ignore next */
        {
          cov_1b98w2pyjx().b[26][1]++;
        }
      }

      // Find true class
      let trueClass =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[220]++, 0);
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[221]++;
      for (let c =
      /* istanbul ignore next */
      (cov_1b98w2pyjx().s[222]++, 0); c < numClasses; c++) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().s[223]++;
        if (targets[b * numClasses + c] === 1) {
          /* istanbul ignore next */
          cov_1b98w2pyjx().b[27][0]++;
          cov_1b98w2pyjx().s[224]++;
          trueClass = c;
          /* istanbul ignore next */
          cov_1b98w2pyjx().s[225]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_1b98w2pyjx().b[27][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[226]++;
      if (predClass === trueClass) {
        /* istanbul ignore next */
        cov_1b98w2pyjx().b[28][0]++;
        cov_1b98w2pyjx().s[227]++;
        correct++;
      } else
      /* istanbul ignore next */
      {
        cov_1b98w2pyjx().b[28][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[228]++;
    return correct / batchSize;
  }
  getConfig() {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[17]++;
    cov_1b98w2pyjx().s[229]++;
    return /* istanbul ignore next */_objectSpread(_objectSpread({
      type: 'cnn'
    }, this.config), {}, {
      parameters: this.countParameters()
    });
  }
  countParameters() {
    /* istanbul ignore next */
    cov_1b98w2pyjx().f[18]++;
    let count =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[230]++, 0);

    // Convolutional layers
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[231]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[232]++, 0); i < this.convWeights.length; i++) {
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[233]++;
      count += this.convWeights[i].kernel.length;
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[234]++;
      count += this.convBiases[i].length;
    }

    // Dense layers
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[235]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1b98w2pyjx().s[236]++, 0); i < this.denseWeights.length; i++) {
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[237]++;
      count += this.denseWeights[i].length;
      /* istanbul ignore next */
      cov_1b98w2pyjx().s[238]++;
      count += this.denseBiases[i].length;
    }
    /* istanbul ignore next */
    cov_1b98w2pyjx().s[239]++;
    return count;
  }
}
export { CNNModel };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,