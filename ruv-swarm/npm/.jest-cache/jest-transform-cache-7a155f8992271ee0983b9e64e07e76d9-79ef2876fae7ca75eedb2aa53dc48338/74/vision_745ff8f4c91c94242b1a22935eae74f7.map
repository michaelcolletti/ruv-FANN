{"version":3,"names":["cov_19cm7q4lps","actualCoverage","visionPresets","s","object_detection_realtime","name","description","model","config","inputShape","architecture","convLayers","filters","kernelSize","stride","activation","anchors","numClasses","dropoutRate","training","batchSize","learningRate","epochs","optimizer","momentum","augmentation","rotation","zoom","flip","colorJitter","performance","expectedAccuracy","inferenceTime","memoryUsage","trainingTime","useCase","facial_recognition_secure","numBlocks","blockDepth","hiddenDimensions","initialChannels","embeddingSize","useArcFaceLoss","scheduler","margin","scale","medical_imaging_analysis","batchNorm","skipConnections","attentionGates","lossFunction","classWeights","elasticDeformation","intensityShift","autonomous_driving","backboneNetwork","tasks","segmentation","detection","depthEstimation","outputChannels","laneDetection","numLanes","featurePyramid","multiTaskWeights","depth","lanes","mixedPrecision","quality_inspection","backbone","metricLearning","embeddingDimension","anomalyThreshold","contrastiveLoss","hardNegativeMining","brightness","contrast","noise","satellite_image_analysis","outputStride","asppDilationRates","polynomialDecay","randomCrop","horizontalFlip","verticalFlip","gaussianNoise","document_scanner","cnnBackbone","rnnHiddenSize","rnnLayers","vocabSize","ctcBeamWidth","ctcLoss","perspective","shear","blur","video_action_recognition","inflatedKernels","temporalKernelSize","includeOpticalFlow","clipGradientNorm","temporalJitter","spatialCrop","image_enhancement","inputSize","encoderLayers","bottleneckSize","decoderLayers","residualLearning","perceptualLoss","lossWeights","reconstruction","perceptual","adversarial","style_transfer","encoderBackbone","decoderDepth","instanceNormalization","styleEmbeddingSize","numStyles","contentWeight","styleWeight","tvWeight","useMultipleStyleLayers","getVisionPreset","presetName","f","b","Error","Object","keys","join","availableVisionPresets"],"sources":["vision.js"],"sourcesContent":["/**\n * Computer Vision Neural Network Presets\n * Production-ready configurations for image and video processing tasks\n */\n\nexport const visionPresets = {\n  // Real-time Object Detection\n  object_detection_realtime: {\n    name: 'Real-time Object Detector',\n    description: 'Optimized for real-time object detection in video streams',\n    model: 'cnn',\n    config: {\n      inputShape: [416, 416, 3],\n      architecture: 'yolo_v5',\n      convLayers: [\n        { filters: 32, kernelSize: 3, stride: 1, activation: 'mish' },\n        { filters: 64, kernelSize: 3, stride: 2, activation: 'mish' },\n        { filters: 128, kernelSize: 3, stride: 1, activation: 'mish' },\n        { filters: 256, kernelSize: 3, stride: 2, activation: 'mish' }\n      ],\n      anchors: [[10,13], [16,30], [33,23], [30,61], [62,45], [59,119], [116,90], [156,198], [373,326]],\n      numClasses: 80,\n      dropoutRate: 0.2\n    },\n    training: {\n      batchSize: 16,\n      learningRate: 1e-3,\n      epochs: 100,\n      optimizer: 'sgd',\n      momentum: 0.9,\n      augmentation: {\n        rotation: 15,\n        zoom: 0.2,\n        flip: true,\n        colorJitter: 0.2\n      }\n    },\n    performance: {\n      expectedAccuracy: '85-88% mAP',\n      inferenceTime: '8ms (30+ FPS)',\n      memoryUsage: '150MB',\n      trainingTime: '24-48 hours on GPU'\n    },\n    useCase: 'Security cameras, autonomous vehicles, robotics'\n  },\n\n  // Facial Recognition\n  facial_recognition_secure: {\n    name: 'Secure Facial Recognition',\n    description: 'High-accuracy facial recognition with privacy features',\n    model: 'resnet',\n    config: {\n      inputShape: [160, 160, 3],\n      architecture: 'facenet',\n      numBlocks: 8,\n      blockDepth: 3,\n      hiddenDimensions: 512,\n      initialChannels: 64,\n      embeddingSize: 128,\n      useArcFaceLoss: true\n    },\n    training: {\n      batchSize: 128,\n      learningRate: 5e-4,\n      epochs: 200,\n      optimizer: 'adam',\n      scheduler: 'cosine',\n      margin: 0.5,\n      scale: 30\n    },\n    performance: {\n      expectedAccuracy: '99.2% on LFW',\n      inferenceTime: '5ms',\n      memoryUsage: '200MB',\n      trainingTime: '3-5 days on GPU'\n    },\n    useCase: 'Access control, identity verification, secure authentication'\n  },\n\n  // Medical Image Analysis\n  medical_imaging_analysis: {\n    name: 'Medical Image Analyzer',\n    description: 'Analyze medical images for diagnosis support',\n    model: 'cnn',\n    config: {\n      inputShape: [512, 512, 1], // Grayscale medical images\n      architecture: 'unet_3d',\n      convLayers: [\n        { filters: 64, kernelSize: 3, stride: 1, activation: 'relu', batchNorm: true },\n        { filters: 128, kernelSize: 3, stride: 1, activation: 'relu', batchNorm: true },\n        { filters: 256, kernelSize: 3, stride: 1, activation: 'relu', batchNorm: true },\n        { filters: 512, kernelSize: 3, stride: 1, activation: 'relu', batchNorm: true }\n      ],\n      skipConnections: true,\n      attentionGates: true,\n      dropoutRate: 0.3\n    },\n    training: {\n      batchSize: 8,\n      learningRate: 1e-4,\n      epochs: 150,\n      optimizer: 'adamw',\n      lossFunction: 'dice_bce',\n      classWeights: 'auto',\n      augmentation: {\n        rotation: 20,\n        elasticDeformation: true,\n        intensityShift: 0.1\n      }\n    },\n    performance: {\n      expectedAccuracy: '93-95% Dice Score',\n      inferenceTime: '200ms',\n      memoryUsage: '2GB',\n      trainingTime: '48-72 hours on GPU'\n    },\n    useCase: 'Tumor detection, organ segmentation, disease classification'\n  },\n\n  // Autonomous Driving\n  autonomous_driving: {\n    name: 'Autonomous Driving Vision',\n    description: 'Multi-task vision for autonomous vehicles',\n    model: 'cnn',\n    config: {\n      inputShape: [640, 480, 3],\n      architecture: 'multitask_network',\n      backboneNetwork: 'efficientnet_b4',\n      tasks: {\n        segmentation: { numClasses: 19 },\n        detection: { numClasses: 10 },\n        depthEstimation: { outputChannels: 1 },\n        laneDetection: { numLanes: 4 }\n      },\n      featurePyramid: true,\n      dropoutRate: 0.2\n    },\n    training: {\n      batchSize: 4,\n      learningRate: 2e-4,\n      epochs: 80,\n      optimizer: 'adam',\n      multiTaskWeights: {\n        segmentation: 1.0,\n        detection: 1.0,\n        depth: 0.5,\n        lanes: 0.8\n      },\n      mixedPrecision: true\n    },\n    performance: {\n      expectedAccuracy: '88-91% mIoU',\n      inferenceTime: '25ms',\n      memoryUsage: '500MB',\n      trainingTime: '5-7 days on multi-GPU'\n    },\n    useCase: 'Self-driving cars, ADAS systems, robotics navigation'\n  },\n\n  // Quality Inspection\n  quality_inspection: {\n    name: 'Industrial Quality Inspector',\n    description: 'Detect defects in manufacturing',\n    model: 'cnn',\n    config: {\n      inputShape: [224, 224, 3],\n      architecture: 'siamese_network',\n      backbone: 'resnet50',\n      metricLearning: true,\n      embeddingDimension: 256,\n      anomalyThreshold: 0.85,\n      dropoutRate: 0.3\n    },\n    training: {\n      batchSize: 32,\n      learningRate: 1e-3,\n      epochs: 100,\n      optimizer: 'adam',\n      contrastiveLoss: true,\n      hardNegativeMining: true,\n      augmentation: {\n        rotation: 360,\n        brightness: 0.3,\n        contrast: 0.3,\n        noise: 0.05\n      }\n    },\n    performance: {\n      expectedAccuracy: '96-98% defect detection',\n      inferenceTime: '10ms',\n      memoryUsage: '300MB',\n      trainingTime: '12-24 hours on GPU'\n    },\n    useCase: 'Manufacturing QC, PCB inspection, surface defect detection'\n  },\n\n  // Satellite Image Analysis\n  satellite_image_analysis: {\n    name: 'Satellite Image Analyzer',\n    description: 'Analyze satellite imagery for various applications',\n    model: 'cnn',\n    config: {\n      inputShape: [512, 512, 8], // Multispectral channels\n      architecture: 'deeplab_v3_plus',\n      backbone: 'xception',\n      outputStride: 16,\n      numClasses: 15,\n      asppDilationRates: [6, 12, 18],\n      dropoutRate: 0.3\n    },\n    training: {\n      batchSize: 8,\n      learningRate: 5e-4,\n      epochs: 120,\n      optimizer: 'sgd',\n      momentum: 0.9,\n      polynomialDecay: true,\n      augmentation: {\n        randomCrop: 448,\n        horizontalFlip: true,\n        verticalFlip: true,\n        gaussianNoise: 0.01\n      }\n    },\n    performance: {\n      expectedAccuracy: '89-92% pixel accuracy',\n      inferenceTime: '150ms',\n      memoryUsage: '1.5GB',\n      trainingTime: '36-48 hours on GPU'\n    },\n    useCase: 'Land use classification, change detection, disaster response'\n  },\n\n  // Document Scanner\n  document_scanner: {\n    name: 'Document Scanner and OCR',\n    description: 'Scan and extract text from documents',\n    model: 'cnn',\n    config: {\n      inputShape: [768, 1024, 3],\n      architecture: 'crnn',\n      cnnBackbone: 'mobilenet_v3',\n      rnnHiddenSize: 256,\n      rnnLayers: 2,\n      vocabSize: 95, // Printable ASCII\n      ctcBeamWidth: 100,\n      dropoutRate: 0.3\n    },\n    training: {\n      batchSize: 16,\n      learningRate: 1e-3,\n      epochs: 50,\n      optimizer: 'adam',\n      ctcLoss: true,\n      augmentation: {\n        perspective: true,\n        rotation: 5,\n        shear: 0.2,\n        blur: 0.5\n      }\n    },\n    performance: {\n      expectedAccuracy: '98-99% character accuracy',\n      inferenceTime: '50ms',\n      memoryUsage: '400MB',\n      trainingTime: '24-36 hours on GPU'\n    },\n    useCase: 'Document digitization, receipt scanning, form processing'\n  },\n\n  // Video Action Recognition\n  video_action_recognition: {\n    name: 'Video Action Recognizer',\n    description: 'Recognize human actions in video sequences',\n    model: 'cnn',\n    config: {\n      inputShape: [16, 224, 224, 3], // 16 frames\n      architecture: 'i3d',\n      inflatedKernels: true,\n      temporalKernelSize: 3,\n      numClasses: 400,\n      includeOpticalFlow: false,\n      dropoutRate: 0.5\n    },\n    training: {\n      batchSize: 8,\n      learningRate: 1e-3,\n      epochs: 80,\n      optimizer: 'sgd',\n      momentum: 0.9,\n      clipGradientNorm: 40,\n      augmentation: {\n        temporalJitter: 4,\n        spatialCrop: 'random',\n        colorJitter: 0.2\n      }\n    },\n    performance: {\n      expectedAccuracy: '82-85% top-1',\n      inferenceTime: '100ms per clip',\n      memoryUsage: '800MB',\n      trainingTime: '3-5 days on GPU'\n    },\n    useCase: 'Sports analysis, surveillance, human-computer interaction'\n  },\n\n  // Image Enhancement\n  image_enhancement: {\n    name: 'AI Image Enhancer',\n    description: 'Enhance image quality and resolution',\n    model: 'autoencoder',\n    config: {\n      inputSize: 65536, // 256x256\n      encoderLayers: [32768, 16384, 8192, 4096],\n      bottleneckSize: 2048,\n      decoderLayers: [4096, 8192, 16384, 32768],\n      skipConnections: true,\n      residualLearning: true,\n      perceptualLoss: true,\n      activation: 'prelu'\n    },\n    training: {\n      batchSize: 16,\n      learningRate: 2e-4,\n      epochs: 200,\n      optimizer: 'adam',\n      lossWeights: {\n        reconstruction: 1.0,\n        perceptual: 0.1,\n        adversarial: 0.001\n      },\n      scheduler: 'reduceLROnPlateau'\n    },\n    performance: {\n      expectedAccuracy: '32-35 PSNR',\n      inferenceTime: '80ms',\n      memoryUsage: '600MB',\n      trainingTime: '48-72 hours on GPU'\n    },\n    useCase: 'Photo restoration, super-resolution, denoising'\n  },\n\n  // Style Transfer\n  style_transfer: {\n    name: 'Neural Style Transfer',\n    description: 'Apply artistic styles to images',\n    model: 'cnn',\n    config: {\n      inputShape: [512, 512, 3],\n      architecture: 'style_transfer_net',\n      encoderBackbone: 'vgg19',\n      decoderDepth: 5,\n      instanceNormalization: true,\n      styleEmbeddingSize: 256,\n      numStyles: 10,\n      dropoutRate: 0.0\n    },\n    training: {\n      batchSize: 8,\n      learningRate: 1e-3,\n      epochs: 40,\n      optimizer: 'adam',\n      contentWeight: 1.0,\n      styleWeight: 100000,\n      tvWeight: 1e-6,\n      useMultipleStyleLayers: true\n    },\n    performance: {\n      expectedAccuracy: 'Subjective quality',\n      inferenceTime: '100ms',\n      memoryUsage: '500MB',\n      trainingTime: '12-24 hours on GPU'\n    },\n    useCase: 'Artistic applications, photo filters, content creation'\n  }\n};\n\n// Export utility function to get preset by name\nexport const getVisionPreset = (presetName) => {\n  if (!visionPresets[presetName]) {\n    throw new Error(`Vision preset '${presetName}' not found. Available presets: ${Object.keys(visionPresets).join(', ')}`);\n  }\n  return visionPresets[presetName];\n};\n\n// Export list of available presets\nexport const availableVisionPresets = Object.keys(visionPresets);"],"mappings":"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","ignoreList":[]}