1931067b9e72de85eb2949454875365f
/* istanbul ignore next */
function cov_1vh7791eop() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/claude-flow-enhanced.js";
  var hash = "efdf60f87d15c5e5370c7a6131ae0138a8f4a72c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/claude-flow-enhanced.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "1": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "2": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 21
        }
      },
      "3": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 37
        }
      },
      "4": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "5": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "6": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 39
        }
      },
      "7": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "8": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "9": {
        start: {
          line: 42,
          column: 18
        },
        end: {
          line: 42,
          column: 62
        }
      },
      "10": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 55
        }
      },
      "11": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "12": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 53,
          column: 67
        }
      },
      "13": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "14": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 56,
          column: 128
        }
      },
      "15": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 28
        }
      },
      "16": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 90
        }
      },
      "17": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 59,
          column: 83
        }
      },
      "18": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "19": {
        start: {
          line: 73,
          column: 19
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "20": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "21": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 62
        }
      },
      "22": {
        start: {
          line: 83,
          column: 21
        },
        end: {
          line: 83,
          column: 50
        }
      },
      "23": {
        start: {
          line: 84,
          column: 23
        },
        end: {
          line: 84,
          column: 66
        }
      },
      "24": {
        start: {
          line: 85,
          column: 25
        },
        end: {
          line: 86,
          column: 62
        }
      },
      "25": {
        start: {
          line: 86,
          column: 30
        },
        end: {
          line: 86,
          column: 61
        }
      },
      "26": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "27": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 99,
          column: 30
        }
      },
      "28": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "29": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 85
        }
      },
      "30": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 103,
          column: 76
        }
      },
      "31": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 89
        }
      },
      "32": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 67
        }
      },
      "33": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "34": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 96
        }
      },
      "35": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 96
        }
      },
      "36": {
        start: {
          line: 113,
          column: 19
        },
        end: {
          line: 113,
          column: 60
        }
      },
      "37": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "38": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 81
        }
      },
      "39": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 89
        }
      },
      "40": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 27
        }
      },
      "41": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 96
        }
      },
      "42": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 25
        }
      },
      "43": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 25
        }
      },
      "44": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 49
        }
      },
      "45": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 31
        }
      },
      "46": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 41
        }
      },
      "47": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 143,
          column: 6
        }
      },
      "48": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 64
        }
      },
      "49": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "50": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "51": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "52": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 169,
          column: 45
        }
      },
      "53": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 52
        }
      },
      "54": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 174,
          column: 7
        }
      },
      "55": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 42
        }
      },
      "56": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 61
        }
      },
      "57": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "58": {
        start: {
          line: 183,
          column: 6
        },
        end: {
          line: 183,
          column: 18
        }
      },
      "59": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 185,
          column: 71
        }
      },
      "60": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 186,
          column: 89
        }
      },
      "61": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "62": {
        start: {
          line: 196,
          column: 25
        },
        end: {
          line: 196,
          column: 37
        }
      },
      "63": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 201,
          column: 6
        }
      },
      "64": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 199,
          column: 55
        }
      },
      "65": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 46
        }
      },
      "66": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 206,
          column: 6
        }
      },
      "67": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 56
        }
      },
      "68": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 47
        }
      },
      "69": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 209,
          column: 33
        }
      },
      "70": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 84
        }
      },
      "71": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 31
        }
      },
      "72": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 31
        }
      },
      "73": {
        start: {
          line: 220,
          column: 24
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "74": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 233,
          column: 7
        }
      },
      "75": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 232,
          column: 7
        }
      },
      "76": {
        start: {
          line: 227,
          column: 25
        },
        end: {
          line: 227,
          column: 66
        }
      },
      "77": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "78": {
        start: {
          line: 229,
          column: 10
        },
        end: {
          line: 229,
          column: 56
        }
      },
      "79": {
        start: {
          line: 230,
          column: 10
        },
        end: {
          line: 230,
          column: 35
        }
      },
      "80": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 22
        }
      },
      "81": {
        start: {
          line: 249,
          column: 26
        },
        end: {
          line: 249,
          column: 73
        }
      },
      "82": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "83": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 252,
          column: 75
        }
      },
      "84": {
        start: {
          line: 253,
          column: 6
        },
        end: {
          line: 253,
          column: 78
        }
      },
      "85": {
        start: {
          line: 256,
          column: 21
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "86": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 46
        }
      },
      "87": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 272,
          column: 58
        }
      },
      "88": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 103
        }
      },
      "89": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 20
        }
      },
      "90": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 293,
          column: 7
        }
      },
      "91": {
        start: {
          line: 283,
          column: 29
        },
        end: {
          line: 283,
          column: 60
        }
      },
      "92": {
        start: {
          line: 284,
          column: 27
        },
        end: {
          line: 284,
          column: 65
        }
      },
      "93": {
        start: {
          line: 286,
          column: 6
        },
        end: {
          line: 292,
          column: 8
        }
      },
      "94": {
        start: {
          line: 300,
          column: 32
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "95": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 306,
          column: 40
        }
      },
      "96": {
        start: {
          line: 313,
          column: 25
        },
        end: {
          line: 313,
          column: 27
        }
      },
      "97": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 331,
          column: 5
        }
      },
      "98": {
        start: {
          line: 317,
          column: 6
        },
        end: {
          line: 317,
          column: 45
        }
      },
      "99": {
        start: {
          line: 317,
          column: 36
        },
        end: {
          line: 317,
          column: 45
        }
      },
      "100": {
        start: {
          line: 319,
          column: 25
        },
        end: {
          line: 319,
          column: 42
        }
      },
      "101": {
        start: {
          line: 320,
          column: 27
        },
        end: {
          line: 320,
          column: 50
        }
      },
      "102": {
        start: {
          line: 322,
          column: 27
        },
        end: {
          line: 326,
          column: 7
        }
      },
      "103": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "104": {
        start: {
          line: 324,
          column: 10
        },
        end: {
          line: 324,
          column: 58
        }
      },
      "105": {
        start: {
          line: 328,
          column: 6
        },
        end: {
          line: 330,
          column: 7
        }
      },
      "106": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 40
        }
      },
      "107": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 24
        }
      },
      "108": {
        start: {
          line: 340,
          column: 21
        },
        end: {
          line: 340,
          column: 51
        }
      },
      "109": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 343,
          column: 5
        }
      },
      "110": {
        start: {
          line: 342,
          column: 6
        },
        end: {
          line: 342,
          column: 91
        }
      },
      "111": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 345,
          column: 59
        }
      },
      "112": {
        start: {
          line: 348,
          column: 18
        },
        end: {
          line: 352,
          column: 6
        }
      },
      "113": {
        start: {
          line: 354,
          column: 24
        },
        end: {
          line: 354,
          column: 58
        }
      },
      "114": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 360,
          column: 7
        }
      },
      "115": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 416,
          column: 5
        }
      },
      "116": {
        start: {
          line: 364,
          column: 22
        },
        end: {
          line: 364,
          column: 65
        }
      },
      "117": {
        start: {
          line: 366,
          column: 6
        },
        end: {
          line: 366,
          column: 68
        }
      },
      "118": {
        start: {
          line: 368,
          column: 22
        },
        end: {
          line: 368,
          column: 24
        }
      },
      "119": {
        start: {
          line: 370,
          column: 6
        },
        end: {
          line: 385,
          column: 7
        }
      },
      "120": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 101
        }
      },
      "121": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "122": {
        start: {
          line: 375,
          column: 25
        },
        end: {
          line: 375,
          column: 73
        }
      },
      "123": {
        start: {
          line: 376,
          column: 10
        },
        end: {
          line: 376,
          column: 31
        }
      },
      "124": {
        start: {
          line: 379,
          column: 31
        },
        end: {
          line: 379,
          column: 82
        }
      },
      "125": {
        start: {
          line: 380,
          column: 10
        },
        end: {
          line: 380,
          column: 40
        }
      },
      "126": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 54
        }
      },
      "127": {
        start: {
          line: 388,
          column: 27
        },
        end: {
          line: 388,
          column: 68
        }
      },
      "128": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 389,
          column: 40
        }
      },
      "129": {
        start: {
          line: 390,
          column: 6
        },
        end: {
          line: 390,
          column: 40
        }
      },
      "130": {
        start: {
          line: 391,
          column: 6
        },
        end: {
          line: 391,
          column: 76
        }
      },
      "131": {
        start: {
          line: 392,
          column: 6
        },
        end: {
          line: 392,
          column: 37
        }
      },
      "132": {
        start: {
          line: 394,
          column: 6
        },
        end: {
          line: 394,
          column: 72
        }
      },
      "133": {
        start: {
          line: 397,
          column: 22
        },
        end: {
          line: 397,
          column: 76
        }
      },
      "134": {
        start: {
          line: 399,
          column: 6
        },
        end: {
          line: 407,
          column: 8
        }
      },
      "135": {
        start: {
          line: 410,
          column: 27
        },
        end: {
          line: 410,
          column: 68
        }
      },
      "136": {
        start: {
          line: 411,
          column: 6
        },
        end: {
          line: 411,
          column: 37
        }
      },
      "137": {
        start: {
          line: 412,
          column: 6
        },
        end: {
          line: 412,
          column: 41
        }
      },
      "138": {
        start: {
          line: 414,
          column: 6
        },
        end: {
          line: 414,
          column: 69
        }
      },
      "139": {
        start: {
          line: 415,
          column: 6
        },
        end: {
          line: 415,
          column: 99
        }
      },
      "140": {
        start: {
          line: 423,
          column: 20
        },
        end: {
          line: 423,
          column: 22
        }
      },
      "141": {
        start: {
          line: 424,
          column: 22
        },
        end: {
          line: 424,
          column: 31
        }
      },
      "142": {
        start: {
          line: 427,
          column: 28
        },
        end: {
          line: 427,
          column: 37
        }
      },
      "143": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 430,
          column: 7
        }
      },
      "144": {
        start: {
          line: 429,
          column: 6
        },
        end: {
          line: 429,
          column: 60
        }
      },
      "145": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 452,
          column: 5
        }
      },
      "146": {
        start: {
          line: 433,
          column: 27
        },
        end: {
          line: 433,
          column: 29
        }
      },
      "147": {
        start: {
          line: 436,
          column: 6
        },
        end: {
          line: 444,
          column: 7
        }
      },
      "148": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 45
        }
      },
      "149": {
        start: {
          line: 437,
          column: 36
        },
        end: {
          line: 437,
          column: 45
        }
      },
      "150": {
        start: {
          line: 439,
          column: 31
        },
        end: {
          line: 439,
          column: 83
        }
      },
      "151": {
        start: {
          line: 439,
          column: 63
        },
        end: {
          line: 439,
          column: 82
        }
      },
      "152": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "153": {
        start: {
          line: 442,
          column: 10
        },
        end: {
          line: 442,
          column: 34
        }
      },
      "154": {
        start: {
          line: 446,
          column: 6
        },
        end: {
          line: 448,
          column: 7
        }
      },
      "155": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 101
        }
      },
      "156": {
        start: {
          line: 450,
          column: 6
        },
        end: {
          line: 450,
          column: 33
        }
      },
      "157": {
        start: {
          line: 451,
          column: 6
        },
        end: {
          line: 451,
          column: 59
        }
      },
      "158": {
        start: {
          line: 451,
          column: 35
        },
        end: {
          line: 451,
          column: 57
        }
      },
      "159": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 19
        }
      },
      "160": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 461,
          column: 66
        }
      },
      "161": {
        start: {
          line: 463,
          column: 4
        },
        end: {
          line: 463,
          column: 80
        }
      },
      "162": {
        start: {
          line: 466,
          column: 25
        },
        end: {
          line: 496,
          column: 6
        }
      },
      "163": {
        start: {
          line: 467,
          column: 6
        },
        end: {
          line: 495,
          column: 7
        }
      },
      "164": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "165": {
        start: {
          line: 470,
          column: 10
        },
        end: {
          line: 473,
          column: 13
        }
      },
      "166": {
        start: {
          line: 476,
          column: 23
        },
        end: {
          line: 476,
          column: 67
        }
      },
      "167": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 94
        }
      },
      "168": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 485,
          column: 10
        }
      },
      "169": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 487,
          column: 93
        }
      },
      "170": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 494,
          column: 10
        }
      },
      "171": {
        start: {
          line: 499,
          column: 20
        },
        end: {
          line: 499,
          column: 51
        }
      },
      "172": {
        start: {
          line: 501,
          column: 22
        },
        end: {
          line: 501,
          column: 74
        }
      },
      "173": {
        start: {
          line: 501,
          column: 42
        },
        end: {
          line: 501,
          column: 66
        }
      },
      "174": {
        start: {
          line: 502,
          column: 19
        },
        end: {
          line: 502,
          column: 68
        }
      },
      "175": {
        start: {
          line: 502,
          column: 39
        },
        end: {
          line: 502,
          column: 60
        }
      },
      "176": {
        start: {
          line: 504,
          column: 4
        },
        end: {
          line: 504,
          column: 78
        }
      },
      "177": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 506,
          column: 19
        }
      },
      "178": {
        start: {
          line: 513,
          column: 22
        },
        end: {
          line: 513,
          column: 32
        }
      },
      "179": {
        start: {
          line: 515,
          column: 4
        },
        end: {
          line: 548,
          column: 5
        }
      },
      "180": {
        start: {
          line: 518,
          column: 6
        },
        end: {
          line: 533,
          column: 7
        }
      },
      "181": {
        start: {
          line: 520,
          column: 10
        },
        end: {
          line: 520,
          column: 71
        }
      },
      "182": {
        start: {
          line: 521,
          column: 10
        },
        end: {
          line: 521,
          column: 16
        }
      },
      "183": {
        start: {
          line: 523,
          column: 10
        },
        end: {
          line: 523,
          column: 70
        }
      },
      "184": {
        start: {
          line: 524,
          column: 10
        },
        end: {
          line: 524,
          column: 16
        }
      },
      "185": {
        start: {
          line: 526,
          column: 10
        },
        end: {
          line: 526,
          column: 79
        }
      },
      "186": {
        start: {
          line: 527,
          column: 10
        },
        end: {
          line: 527,
          column: 16
        }
      },
      "187": {
        start: {
          line: 529,
          column: 10
        },
        end: {
          line: 529,
          column: 71
        }
      },
      "188": {
        start: {
          line: 530,
          column: 10
        },
        end: {
          line: 530,
          column: 16
        }
      },
      "189": {
        start: {
          line: 532,
          column: 10
        },
        end: {
          line: 532,
          column: 64
        }
      },
      "190": {
        start: {
          line: 535,
          column: 28
        },
        end: {
          line: 535,
          column: 50
        }
      },
      "191": {
        start: {
          line: 537,
          column: 6
        },
        end: {
          line: 541,
          column: 8
        }
      },
      "192": {
        start: {
          line: 543,
          column: 28
        },
        end: {
          line: 543,
          column: 50
        }
      },
      "193": {
        start: {
          line: 544,
          column: 6
        },
        end: {
          line: 547,
          column: 8
        }
      },
      "194": {
        start: {
          line: 555,
          column: 37
        },
        end: {
          line: 555,
          column: 41
        }
      },
      "195": {
        start: {
          line: 557,
          column: 4
        },
        end: {
          line: 561,
          column: 5
        }
      },
      "196": {
        start: {
          line: 558,
          column: 6
        },
        end: {
          line: 558,
          column: 55
        }
      },
      "197": {
        start: {
          line: 560,
          column: 6
        },
        end: {
          line: 560,
          column: 85
        }
      },
      "198": {
        start: {
          line: 568,
          column: 4
        },
        end: {
          line: 568,
          column: 56
        }
      },
      "199": {
        start: {
          line: 572,
          column: 4
        },
        end: {
          line: 577,
          column: 6
        }
      },
      "200": {
        start: {
          line: 584,
          column: 4
        },
        end: {
          line: 586,
          column: 5
        }
      },
      "201": {
        start: {
          line: 585,
          column: 6
        },
        end: {
          line: 585,
          column: 89
        }
      },
      "202": {
        start: {
          line: 588,
          column: 58
        },
        end: {
          line: 588,
          column: 62
        }
      },
      "203": {
        start: {
          line: 591,
          column: 24
        },
        end: {
          line: 595,
          column: 6
        }
      },
      "204": {
        start: {
          line: 598,
          column: 28
        },
        end: {
          line: 600,
          column: 6
        }
      },
      "205": {
        start: {
          line: 602,
          column: 4
        },
        end: {
          line: 610,
          column: 6
        }
      },
      "206": {
        start: {
          line: 617,
          column: 51
        },
        end: {
          line: 617,
          column: 55
        }
      },
      "207": {
        start: {
          line: 620,
          column: 22
        },
        end: {
          line: 620,
          column: 32
        }
      },
      "208": {
        start: {
          line: 623,
          column: 19
        },
        end: {
          line: 632,
          column: 5
        }
      },
      "209": {
        start: {
          line: 634,
          column: 4
        },
        end: {
          line: 634,
          column: 18
        }
      },
      "210": {
        start: {
          line: 641,
          column: 4
        },
        end: {
          line: 646,
          column: 6
        }
      },
      "211": {
        start: {
          line: 653,
          column: 4
        },
        end: {
          line: 657,
          column: 5
        }
      },
      "212": {
        start: {
          line: 654,
          column: 6
        },
        end: {
          line: 656,
          column: 7
        }
      },
      "213": {
        start: {
          line: 655,
          column: 8
        },
        end: {
          line: 655,
          column: 47
        }
      },
      "214": {
        start: {
          line: 664,
          column: 23
        },
        end: {
          line: 664,
          column: 44
        }
      },
      "215": {
        start: {
          line: 665,
          column: 26
        },
        end: {
          line: 665,
          column: 77
        }
      },
      "216": {
        start: {
          line: 665,
          column: 53
        },
        end: {
          line: 665,
          column: 69
        }
      },
      "217": {
        start: {
          line: 666,
          column: 22
        },
        end: {
          line: 666,
          column: 69
        }
      },
      "218": {
        start: {
          line: 666,
          column: 49
        },
        end: {
          line: 666,
          column: 61
        }
      },
      "219": {
        start: {
          line: 668,
          column: 38
        },
        end: {
          line: 668,
          column: 55
        }
      },
      "220": {
        start: {
          line: 669,
          column: 23
        },
        end: {
          line: 669,
          column: 44
        }
      },
      "221": {
        start: {
          line: 671,
          column: 26
        },
        end: {
          line: 671,
          column: 64
        }
      },
      "222": {
        start: {
          line: 672,
          column: 32
        },
        end: {
          line: 672,
          column: 58
        }
      },
      "223": {
        start: {
          line: 673,
          column: 28
        },
        end: {
          line: 673,
          column: 50
        }
      },
      "224": {
        start: {
          line: 675,
          column: 4
        },
        end: {
          line: 686,
          column: 6
        }
      },
      "225": {
        start: {
          line: 693,
          column: 27
        },
        end: {
          line: 693,
          column: 65
        }
      },
      "226": {
        start: {
          line: 694,
          column: 22
        },
        end: {
          line: 694,
          column: 57
        }
      },
      "227": {
        start: {
          line: 695,
          column: 26
        },
        end: {
          line: 695,
          column: 71
        }
      },
      "228": {
        start: {
          line: 697,
          column: 4
        },
        end: {
          line: 717,
          column: 6
        }
      },
      "229": {
        start: {
          line: 700,
          column: 55
        },
        end: {
          line: 700,
          column: 77
        }
      },
      "230": {
        start: {
          line: 701,
          column: 58
        },
        end: {
          line: 701,
          column: 82
        }
      },
      "231": {
        start: {
          line: 702,
          column: 57
        },
        end: {
          line: 702,
          column: 94
        }
      },
      "232": {
        start: {
          line: 710,
          column: 37
        },
        end: {
          line: 715,
          column: 7
        }
      },
      "233": {
        start: {
          line: 724,
          column: 19
        },
        end: {
          line: 724,
          column: 21
        }
      },
      "234": {
        start: {
          line: 725,
          column: 28
        },
        end: {
          line: 725,
          column: 30
        }
      },
      "235": {
        start: {
          line: 728,
          column: 28
        },
        end: {
          line: 728,
          column: 73
        }
      },
      "236": {
        start: {
          line: 728,
          column: 55
        },
        end: {
          line: 728,
          column: 72
        }
      },
      "237": {
        start: {
          line: 729,
          column: 4
        },
        end: {
          line: 732,
          column: 5
        }
      },
      "238": {
        start: {
          line: 730,
          column: 6
        },
        end: {
          line: 730,
          column: 55
        }
      },
      "239": {
        start: {
          line: 731,
          column: 6
        },
        end: {
          line: 731,
          column: 82
        }
      },
      "240": {
        start: {
          line: 735,
          column: 27
        },
        end: {
          line: 737,
          column: 5
        }
      },
      "241": {
        start: {
          line: 736,
          column: 6
        },
        end: {
          line: 736,
          column: 83
        }
      },
      "242": {
        start: {
          line: 738,
          column: 24
        },
        end: {
          line: 738,
          column: 64
        }
      },
      "243": {
        start: {
          line: 738,
          column: 51
        },
        end: {
          line: 738,
          column: 63
        }
      },
      "244": {
        start: {
          line: 740,
          column: 4
        },
        end: {
          line: 743,
          column: 5
        }
      },
      "245": {
        start: {
          line: 741,
          column: 6
        },
        end: {
          line: 741,
          column: 72
        }
      },
      "246": {
        start: {
          line: 742,
          column: 6
        },
        end: {
          line: 742,
          column: 100
        }
      },
      "247": {
        start: {
          line: 746,
          column: 25
        },
        end: {
          line: 748,
          column: 5
        }
      },
      "248": {
        start: {
          line: 747,
          column: 6
        },
        end: {
          line: 747,
          column: 67
        }
      },
      "249": {
        start: {
          line: 750,
          column: 4
        },
        end: {
          line: 753,
          column: 5
        }
      },
      "250": {
        start: {
          line: 751,
          column: 6
        },
        end: {
          line: 751,
          column: 73
        }
      },
      "251": {
        start: {
          line: 752,
          column: 6
        },
        end: {
          line: 752,
          column: 94
        }
      },
      "252": {
        start: {
          line: 755,
          column: 4
        },
        end: {
          line: 761,
          column: 6
        }
      },
      "253": {
        start: {
          line: 768,
          column: 32
        },
        end: {
          line: 768,
          column: 78
        }
      },
      "254": {
        start: {
          line: 768,
          column: 59
        },
        end: {
          line: 768,
          column: 70
        }
      },
      "255": {
        start: {
          line: 769,
          column: 27
        },
        end: {
          line: 771,
          column: 12
        }
      },
      "256": {
        start: {
          line: 770,
          column: 6
        },
        end: {
          line: 770,
          column: 62
        }
      },
      "257": {
        start: {
          line: 773,
          column: 28
        },
        end: {
          line: 773,
          column: 63
        }
      },
      "258": {
        start: {
          line: 774,
          column: 24
        },
        end: {
          line: 774,
          column: 54
        }
      },
      "259": {
        start: {
          line: 775,
          column: 28
        },
        end: {
          line: 775,
          column: 66
        }
      },
      "260": {
        start: {
          line: 777,
          column: 4
        },
        end: {
          line: 782,
          column: 6
        }
      },
      "261": {
        start: {
          line: 787,
          column: 25
        },
        end: {
          line: 787,
          column: 29
        }
      },
      "262": {
        start: {
          line: 793,
          column: 2
        },
        end: {
          line: 796,
          column: 3
        }
      },
      "263": {
        start: {
          line: 794,
          column: 4
        },
        end: {
          line: 794,
          column: 50
        }
      },
      "264": {
        start: {
          line: 795,
          column: 4
        },
        end: {
          line: 795,
          column: 49
        }
      },
      "265": {
        start: {
          line: 797,
          column: 2
        },
        end: {
          line: 797,
          column: 28
        }
      },
      "266": {
        start: {
          line: 804,
          column: 21
        },
        end: {
          line: 804,
          column: 42
        }
      },
      "267": {
        start: {
          line: 805,
          column: 2
        },
        end: {
          line: 805,
          column: 52
        }
      },
      "268": {
        start: {
          line: 812,
          column: 21
        },
        end: {
          line: 812,
          column: 42
        }
      },
      "269": {
        start: {
          line: 813,
          column: 2
        },
        end: {
          line: 813,
          column: 57
        }
      },
      "270": {
        start: {
          line: 820,
          column: 21
        },
        end: {
          line: 820,
          column: 42
        }
      },
      "271": {
        start: {
          line: 821,
          column: 2
        },
        end: {
          line: 821,
          column: 43
        }
      },
      "272": {
        start: {
          line: 828,
          column: 21
        },
        end: {
          line: 828,
          column: 42
        }
      },
      "273": {
        start: {
          line: 829,
          column: 2
        },
        end: {
          line: 829,
          column: 59
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        loc: {
          start: {
            line: 12,
            column: 51
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 3
          }
        },
        loc: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        loc: {
          start: {
            line: 33,
            column: 56
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 52,
            column: 3
          }
        },
        loc: {
          start: {
            line: 52,
            column: 41
          },
          end: {
            line: 67,
            column: 3
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 72,
            column: 3
          }
        },
        loc: {
          start: {
            line: 72,
            column: 51
          },
          end: {
            line: 77,
            column: 3
          }
        },
        line: 72
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        },
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 62
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 82,
            column: 3
          }
        },
        loc: {
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 96,
            column: 3
          }
        },
        line: 82
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 86,
            column: 14
          },
          end: {
            line: 86,
            column: 15
          }
        },
        loc: {
          start: {
            line: 86,
            column: 30
          },
          end: {
            line: 86,
            column: 61
          }
        },
        line: 86
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        },
        loc: {
          start: {
            line: 98,
            column: 28
          },
          end: {
            line: 120,
            column: 3
          }
        },
        line: 98
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 122,
            column: 2
          },
          end: {
            line: 122,
            column: 3
          }
        },
        loc: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 125,
            column: 3
          }
        },
        line: 122
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 144,
            column: 3
          }
        },
        line: 132
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 149,
            column: 2
          },
          end: {
            line: 149,
            column: 3
          }
        },
        loc: {
          start: {
            line: 149,
            column: 33
          },
          end: {
            line: 188,
            column: 3
          }
        },
        line: 149
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 193,
            column: 2
          },
          end: {
            line: 193,
            column: 3
          }
        },
        loc: {
          start: {
            line: 193,
            column: 31
          },
          end: {
            line: 212,
            column: 3
          }
        },
        line: 193
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 198,
            column: 18
          },
          end: {
            line: 198,
            column: 19
          }
        },
        loc: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 198
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 203,
            column: 19
          },
          end: {
            line: 203,
            column: 20
          }
        },
        loc: {
          start: {
            line: 203,
            column: 32
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 203
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 217,
            column: 2
          },
          end: {
            line: 217,
            column: 3
          }
        },
        loc: {
          start: {
            line: 217,
            column: 26
          },
          end: {
            line: 234,
            column: 3
          }
        },
        line: 217
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 225,
            column: 24
          },
          end: {
            line: 225,
            column: 25
          }
        },
        loc: {
          start: {
            line: 225,
            column: 34
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 225
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 228,
            column: 32
          },
          end: {
            line: 228,
            column: 33
          }
        },
        loc: {
          start: {
            line: 228,
            column: 45
          },
          end: {
            line: 231,
            column: 9
          }
        },
        line: 228
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 239,
            column: 2
          },
          end: {
            line: 239,
            column: 3
          }
        },
        loc: {
          start: {
            line: 239,
            column: 48
          },
          end: {
            line: 276,
            column: 3
          }
        },
        line: 239
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 281,
            column: 2
          },
          end: {
            line: 281,
            column: 3
          }
        },
        loc: {
          start: {
            line: 281,
            column: 45
          },
          end: {
            line: 294,
            column: 3
          }
        },
        line: 281
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 282,
            column: 21
          },
          end: {
            line: 282,
            column: 22
          }
        },
        loc: {
          start: {
            line: 282,
            column: 29
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 282
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 299,
            column: 2
          },
          end: {
            line: 299,
            column: 3
          }
        },
        loc: {
          start: {
            line: 299,
            column: 29
          },
          end: {
            line: 307,
            column: 3
          }
        },
        line: 299
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 312,
            column: 2
          },
          end: {
            line: 312,
            column: 3
          }
        },
        loc: {
          start: {
            line: 312,
            column: 39
          },
          end: {
            line: 334,
            column: 3
          }
        },
        line: 312
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 322,
            column: 44
          }
        },
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        line: 323
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 323,
            column: 26
          },
          end: {
            line: 323,
            column: 27
          }
        },
        loc: {
          start: {
            line: 324,
            column: 10
          },
          end: {
            line: 324,
            column: 58
          }
        },
        line: 324
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 339,
            column: 2
          },
          end: {
            line: 339,
            column: 3
          }
        },
        loc: {
          start: {
            line: 339,
            column: 50
          },
          end: {
            line: 417,
            column: 3
          }
        },
        line: 339
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 422,
            column: 2
          },
          end: {
            line: 422,
            column: 3
          }
        },
        loc: {
          start: {
            line: 422,
            column: 32
          },
          end: {
            line: 455,
            column: 3
          }
        },
        line: 422
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 428,
            column: 18
          },
          end: {
            line: 428,
            column: 19
          }
        },
        loc: {
          start: {
            line: 428,
            column: 26
          },
          end: {
            line: 430,
            column: 5
          }
        },
        line: 428
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 439,
            column: 56
          },
          end: {
            line: 439,
            column: 57
          }
        },
        loc: {
          start: {
            line: 439,
            column: 63
          },
          end: {
            line: 439,
            column: 82
          }
        },
        line: 439
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 451,
            column: 27
          },
          end: {
            line: 451,
            column: 28
          }
        },
        loc: {
          start: {
            line: 451,
            column: 35
          },
          end: {
            line: 451,
            column: 57
          }
        },
        line: 451
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 460,
            column: 2
          },
          end: {
            line: 460,
            column: 3
          }
        },
        loc: {
          start: {
            line: 460,
            column: 49
          },
          end: {
            line: 507,
            column: 3
          }
        },
        line: 460
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 466,
            column: 35
          },
          end: {
            line: 466,
            column: 36
          }
        },
        loc: {
          start: {
            line: 466,
            column: 58
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 466
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 501,
            column: 37
          },
          end: {
            line: 501,
            column: 38
          }
        },
        loc: {
          start: {
            line: 501,
            column: 42
          },
          end: {
            line: 501,
            column: 66
          }
        },
        line: 501
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 502,
            column: 34
          },
          end: {
            line: 502,
            column: 35
          }
        },
        loc: {
          start: {
            line: 502,
            column: 39
          },
          end: {
            line: 502,
            column: 60
          }
        },
        line: 502
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 512,
            column: 2
          },
          end: {
            line: 512,
            column: 3
          }
        },
        loc: {
          start: {
            line: 512,
            column: 42
          },
          end: {
            line: 549,
            column: 3
          }
        },
        line: 512
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 554,
            column: 2
          },
          end: {
            line: 554,
            column: 3
          }
        },
        loc: {
          start: {
            line: 554,
            column: 49
          },
          end: {
            line: 562,
            column: 3
          }
        },
        line: 554
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 567,
            column: 2
          },
          end: {
            line: 567,
            column: 3
          }
        },
        loc: {
          start: {
            line: 567,
            column: 48
          },
          end: {
            line: 578,
            column: 3
          }
        },
        line: 567
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 583,
            column: 2
          },
          end: {
            line: 583,
            column: 3
          }
        },
        loc: {
          start: {
            line: 583,
            column: 57
          },
          end: {
            line: 611,
            column: 3
          }
        },
        line: 583
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 616,
            column: 2
          },
          end: {
            line: 616,
            column: 3
          }
        },
        loc: {
          start: {
            line: 616,
            column: 49
          },
          end: {
            line: 635,
            column: 3
          }
        },
        line: 616
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 640,
            column: 2
          },
          end: {
            line: 640,
            column: 3
          }
        },
        loc: {
          start: {
            line: 640,
            column: 42
          },
          end: {
            line: 647,
            column: 3
          }
        },
        line: 640
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 652,
            column: 2
          },
          end: {
            line: 652,
            column: 3
          }
        },
        loc: {
          start: {
            line: 652,
            column: 43
          },
          end: {
            line: 658,
            column: 3
          }
        },
        line: 652
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 663,
            column: 2
          },
          end: {
            line: 663,
            column: 3
          }
        },
        loc: {
          start: {
            line: 663,
            column: 52
          },
          end: {
            line: 687,
            column: 3
          }
        },
        line: 663
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 665,
            column: 48
          },
          end: {
            line: 665,
            column: 49
          }
        },
        loc: {
          start: {
            line: 665,
            column: 53
          },
          end: {
            line: 665,
            column: 69
          }
        },
        line: 665
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 666,
            column: 44
          },
          end: {
            line: 666,
            column: 45
          }
        },
        loc: {
          start: {
            line: 666,
            column: 49
          },
          end: {
            line: 666,
            column: 61
          }
        },
        line: 666
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 692,
            column: 2
          },
          end: {
            line: 692,
            column: 3
          }
        },
        loc: {
          start: {
            line: 692,
            column: 25
          },
          end: {
            line: 718,
            column: 3
          }
        },
        line: 692
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 700,
            column: 50
          },
          end: {
            line: 700,
            column: 51
          }
        },
        loc: {
          start: {
            line: 700,
            column: 55
          },
          end: {
            line: 700,
            column: 77
          }
        },
        line: 700
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 701,
            column: 53
          },
          end: {
            line: 701,
            column: 54
          }
        },
        loc: {
          start: {
            line: 701,
            column: 58
          },
          end: {
            line: 701,
            column: 82
          }
        },
        line: 701
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 702,
            column: 45
          },
          end: {
            line: 702,
            column: 46
          }
        },
        loc: {
          start: {
            line: 702,
            column: 57
          },
          end: {
            line: 702,
            column: 94
          }
        },
        line: 702
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 710,
            column: 31
          },
          end: {
            line: 710,
            column: 32
          }
        },
        loc: {
          start: {
            line: 710,
            column: 37
          },
          end: {
            line: 715,
            column: 7
          }
        },
        line: 710
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 723,
            column: 2
          },
          end: {
            line: 723,
            column: 3
          }
        },
        loc: {
          start: {
            line: 723,
            column: 41
          },
          end: {
            line: 762,
            column: 3
          }
        },
        line: 723
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 728,
            column: 50
          },
          end: {
            line: 728,
            column: 51
          }
        },
        loc: {
          start: {
            line: 728,
            column: 55
          },
          end: {
            line: 728,
            column: 72
          }
        },
        line: 728
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 735,
            column: 49
          },
          end: {
            line: 735,
            column: 50
          }
        },
        loc: {
          start: {
            line: 736,
            column: 6
          },
          end: {
            line: 736,
            column: 83
          }
        },
        line: 736
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 738,
            column: 46
          },
          end: {
            line: 738,
            column: 47
          }
        },
        loc: {
          start: {
            line: 738,
            column: 51
          },
          end: {
            line: 738,
            column: 63
          }
        },
        line: 738
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 746,
            column: 47
          },
          end: {
            line: 746,
            column: 48
          }
        },
        loc: {
          start: {
            line: 747,
            column: 6
          },
          end: {
            line: 747,
            column: 67
          }
        },
        line: 747
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 767,
            column: 2
          },
          end: {
            line: 767,
            column: 3
          }
        },
        loc: {
          start: {
            line: 767,
            column: 38
          },
          end: {
            line: 783,
            column: 3
          }
        },
        line: 767
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 768,
            column: 54
          },
          end: {
            line: 768,
            column: 55
          }
        },
        loc: {
          start: {
            line: 768,
            column: 59
          },
          end: {
            line: 768,
            column: 70
          }
        },
        line: 768
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 769,
            column: 49
          },
          end: {
            line: 769,
            column: 50
          }
        },
        loc: {
          start: {
            line: 770,
            column: 6
          },
          end: {
            line: 770,
            column: 62
          }
        },
        line: 770
      },
      "57": {
        name: "getClaudeFlow",
        decl: {
          start: {
            line: 792,
            column: 22
          },
          end: {
            line: 792,
            column: 35
          }
        },
        loc: {
          start: {
            line: 792,
            column: 50
          },
          end: {
            line: 798,
            column: 1
          }
        },
        line: 792
      },
      "58": {
        name: "createOptimizedWorkflow",
        decl: {
          start: {
            line: 803,
            column: 22
          },
          end: {
            line: 803,
            column: 45
          }
        },
        loc: {
          start: {
            line: 803,
            column: 54
          },
          end: {
            line: 806,
            column: 1
          }
        },
        line: 803
      },
      "59": {
        name: "executeWorkflow",
        decl: {
          start: {
            line: 811,
            column: 22
          },
          end: {
            line: 811,
            column: 37
          }
        },
        loc: {
          start: {
            line: 811,
            column: 64
          },
          end: {
            line: 814,
            column: 1
          }
        },
        line: 811
      },
      "60": {
        name: "getPerformanceReport",
        decl: {
          start: {
            line: 819,
            column: 22
          },
          end: {
            line: 819,
            column: 42
          }
        },
        loc: {
          start: {
            line: 819,
            column: 45
          },
          end: {
            line: 822,
            column: 1
          }
        },
        line: 819
      },
      "61": {
        name: "validateWorkflow",
        decl: {
          start: {
            line: 827,
            column: 22
          },
          end: {
            line: 827,
            column: 38
          }
        },
        loc: {
          start: {
            line: 827,
            column: 49
          },
          end: {
            line: 830,
            column: 1
          }
        },
        line: 827
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 12,
            column: 49
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 32
          },
          end: {
            line: 33,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 44
          },
          end: {
            line: 33,
            column: 54
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 42,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 42,
            column: 57
          }
        }, {
          start: {
            line: 42,
            column: 61
          },
          end: {
            line: 42,
            column: 62
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 37
          }
        }, {
          start: {
            line: 75,
            column: 41
          },
          end: {
            line: 75,
            column: 62
          }
        }],
        line: 75
      },
      "5": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "6": {
        loc: {
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 107,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 107,
            column: 62
          }
        }, {
          start: {
            line: 107,
            column: 66
          },
          end: {
            line: 107,
            column: 67
          }
        }],
        line: 107
      },
      "7": {
        loc: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 113,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 113,
            column: 55
          }
        }, {
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 60
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "10": {
        loc: {
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 124,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 124,
            column: 38
          }
        }, {
          start: {
            line: 124,
            column: 43
          },
          end: {
            line: 124,
            column: 94
          }
        }],
        line: 124
      },
      "11": {
        loc: {
          start: {
            line: 149,
            column: 19
          },
          end: {
            line: 149,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 149,
            column: 29
          },
          end: {
            line: 149,
            column: 31
          }
        }],
        line: 149
      },
      "12": {
        loc: {
          start: {
            line: 153,
            column: 6
          },
          end: {
            line: 153,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 153,
            column: 24
          },
          end: {
            line: 153,
            column: 28
          }
        }],
        line: 153
      },
      "13": {
        loc: {
          start: {
            line: 154,
            column: 6
          },
          end: {
            line: 154,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 154,
            column: 23
          }
        }],
        line: 154
      },
      "14": {
        loc: {
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 155,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 155,
            column: 29
          },
          end: {
            line: 155,
            column: 33
          }
        }],
        line: 155
      },
      "15": {
        loc: {
          start: {
            line: 156,
            column: 6
          },
          end: {
            line: 156,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 156,
            column: 14
          },
          end: {
            line: 156,
            column: 19
          }
        }],
        line: 156
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "18": {
        loc: {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 232,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 232,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "19": {
        loc: {
          start: {
            line: 244,
            column: 6
          },
          end: {
            line: 244,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 244,
            column: 25
          },
          end: {
            line: 244,
            column: 37
          }
        }],
        line: 244
      },
      "20": {
        loc: {
          start: {
            line: 245,
            column: 6
          },
          end: {
            line: 245,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 245,
            column: 19
          },
          end: {
            line: 245,
            column: 23
          }
        }],
        line: 245
      },
      "21": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "22": {
        loc: {
          start: {
            line: 257,
            column: 10
          },
          end: {
            line: 257,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 10
          },
          end: {
            line: 257,
            column: 12
          }
        }, {
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 257,
            column: 40
          }
        }],
        line: 257
      },
      "23": {
        loc: {
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 33
          }
        }, {
          start: {
            line: 290,
            column: 37
          },
          end: {
            line: 290,
            column: 62
          }
        }],
        line: 290
      },
      "24": {
        loc: {
          start: {
            line: 291,
            column: 26
          },
          end: {
            line: 291,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 43
          },
          end: {
            line: 291,
            column: 46
          }
        }, {
          start: {
            line: 291,
            column: 49
          },
          end: {
            line: 291,
            column: 52
          }
        }],
        line: 291
      },
      "25": {
        loc: {
          start: {
            line: 305,
            column: 11
          },
          end: {
            line: 306,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 11
          },
          end: {
            line: 305,
            column: 50
          }
        }, {
          start: {
            line: 306,
            column: 11
          },
          end: {
            line: 306,
            column: 39
          }
        }],
        line: 305
      },
      "26": {
        loc: {
          start: {
            line: 317,
            column: 6
          },
          end: {
            line: 317,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 6
          },
          end: {
            line: 317,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "27": {
        loc: {
          start: {
            line: 319,
            column: 25
          },
          end: {
            line: 319,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 25
          },
          end: {
            line: 319,
            column: 36
          }
        }, {
          start: {
            line: 319,
            column: 40
          },
          end: {
            line: 319,
            column: 42
          }
        }],
        line: 319
      },
      "28": {
        loc: {
          start: {
            line: 320,
            column: 27
          },
          end: {
            line: 320,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 27
          },
          end: {
            line: 320,
            column: 44
          }
        }, {
          start: {
            line: 320,
            column: 48
          },
          end: {
            line: 320,
            column: 50
          }
        }],
        line: 320
      },
      "29": {
        loc: {
          start: {
            line: 324,
            column: 10
          },
          end: {
            line: 324,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 10
          },
          end: {
            line: 324,
            column: 32
          }
        }, {
          start: {
            line: 324,
            column: 36
          },
          end: {
            line: 324,
            column: 58
          }
        }],
        line: 324
      },
      "30": {
        loc: {
          start: {
            line: 328,
            column: 6
          },
          end: {
            line: 330,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 6
          },
          end: {
            line: 330,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "31": {
        loc: {
          start: {
            line: 339,
            column: 36
          },
          end: {
            line: 339,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 339,
            column: 46
          },
          end: {
            line: 339,
            column: 48
          }
        }],
        line: 339
      },
      "32": {
        loc: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "33": {
        loc: {
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: 377,
            column: 15
          },
          end: {
            line: 381,
            column: 9
          }
        }],
        line: 373
      },
      "34": {
        loc: {
          start: {
            line: 429,
            column: 35
          },
          end: {
            line: 429,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 429,
            column: 35
          },
          end: {
            line: 429,
            column: 52
          }
        }, {
          start: {
            line: 429,
            column: 56
          },
          end: {
            line: 429,
            column: 58
          }
        }],
        line: 429
      },
      "35": {
        loc: {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 437,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 437,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "36": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "37": {
        loc: {
          start: {
            line: 446,
            column: 6
          },
          end: {
            line: 448,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 6
          },
          end: {
            line: 448,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "38": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "39": {
        loc: {
          start: {
            line: 471,
            column: 18
          },
          end: {
            line: 471,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 18
          },
          end: {
            line: 471,
            column: 32
          }
        }, {
          start: {
            line: 471,
            column: 36
          },
          end: {
            line: 471,
            column: 49
          }
        }],
        line: 471
      },
      "40": {
        loc: {
          start: {
            line: 472,
            column: 21
          },
          end: {
            line: 472,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 21
          },
          end: {
            line: 472,
            column: 30
          }
        }, {
          start: {
            line: 472,
            column: 34
          },
          end: {
            line: 472,
            column: 41
          }
        }],
        line: 472
      },
      "41": {
        loc: {
          start: {
            line: 478,
            column: 70
          },
          end: {
            line: 478,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 478,
            column: 70
          },
          end: {
            line: 478,
            column: 79
          }
        }, {
          start: {
            line: 478,
            column: 83
          },
          end: {
            line: 478,
            column: 90
          }
        }],
        line: 478
      },
      "42": {
        loc: {
          start: {
            line: 484,
            column: 25
          },
          end: {
            line: 484,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 25
          },
          end: {
            line: 484,
            column: 45
          }
        }, {
          start: {
            line: 484,
            column: 49
          },
          end: {
            line: 484,
            column: 50
          }
        }],
        line: 484
      },
      "43": {
        loc: {
          start: {
            line: 487,
            column: 69
          },
          end: {
            line: 487,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 69
          },
          end: {
            line: 487,
            column: 78
          }
        }, {
          start: {
            line: 487,
            column: 82
          },
          end: {
            line: 487,
            column: 89
          }
        }],
        line: 487
      },
      "44": {
        loc: {
          start: {
            line: 518,
            column: 6
          },
          end: {
            line: 533,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 521,
            column: 16
          }
        }, {
          start: {
            line: 522,
            column: 8
          },
          end: {
            line: 524,
            column: 16
          }
        }, {
          start: {
            line: 525,
            column: 8
          },
          end: {
            line: 527,
            column: 16
          }
        }, {
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 530,
            column: 16
          }
        }, {
          start: {
            line: 531,
            column: 8
          },
          end: {
            line: 532,
            column: 64
          }
        }],
        line: 518
      },
      "45": {
        loc: {
          start: {
            line: 540,
            column: 18
          },
          end: {
            line: 540,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 540,
            column: 18
          },
          end: {
            line: 540,
            column: 33
          }
        }, {
          start: {
            line: 540,
            column: 37
          },
          end: {
            line: 540,
            column: 72
          }
        }],
        line: 540
      },
      "46": {
        loc: {
          start: {
            line: 545,
            column: 34
          },
          end: {
            line: 545,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 545,
            column: 34
          },
          end: {
            line: 545,
            column: 43
          }
        }, {
          start: {
            line: 545,
            column: 47
          },
          end: {
            line: 545,
            column: 54
          }
        }],
        line: 545
      },
      "47": {
        loc: {
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 561,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 561,
            column: 5
          }
        }, {
          start: {
            line: 559,
            column: 11
          },
          end: {
            line: 561,
            column: 5
          }
        }],
        line: 557
      },
      "48": {
        loc: {
          start: {
            line: 584,
            column: 4
          },
          end: {
            line: 586,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 584,
            column: 4
          },
          end: {
            line: 586,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 584
      },
      "49": {
        loc: {
          start: {
            line: 588,
            column: 36
          },
          end: {
            line: 588,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 588,
            column: 49
          },
          end: {
            line: 588,
            column: 53
          }
        }],
        line: 588
      },
      "50": {
        loc: {
          start: {
            line: 594,
            column: 34
          },
          end: {
            line: 594,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 594,
            column: 47
          },
          end: {
            line: 594,
            column: 53
          }
        }, {
          start: {
            line: 594,
            column: 56
          },
          end: {
            line: 594,
            column: 64
          }
        }],
        line: 594
      },
      "51": {
        loc: {
          start: {
            line: 605,
            column: 19
          },
          end: {
            line: 605,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 605,
            column: 19
          },
          end: {
            line: 605,
            column: 29
          }
        }, {
          start: {
            line: 605,
            column: 33
          },
          end: {
            line: 605,
            column: 68
          }
        }],
        line: 605
      },
      "52": {
        loc: {
          start: {
            line: 608,
            column: 21
          },
          end: {
            line: 608,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 608,
            column: 34
          },
          end: {
            line: 608,
            column: 37
          }
        }, {
          start: {
            line: 608,
            column: 40
          },
          end: {
            line: 608,
            column: 43
          }
        }],
        line: 608
      },
      "53": {
        loc: {
          start: {
            line: 617,
            column: 29
          },
          end: {
            line: 617,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 617,
            column: 42
          },
          end: {
            line: 617,
            column: 46
          }
        }],
        line: 617
      },
      "54": {
        loc: {
          start: {
            line: 625,
            column: 17
          },
          end: {
            line: 625,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 625,
            column: 17
          },
          end: {
            line: 625,
            column: 29
          }
        }, {
          start: {
            line: 625,
            column: 33
          },
          end: {
            line: 625,
            column: 34
          }
        }],
        line: 625
      },
      "55": {
        loc: {
          start: {
            line: 626,
            column: 19
          },
          end: {
            line: 626,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 626,
            column: 19
          },
          end: {
            line: 626,
            column: 29
          }
        }, {
          start: {
            line: 626,
            column: 33
          },
          end: {
            line: 626,
            column: 68
          }
        }],
        line: 626
      },
      "56": {
        loc: {
          start: {
            line: 627,
            column: 21
          },
          end: {
            line: 627,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 627,
            column: 21
          },
          end: {
            line: 627,
            column: 25
          }
        }, {
          start: {
            line: 627,
            column: 29
          },
          end: {
            line: 627,
            column: 31
          }
        }],
        line: 627
      },
      "57": {
        loc: {
          start: {
            line: 630,
            column: 21
          },
          end: {
            line: 630,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 630,
            column: 34
          },
          end: {
            line: 630,
            column: 37
          }
        }, {
          start: {
            line: 630,
            column: 40
          },
          end: {
            line: 630,
            column: 43
          }
        }],
        line: 630
      },
      "58": {
        loc: {
          start: {
            line: 654,
            column: 6
          },
          end: {
            line: 656,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 654,
            column: 6
          },
          end: {
            line: 656,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 654
      },
      "59": {
        loc: {
          start: {
            line: 654,
            column: 10
          },
          end: {
            line: 654,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 654,
            column: 10
          },
          end: {
            line: 654,
            column: 23
          }
        }, {
          start: {
            line: 654,
            column: 27
          },
          end: {
            line: 654,
            column: 40
          }
        }],
        line: 654
      },
      "60": {
        loc: {
          start: {
            line: 702,
            column: 64
          },
          end: {
            line: 702,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 702,
            column: 64
          },
          end: {
            line: 702,
            column: 88
          }
        }, {
          start: {
            line: 702,
            column: 92
          },
          end: {
            line: 702,
            column: 93
          }
        }],
        line: 702
      },
      "61": {
        loc: {
          start: {
            line: 706,
            column: 23
          },
          end: {
            line: 706,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 706,
            column: 23
          },
          end: {
            line: 706,
            column: 60
          }
        }, {
          start: {
            line: 706,
            column: 64
          },
          end: {
            line: 706,
            column: 69
          }
        }],
        line: 706
      },
      "62": {
        loc: {
          start: {
            line: 707,
            column: 24
          },
          end: {
            line: 707,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 707,
            column: 24
          },
          end: {
            line: 707,
            column: 64
          }
        }, {
          start: {
            line: 707,
            column: 68
          },
          end: {
            line: 707,
            column: 73
          }
        }],
        line: 707
      },
      "63": {
        loc: {
          start: {
            line: 729,
            column: 4
          },
          end: {
            line: 732,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 729,
            column: 4
          },
          end: {
            line: 732,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 729
      },
      "64": {
        loc: {
          start: {
            line: 740,
            column: 4
          },
          end: {
            line: 743,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 740,
            column: 4
          },
          end: {
            line: 743,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 740
      },
      "65": {
        loc: {
          start: {
            line: 740,
            column: 8
          },
          end: {
            line: 740,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 740,
            column: 8
          },
          end: {
            line: 740,
            column: 33
          }
        }, {
          start: {
            line: 740,
            column: 37
          },
          end: {
            line: 740,
            column: 79
          }
        }],
        line: 740
      },
      "66": {
        loc: {
          start: {
            line: 750,
            column: 4
          },
          end: {
            line: 753,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 750,
            column: 4
          },
          end: {
            line: 753,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 750
      },
      "67": {
        loc: {
          start: {
            line: 773,
            column: 28
          },
          end: {
            line: 773,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 773,
            column: 54
          },
          end: {
            line: 773,
            column: 57
          }
        }, {
          start: {
            line: 773,
            column: 60
          },
          end: {
            line: 773,
            column: 63
          }
        }],
        line: 773
      },
      "68": {
        loc: {
          start: {
            line: 774,
            column: 24
          },
          end: {
            line: 774,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 774,
            column: 45
          },
          end: {
            line: 774,
            column: 48
          }
        }, {
          start: {
            line: 774,
            column: 51
          },
          end: {
            line: 774,
            column: 54
          }
        }],
        line: 774
      },
      "69": {
        loc: {
          start: {
            line: 775,
            column: 28
          },
          end: {
            line: 775,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 775,
            column: 57
          },
          end: {
            line: 775,
            column: 60
          }
        }, {
          start: {
            line: 775,
            column: 63
          },
          end: {
            line: 775,
            column: 66
          }
        }],
        line: 775
      },
      "70": {
        loc: {
          start: {
            line: 792,
            column: 36
          },
          end: {
            line: 792,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 792,
            column: 46
          },
          end: {
            line: 792,
            column: 48
          }
        }],
        line: 792
      },
      "71": {
        loc: {
          start: {
            line: 793,
            column: 2
          },
          end: {
            line: 796,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 793,
            column: 2
          },
          end: {
            line: 796,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 793
      },
      "72": {
        loc: {
          start: {
            line: 811,
            column: 50
          },
          end: {
            line: 811,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 811,
            column: 60
          },
          end: {
            line: 811,
            column: 62
          }
        }],
        line: 811
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0, 0, 0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0],
      "71": [0, 0],
      "72": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "efdf60f87d15c5e5370c7a6131ae0138a8f4a72c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1vh7791eop = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1vh7791eop();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Claude Code Flow Enhanced Integration
 * 
 * Provides mandatory BatchTool enforcement, parallel execution patterns,
 * and enhanced MCP tool coordination for Claude Code workflows.
 */

import { RuvSwarm } from './index-enhanced.js';
import { EnhancedMCPTools } from './mcp-tools-enhanced.js';
class ClaudeFlowError extends Error {
  constructor(message, code =
  /* istanbul ignore next */
  (cov_1vh7791eop().b[0][0]++, 'CLAUDE_FLOW_ERROR')) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[0]++;
    cov_1vh7791eop().s[0]++;
    super(message);
    /* istanbul ignore next */
    cov_1vh7791eop().s[1]++;
    this.name = 'ClaudeFlowError';
    /* istanbul ignore next */
    cov_1vh7791eop().s[2]++;
    this.code = code;
  }
}

/**
 * BatchTool enforcement manager - ensures mandatory parallel execution
 */
class BatchToolEnforcer {
  constructor() {
    /* istanbul ignore next */
    cov_1vh7791eop().f[1]++;
    cov_1vh7791eop().s[3]++;
    this.operationCounts = new Map();
    /* istanbul ignore next */
    cov_1vh7791eop().s[4]++;
    this.sessionOperations = [];
    /* istanbul ignore next */
    cov_1vh7791eop().s[5]++;
    this.parallelThreshold = 3; // Minimum operations to require batching
    /* istanbul ignore next */
    cov_1vh7791eop().s[6]++;
    this.violationWarnings = new Map();
  }

  /**
   * Track operation for batching analysis
   */
  trackOperation(operationType, timestamp =
  /* istanbul ignore next */
  (cov_1vh7791eop().b[1][0]++, Date.now())) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[2]++;
    const operation =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[7]++, {
      type: operationType,
      timestamp,
      sessionId: this.getCurrentSessionId()
    });
    /* istanbul ignore next */
    cov_1vh7791eop().s[8]++;
    this.sessionOperations.push(operation);
    const count =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[9]++,
    /* istanbul ignore next */
    (cov_1vh7791eop().b[2][0]++, this.operationCounts.get(operationType)) ||
    /* istanbul ignore next */
    (cov_1vh7791eop().b[2][1]++, 0));
    /* istanbul ignore next */
    cov_1vh7791eop().s[10]++;
    this.operationCounts.set(operationType, count + 1);

    // Check for batching violations
    /* istanbul ignore next */
    cov_1vh7791eop().s[11]++;
    this.checkBatchingViolations(operationType);
  }

  /**
   * Validate if operations should be batched
   */
  checkBatchingViolations(operationType) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[3]++;
    const recentOps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[12]++, this.getRecentOperations(operationType, 5000)); // 5 second window
    /* istanbul ignore next */
    cov_1vh7791eop().s[13]++;
    if (recentOps.length >= this.parallelThreshold) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[3][0]++;
      const warning =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[14]++, `🚨 BATCHING VIOLATION: ${recentOps.length} ${operationType} operations should be batched in ONE message!`);
      /* istanbul ignore next */
      cov_1vh7791eop().s[15]++;
      console.warn(warning);
      /* istanbul ignore next */
      cov_1vh7791eop().s[16]++;
      console.warn('✅ CORRECT: Use BatchTool with multiple operations in single message');
      /* istanbul ignore next */
      cov_1vh7791eop().s[17]++;
      console.warn('❌ WRONG: Multiple sequential messages for related operations');
      /* istanbul ignore next */
      cov_1vh7791eop().s[18]++;
      this.violationWarnings.set(operationType, {
        count: recentOps.length,
        timestamp: Date.now(),
        warning
      });
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[3][1]++;
    }
  }

  /**
   * Get recent operations of specific type
   */
  getRecentOperations(operationType, timeWindowMs) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[4]++;
    const cutoff =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[19]++, Date.now() - timeWindowMs);
    /* istanbul ignore next */
    cov_1vh7791eop().s[20]++;
    return this.sessionOperations.filter(op => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[5]++;
      cov_1vh7791eop().s[21]++;
      return /* istanbul ignore next */(cov_1vh7791eop().b[4][0]++, op.type === operationType) &&
      /* istanbul ignore next */
      (cov_1vh7791eop().b[4][1]++, op.timestamp > cutoff);
    });
  }

  /**
   * Generate batching compliance report
   */
  getBatchingReport() {
    /* istanbul ignore next */
    cov_1vh7791eop().f[6]++;
    const totalOps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[22]++, this.sessionOperations.length);
    const violations =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[23]++, Array.from(this.violationWarnings.values()));
    const batchableOps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[24]++, Array.from(this.operationCounts.entries()).filter(([_, count]) => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[7]++;
      cov_1vh7791eop().s[25]++;
      return count >= this.parallelThreshold;
    }));
    /* istanbul ignore next */
    cov_1vh7791eop().s[26]++;
    return {
      totalOperations: totalOps,
      violations: violations.length,
      violationDetails: violations,
      batchableOperations: batchableOps,
      complianceScore: Math.max(0, 100 - violations.length * 20),
      recommendations: this.generateRecommendations()
    };
  }
  generateRecommendations() {
    /* istanbul ignore next */
    cov_1vh7791eop().f[8]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[27]++, []);
    /* istanbul ignore next */
    cov_1vh7791eop().s[28]++;
    if (this.violationWarnings.size > 0) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[5][0]++;
      cov_1vh7791eop().s[29]++;
      recommendations.push('🔧 CRITICAL: Use BatchTool for all parallel operations');
      /* istanbul ignore next */
      cov_1vh7791eop().s[30]++;
      recommendations.push('📦 Combine multiple tool calls in ONE message');
      /* istanbul ignore next */
      cov_1vh7791eop().s[31]++;
      recommendations.push('⚡ Enable parallel execution for 2.8-4.4x speed improvement');
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[5][1]++;
    }
    const fileOps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[32]++,
    /* istanbul ignore next */
    (cov_1vh7791eop().b[6][0]++, this.operationCounts.get('file_operation')) ||
    /* istanbul ignore next */
    (cov_1vh7791eop().b[6][1]++, 0));
    /* istanbul ignore next */
    cov_1vh7791eop().s[33]++;
    if (fileOps >= 3) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[7][0]++;
      cov_1vh7791eop().s[34]++;
      recommendations.push('📁 File Operations: Use MultiEdit for multiple edits to same file');
      /* istanbul ignore next */
      cov_1vh7791eop().s[35]++;
      recommendations.push('📁 File Operations: Batch Read/Write operations in single message');
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[7][1]++;
    }
    const mcpOps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[36]++,
    /* istanbul ignore next */
    (cov_1vh7791eop().b[8][0]++, this.operationCounts.get('mcp_tool')) ||
    /* istanbul ignore next */
    (cov_1vh7791eop().b[8][1]++, 0));
    /* istanbul ignore next */
    cov_1vh7791eop().s[37]++;
    if (mcpOps >= 3) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[9][0]++;
      cov_1vh7791eop().s[38]++;
      recommendations.push('🤖 MCP Tools: Combine swarm operations in parallel');
      /* istanbul ignore next */
      cov_1vh7791eop().s[39]++;
      recommendations.push('🤖 MCP Tools: Use task orchestration for complex workflows');
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[9][1]++;
    }
    cov_1vh7791eop().s[40]++;
    return recommendations;
  }
  getCurrentSessionId() {
    /* istanbul ignore next */
    cov_1vh7791eop().f[9]++;
    cov_1vh7791eop().s[41]++;
    // Simple session ID based on startup time
    return /* istanbul ignore next */(cov_1vh7791eop().b[10][0]++, global._claudeFlowSessionId) ||
    /* istanbul ignore next */
    (cov_1vh7791eop().b[10][1]++, global._claudeFlowSessionId = Date.now().toString());
  }
}

/**
 * Enhanced Claude Code Flow manager with mandatory BatchTool enforcement
 */
class ClaudeFlowEnhanced {
  constructor() {
    /* istanbul ignore next */
    cov_1vh7791eop().f[10]++;
    cov_1vh7791eop().s[42]++;
    this.ruvSwarm = null;
    /* istanbul ignore next */
    cov_1vh7791eop().s[43]++;
    this.mcpTools = null;
    /* istanbul ignore next */
    cov_1vh7791eop().s[44]++;
    this.batchEnforcer = new BatchToolEnforcer();
    /* istanbul ignore next */
    cov_1vh7791eop().s[45]++;
    this.workflows = new Map();
    /* istanbul ignore next */
    cov_1vh7791eop().s[46]++;
    this.activeCoordinations = new Map();
    /* istanbul ignore next */
    cov_1vh7791eop().s[47]++;
    this.performanceMetrics = {
      parallelizationRate: 0,
      avgBatchSize: 0,
      speedupFactor: 1.0,
      tokenEfficiency: 0
    };
  }

  /**
   * Initialize Claude Code Flow with ruv-swarm integration
   */
  initialize() {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* (options =
    /* istanbul ignore next */
    (cov_1vh7791eop().b[11][0]++, {})) {
      cov_1vh7791eop().f[11]++;
      cov_1vh7791eop().s[48]++;
      console.log('🚀 Initializing Claude Code Flow Enhanced...');
      const {
        enforceBatching =
        /* istanbul ignore next */
        (cov_1vh7791eop().b[12][0]++, true),
        enableSIMD =
        /* istanbul ignore next */
        (cov_1vh7791eop().b[13][0]++, true),
        enableNeuralNetworks =
        /* istanbul ignore next */
        (cov_1vh7791eop().b[14][0]++, true),
        debug =
        /* istanbul ignore next */
        (cov_1vh7791eop().b[15][0]++, false)
      } =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[49]++, options);
      cov_1vh7791eop().s[50]++;
      try {
        /* istanbul ignore next */
        cov_1vh7791eop().s[51]++;
        // Initialize ruv-swarm with SIMD optimization
        _this.ruvSwarm =
        /* istanbul ignore next */
        yield RuvSwarm.initialize({
          loadingStrategy: 'progressive',
          useSIMD: enableSIMD,
          enableNeuralNetworks,
          debug
        });

        // Initialize enhanced MCP tools
        /* istanbul ignore next */
        cov_1vh7791eop().s[52]++;
        _this.mcpTools = new EnhancedMCPTools();
        /* istanbul ignore next */
        cov_1vh7791eop().s[53]++;
        /* istanbul ignore next */
        yield _this.mcpTools.initialize(_this.ruvSwarm);
        /* istanbul ignore next */
        cov_1vh7791eop().s[54]++;
        if (enforceBatching) {
          /* istanbul ignore next */
          cov_1vh7791eop().b[16][0]++;
          cov_1vh7791eop().s[55]++;
          _this.enableBatchToolEnforcement();
        } else
        /* istanbul ignore next */
        {
          cov_1vh7791eop().b[16][1]++;
        }
        cov_1vh7791eop().s[56]++;
        console.log('✅ Claude Code Flow Enhanced initialized');
        /* istanbul ignore next */
        cov_1vh7791eop().s[57]++;
        console.log('📊 Features:', {
          simdSupported: _this.ruvSwarm.features.simd_support,
          neuralNetworks: _this.ruvSwarm.features.neural_networks,
          batchingEnforced: enforceBatching
        });
        /* istanbul ignore next */
        cov_1vh7791eop().s[58]++;
        return _this;
      } catch (error) {
        /* istanbul ignore next */
        cov_1vh7791eop().s[59]++;
        console.error('❌ Failed to initialize Claude Code Flow:', error);
        /* istanbul ignore next */
        cov_1vh7791eop().s[60]++;
        throw new ClaudeFlowError(`Initialization failed: ${error.message}`, 'INIT_ERROR');
      }
    }).apply(this, arguments);
  }

  /**
   * Enable mandatory BatchTool enforcement
   */
  enableBatchToolEnforcement() {
    /* istanbul ignore next */
    cov_1vh7791eop().f[12]++;
    // Monkey patch console methods to track operations
    const originalLog =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[61]++, console.log);
    const originalWarn =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[62]++, console.warn);
    /* istanbul ignore next */
    cov_1vh7791eop().s[63]++;
    console.log = (...args) => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[13]++;
      cov_1vh7791eop().s[64]++;
      this.batchEnforcer.trackOperation('console_log');
      /* istanbul ignore next */
      cov_1vh7791eop().s[65]++;
      return originalLog.apply(console, args);
    };
    /* istanbul ignore next */
    cov_1vh7791eop().s[66]++;
    console.warn = (...args) => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[14]++;
      cov_1vh7791eop().s[67]++;
      this.batchEnforcer.trackOperation('console_warn');
      /* istanbul ignore next */
      cov_1vh7791eop().s[68]++;
      return originalWarn.apply(console, args);
    };

    // Track MCP tool usage
    /* istanbul ignore next */
    cov_1vh7791eop().s[69]++;
    this.interceptMCPToolCalls();
    /* istanbul ignore next */
    cov_1vh7791eop().s[70]++;
    console.log('🛡️ BatchTool enforcement enabled - parallel execution mandatory');
  }

  /**
   * Intercept MCP tool calls to enforce batching
   */
  interceptMCPToolCalls() {
    /* istanbul ignore next */
    cov_1vh7791eop().f[15]++;
    cov_1vh7791eop().s[71]++;
    if (!this.mcpTools) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[17][0]++;
      cov_1vh7791eop().s[72]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[17][1]++;
    }
    const toolMethods =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[73]++, ['swarm_init', 'agent_spawn', 'task_orchestrate', 'memory_usage', 'neural_status', 'benchmark_run']);
    /* istanbul ignore next */
    cov_1vh7791eop().s[74]++;
    toolMethods.forEach(method => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[16]++;
      cov_1vh7791eop().s[75]++;
      if (typeof this.mcpTools[method] === 'function') {
        /* istanbul ignore next */
        cov_1vh7791eop().b[18][0]++;
        const original =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[76]++, this.mcpTools[method].bind(this.mcpTools));
        /* istanbul ignore next */
        cov_1vh7791eop().s[77]++;
        this.mcpTools[method] = (...args) => {
          /* istanbul ignore next */
          cov_1vh7791eop().f[17]++;
          cov_1vh7791eop().s[78]++;
          this.batchEnforcer.trackOperation('mcp_tool');
          /* istanbul ignore next */
          cov_1vh7791eop().s[79]++;
          return original(...args);
        };
      } else
      /* istanbul ignore next */
      {
        cov_1vh7791eop().b[18][1]++;
      }
    });
  }

  /**
   * Create optimized workflow with mandatory parallel execution
   */
  createOptimizedWorkflow(workflowConfig) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_1vh7791eop().f[18]++;
      const {
        id,
        name,
        steps,
        parallelStrategy =
        /* istanbul ignore next */
        (cov_1vh7791eop().b[19][0]++, 'aggressive'),
        enableSIMD =
        /* istanbul ignore next */
        (cov_1vh7791eop().b[20][0]++, true)
      } =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[80]++, workflowConfig);

      // Validate workflow for parallel optimization
      const parallelSteps =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[81]++, _this2.analyzeParallelizationOpportunities(steps));
      cov_1vh7791eop().s[82]++;
      if (parallelSteps.length < steps.length * 0.7) {
        /* istanbul ignore next */
        cov_1vh7791eop().b[21][0]++;
        cov_1vh7791eop().s[83]++;
        console.warn('⚠️ Workflow has low parallelization potential (<70%)');
        /* istanbul ignore next */
        cov_1vh7791eop().s[84]++;
        console.warn('💡 Consider restructuring for better parallel execution');
      } else
      /* istanbul ignore next */
      {
        cov_1vh7791eop().b[21][1]++;
      }
      const workflow =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[85]++, {
        id:
        /* istanbul ignore next */
        (cov_1vh7791eop().b[22][0]++, id) ||
        /* istanbul ignore next */
        (cov_1vh7791eop().b[22][1]++, `workflow_${Date.now()}`),
        name,
        steps: parallelSteps,
        strategy: parallelStrategy,
        simdEnabled: enableSIMD,
        created: new Date().toISOString(),
        metrics: {
          totalSteps: steps.length,
          parallelSteps: parallelSteps.length,
          parallelizationRate: parallelSteps.length / steps.length
        }
      });
      cov_1vh7791eop().s[86]++;
      _this2.workflows.set(workflow.id, workflow);
      cov_1vh7791eop().s[87]++;
      console.log(`📋 Created optimized workflow: ${name}`);
      cov_1vh7791eop().s[88]++;
      console.log(`⚡ Parallelization rate: ${(workflow.metrics.parallelizationRate * 100).toFixed(1)}%`);
      cov_1vh7791eop().s[89]++;
      return workflow;
    })();
  }

  /**
   * Analyze steps for parallelization opportunities
   */
  analyzeParallelizationOpportunities(steps) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[19]++;
    cov_1vh7791eop().s[90]++;
    return steps.map(step => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[20]++;
      const parallelizable =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[91]++, this.isStepParallelizable(step));
      const dependencies =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[92]++, this.findStepDependencies(step, steps));
      /* istanbul ignore next */
      cov_1vh7791eop().s[93]++;
      return /* istanbul ignore next */_objectSpread(_objectSpread({}, step), {}, {
        parallelizable,
        dependencies,
        batchable:
        /* istanbul ignore next */
        (cov_1vh7791eop().b[23][0]++, parallelizable) &&
        /* istanbul ignore next */
        (cov_1vh7791eop().b[23][1]++, dependencies.length === 0),
        estimatedSpeedup: parallelizable ?
        /* istanbul ignore next */
        (cov_1vh7791eop().b[24][0]++, 2.8) :
        /* istanbul ignore next */
        (cov_1vh7791eop().b[24][1]++, 1.0)
      });
    });
  }

  /**
   * Check if step can be parallelized
   */
  isStepParallelizable(step) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[21]++;
    const parallelizableTypes =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[94]++, ['file_read', 'file_write', 'mcp_tool_call', 'neural_inference', 'data_processing', 'api_call']);
    /* istanbul ignore next */
    cov_1vh7791eop().s[95]++;
    return /* istanbul ignore next */(cov_1vh7791eop().b[25][0]++, parallelizableTypes.includes(step.type)) ||
    /* istanbul ignore next */
    (cov_1vh7791eop().b[25][1]++, step.parallelizable === true);
  }

  /**
   * Find dependencies between steps
   */
  findStepDependencies(step, allSteps) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[22]++;
    const dependencies =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[96]++, []);

    // Simple dependency analysis based on outputs/inputs
    /* istanbul ignore next */
    cov_1vh7791eop().s[97]++;
    for (const otherStep of allSteps) {
      /* istanbul ignore next */
      cov_1vh7791eop().s[98]++;
      if (otherStep.id === step.id) {
        /* istanbul ignore next */
        cov_1vh7791eop().b[26][0]++;
        cov_1vh7791eop().s[99]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1vh7791eop().b[26][1]++;
      }
      const stepInputs =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[100]++,
      /* istanbul ignore next */
      (cov_1vh7791eop().b[27][0]++, step.inputs) ||
      /* istanbul ignore next */
      (cov_1vh7791eop().b[27][1]++, []));
      const otherOutputs =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[101]++,
      /* istanbul ignore next */
      (cov_1vh7791eop().b[28][0]++, otherStep.outputs) ||
      /* istanbul ignore next */
      (cov_1vh7791eop().b[28][1]++, []));
      const hasDepedency =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[102]++, stepInputs.some(input => {
        /* istanbul ignore next */
        cov_1vh7791eop().f[23]++;
        cov_1vh7791eop().s[103]++;
        return otherOutputs.some(output => {
          /* istanbul ignore next */
          cov_1vh7791eop().f[24]++;
          cov_1vh7791eop().s[104]++;
          return /* istanbul ignore next */(cov_1vh7791eop().b[29][0]++, input.includes(output)) ||
          /* istanbul ignore next */
          (cov_1vh7791eop().b[29][1]++, output.includes(input));
        });
      }));
      /* istanbul ignore next */
      cov_1vh7791eop().s[105]++;
      if (hasDepedency) {
        /* istanbul ignore next */
        cov_1vh7791eop().b[30][0]++;
        cov_1vh7791eop().s[106]++;
        dependencies.push(otherStep.id);
      } else
      /* istanbul ignore next */
      {
        cov_1vh7791eop().b[30][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1vh7791eop().s[107]++;
    return dependencies;
  }

  /**
   * Execute workflow with mandatory parallel coordination
   */
  executeWorkflow(
  /* istanbul ignore next */
  _x) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* (workflowId, context =
    /* istanbul ignore next */
    (cov_1vh7791eop().b[31][0]++, {})) {
      cov_1vh7791eop().f[25]++;
      const workflow =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[108]++, _this3.workflows.get(workflowId));
      cov_1vh7791eop().s[109]++;
      if (!workflow) {
        /* istanbul ignore next */
        cov_1vh7791eop().b[32][0]++;
        cov_1vh7791eop().s[110]++;
        throw new ClaudeFlowError(`Workflow not found: ${workflowId}`, 'WORKFLOW_NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_1vh7791eop().b[32][1]++;
      }
      cov_1vh7791eop().s[111]++;
      console.log(`🚀 Executing workflow: ${workflow.name}`);

      // Create swarm for coordination
      const swarm =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[112]++, yield _this3.mcpTools.swarm_init({
        topology: 'hierarchical',
        maxAgents: Math.min(8, workflow.steps.length),
        strategy: 'parallel'
      }));
      const executionId =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[113]++, `exec_${workflowId}_${Date.now()}`);
      cov_1vh7791eop().s[114]++;
      _this3.activeCoordinations.set(executionId, {
        workflowId,
        swarmId: swarm.id,
        startTime: Date.now(),
        status: 'running'
      });
      cov_1vh7791eop().s[115]++;
      try {
        // Group steps into parallel batches
        const batches =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[116]++, _this3.createExecutionBatches(workflow.steps));
        /* istanbul ignore next */
        cov_1vh7791eop().s[117]++;
        console.log(`📦 Created ${batches.length} execution batches`);
        const results =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[118]++, []);
        /* istanbul ignore next */
        cov_1vh7791eop().s[119]++;
        for (const [batchIndex, batch] of batches.entries()) {
          /* istanbul ignore next */
          cov_1vh7791eop().s[120]++;
          console.log(`⚡ Executing batch ${batchIndex + 1}/${batches.length} (${batch.length} steps)`);
          /* istanbul ignore next */
          cov_1vh7791eop().s[121]++;
          if (batch.length === 1) {
            /* istanbul ignore next */
            cov_1vh7791eop().b[33][0]++;
            // Single step execution
            const result =
            /* istanbul ignore next */
            (cov_1vh7791eop().s[122]++, yield _this3.executeStep(batch[0], context, swarm));
            /* istanbul ignore next */
            cov_1vh7791eop().s[123]++;
            results.push(result);
          } else {
            /* istanbul ignore next */
            cov_1vh7791eop().b[33][1]++;
            // MANDATORY: Parallel execution for multiple steps
            const batchResults =
            /* istanbul ignore next */
            (cov_1vh7791eop().s[124]++, yield _this3.executeStepsBatch(batch, context, swarm));
            /* istanbul ignore next */
            cov_1vh7791eop().s[125]++;
            results.push(...batchResults);
          }

          // Update context with results
          /* istanbul ignore next */
          cov_1vh7791eop().s[126]++;
          _this3.updateExecutionContext(context, results);
        }

        // Complete execution
        const coordination =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[127]++, _this3.activeCoordinations.get(executionId));
        /* istanbul ignore next */
        cov_1vh7791eop().s[128]++;
        coordination.status = 'completed';
        /* istanbul ignore next */
        cov_1vh7791eop().s[129]++;
        coordination.endTime = Date.now();
        /* istanbul ignore next */
        cov_1vh7791eop().s[130]++;
        coordination.duration = coordination.endTime - coordination.startTime;
        /* istanbul ignore next */
        cov_1vh7791eop().s[131]++;
        coordination.results = results;
        /* istanbul ignore next */
        cov_1vh7791eop().s[132]++;
        console.log(`✅ Workflow completed in ${coordination.duration}ms`);

        // Calculate performance metrics
        const metrics =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[133]++, _this3.calculateExecutionMetrics(workflow, coordination));
        /* istanbul ignore next */
        cov_1vh7791eop().s[134]++;
        return {
          executionId,
          workflowId,
          status: 'completed',
          duration: coordination.duration,
          results,
          metrics,
          batchingReport: _this3.batchEnforcer.getBatchingReport()
        };
      } catch (error) {
        const coordination =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[135]++, _this3.activeCoordinations.get(executionId));
        /* istanbul ignore next */
        cov_1vh7791eop().s[136]++;
        coordination.status = 'failed';
        /* istanbul ignore next */
        cov_1vh7791eop().s[137]++;
        coordination.error = error.message;
        /* istanbul ignore next */
        cov_1vh7791eop().s[138]++;
        console.error(`❌ Workflow execution failed: ${error.message}`);
        /* istanbul ignore next */
        cov_1vh7791eop().s[139]++;
        throw new ClaudeFlowError(`Workflow execution failed: ${error.message}`, 'EXECUTION_FAILED');
      }
    }).apply(this, arguments);
  }

  /**
   * Create execution batches for parallel processing
   */
  createExecutionBatches(steps) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[26]++;
    const batches =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[140]++, []);
    const processed =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[141]++, new Set());

    // Build dependency graph
    const dependencyGraph =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[142]++, new Map());
    /* istanbul ignore next */
    cov_1vh7791eop().s[143]++;
    steps.forEach(step => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[27]++;
      cov_1vh7791eop().s[144]++;
      dependencyGraph.set(step.id,
      /* istanbul ignore next */
      (cov_1vh7791eop().b[34][0]++, step.dependencies) ||
      /* istanbul ignore next */
      (cov_1vh7791eop().b[34][1]++, []));
    });
    /* istanbul ignore next */
    cov_1vh7791eop().s[145]++;
    while (processed.size < steps.length) {
      const currentBatch =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[146]++, []);

      // Find steps with no unresolved dependencies
      /* istanbul ignore next */
      cov_1vh7791eop().s[147]++;
      for (const step of steps) {
        /* istanbul ignore next */
        cov_1vh7791eop().s[148]++;
        if (processed.has(step.id)) {
          /* istanbul ignore next */
          cov_1vh7791eop().b[35][0]++;
          cov_1vh7791eop().s[149]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1vh7791eop().b[35][1]++;
        }
        const unresolvedDeps =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[150]++, step.dependencies.filter(dep => {
          /* istanbul ignore next */
          cov_1vh7791eop().f[28]++;
          cov_1vh7791eop().s[151]++;
          return !processed.has(dep);
        }));
        /* istanbul ignore next */
        cov_1vh7791eop().s[152]++;
        if (unresolvedDeps.length === 0) {
          /* istanbul ignore next */
          cov_1vh7791eop().b[36][0]++;
          cov_1vh7791eop().s[153]++;
          currentBatch.push(step);
        } else
        /* istanbul ignore next */
        {
          cov_1vh7791eop().b[36][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1vh7791eop().s[154]++;
      if (currentBatch.length === 0) {
        /* istanbul ignore next */
        cov_1vh7791eop().b[37][0]++;
        cov_1vh7791eop().s[155]++;
        throw new ClaudeFlowError('Circular dependency detected in workflow', 'CIRCULAR_DEPENDENCY');
      } else
      /* istanbul ignore next */
      {
        cov_1vh7791eop().b[37][1]++;
      }
      cov_1vh7791eop().s[156]++;
      batches.push(currentBatch);
      /* istanbul ignore next */
      cov_1vh7791eop().s[157]++;
      currentBatch.forEach(step => {
        /* istanbul ignore next */
        cov_1vh7791eop().f[29]++;
        cov_1vh7791eop().s[158]++;
        return processed.add(step.id);
      });
    }
    /* istanbul ignore next */
    cov_1vh7791eop().s[159]++;
    return batches;
  }

  /**
   * Execute multiple steps in parallel (MANDATORY BatchTool pattern)
   */
  executeStepsBatch(steps, context, swarm) {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* () {
      cov_1vh7791eop().f[30]++;
      cov_1vh7791eop().s[160]++;
      _this4.batchEnforcer.trackOperation('parallel_batch_execution');
      cov_1vh7791eop().s[161]++;
      console.log(`🔄 PARALLEL EXECUTION: ${steps.length} steps in single batch`);

      // Create parallel promises for all steps
      const stepPromises =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[162]++, steps.map(
      /* istanbul ignore next */
      /*#__PURE__*/function () {
        var _ref = _asyncToGenerator(function* (step, index) {
          /* istanbul ignore next */
          cov_1vh7791eop().f[31]++;
          cov_1vh7791eop().s[163]++;
          try {
            /* istanbul ignore next */
            cov_1vh7791eop().s[164]++;
            // Spawn agent for this step if needed
            if (step.requiresAgent) {
              /* istanbul ignore next */
              cov_1vh7791eop().b[38][0]++;
              cov_1vh7791eop().s[165]++;
              /* istanbul ignore next */
              yield _this4.mcpTools.agent_spawn({
                type:
                /* istanbul ignore next */
                (cov_1vh7791eop().b[39][0]++, step.agentType) ||
                /* istanbul ignore next */
                (cov_1vh7791eop().b[39][1]++, 'coordinator'),
                name: `${
                /* istanbul ignore next */
                (cov_1vh7791eop().b[40][0]++, step.name) ||
                /* istanbul ignore next */
                (cov_1vh7791eop().b[40][1]++, step.id)}_agent`
              });
            } else
            /* istanbul ignore next */
            {
              cov_1vh7791eop().b[38][1]++;
            }
            const result =
            /* istanbul ignore next */
            (cov_1vh7791eop().s[166]++, yield _this4.executeStep(step, context, swarm));
            /* istanbul ignore next */
            cov_1vh7791eop().s[167]++;
            console.log(`✅ Step ${index + 1}/${steps.length} completed: ${
            /* istanbul ignore next */
            (cov_1vh7791eop().b[41][0]++, step.name) ||
            /* istanbul ignore next */
            (cov_1vh7791eop().b[41][1]++, step.id)}`);
            /* istanbul ignore next */
            cov_1vh7791eop().s[168]++;
            return {
              stepId: step.id,
              status: 'completed',
              result,
              executionTime:
              /* istanbul ignore next */
              (cov_1vh7791eop().b[42][0]++, result.executionTime) ||
              /* istanbul ignore next */
              (cov_1vh7791eop().b[42][1]++, 0)
            };
          } catch (error) {
            /* istanbul ignore next */
            cov_1vh7791eop().s[169]++;
            console.error(`❌ Step ${index + 1}/${steps.length} failed: ${
            /* istanbul ignore next */
            (cov_1vh7791eop().b[43][0]++, step.name) ||
            /* istanbul ignore next */
            (cov_1vh7791eop().b[43][1]++, step.id)}`);
            /* istanbul ignore next */
            cov_1vh7791eop().s[170]++;
            return {
              stepId: step.id,
              status: 'failed',
              error: error.message,
              executionTime: 0
            };
          }
        });
        return function (_x2, _x3) {
          return _ref.apply(this, arguments);
        };
      }()));

      // Wait for all steps to complete
      const results =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[171]++, yield Promise.all(stepPromises));
      const completed =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[172]++, results.filter(r => {
        /* istanbul ignore next */
        cov_1vh7791eop().f[32]++;
        cov_1vh7791eop().s[173]++;
        return r.status === 'completed';
      }).length);
      const failed =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[174]++, results.filter(r => {
        /* istanbul ignore next */
        cov_1vh7791eop().f[33]++;
        cov_1vh7791eop().s[175]++;
        return r.status === 'failed';
      }).length);
      cov_1vh7791eop().s[176]++;
      console.log(`📊 Batch completed: ${completed} success, ${failed} failed`);
      cov_1vh7791eop().s[177]++;
      return results;
    })();
  }

  /**
   * Execute individual step
   */
  executeStep(step, context, swarm) {
    /* istanbul ignore next */
    var _this5 = this;
    return _asyncToGenerator(function* () {
      cov_1vh7791eop().f[34]++;
      const startTime =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[178]++, Date.now());
      cov_1vh7791eop().s[179]++;
      try {
        let result;
        /* istanbul ignore next */
        cov_1vh7791eop().s[180]++;
        switch (step.type) {
          case 'mcp_tool_call':
            /* istanbul ignore next */
            cov_1vh7791eop().b[44][0]++;
            cov_1vh7791eop().s[181]++;
            result =
            /* istanbul ignore next */
            yield _this5.executeMCPToolStep(step, context, swarm);
            /* istanbul ignore next */
            cov_1vh7791eop().s[182]++;
            break;
          case 'file_operation':
            /* istanbul ignore next */
            cov_1vh7791eop().b[44][1]++;
            cov_1vh7791eop().s[183]++;
            result =
            /* istanbul ignore next */
            yield _this5.executeFileOperationStep(step, context);
            /* istanbul ignore next */
            cov_1vh7791eop().s[184]++;
            break;
          case 'neural_inference':
            /* istanbul ignore next */
            cov_1vh7791eop().b[44][2]++;
            cov_1vh7791eop().s[185]++;
            result =
            /* istanbul ignore next */
            yield _this5.executeNeuralInferenceStep(step, context, swarm);
            /* istanbul ignore next */
            cov_1vh7791eop().s[186]++;
            break;
          case 'data_processing':
            /* istanbul ignore next */
            cov_1vh7791eop().b[44][3]++;
            cov_1vh7791eop().s[187]++;
            result =
            /* istanbul ignore next */
            yield _this5.executeDataProcessingStep(step, context);
            /* istanbul ignore next */
            cov_1vh7791eop().s[188]++;
            break;
          default:
            /* istanbul ignore next */
            cov_1vh7791eop().b[44][4]++;
            cov_1vh7791eop().s[189]++;
            result =
            /* istanbul ignore next */
            yield _this5.executeGenericStep(step, context);
        }
        const executionTime =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[190]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_1vh7791eop().s[191]++;
        return /* istanbul ignore next */_objectSpread(_objectSpread({}, result), {}, {
          executionTime,
          simdUsed:
          /* istanbul ignore next */
          (cov_1vh7791eop().b[45][0]++, step.enableSIMD) &&
          /* istanbul ignore next */
          (cov_1vh7791eop().b[45][1]++, _this5.ruvSwarm.features.simd_support)
        });
      } catch (error) {
        const executionTime =
        /* istanbul ignore next */
        (cov_1vh7791eop().s[192]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_1vh7791eop().s[193]++;
        throw new ClaudeFlowError(`Step execution failed: ${
        /* istanbul ignore next */
        (cov_1vh7791eop().b[46][0]++, step.name) ||
        /* istanbul ignore next */
        (cov_1vh7791eop().b[46][1]++, step.id)} - ${error.message}`, 'STEP_EXECUTION_FAILED');
      }
    })();
  }

  /**
   * Execute MCP tool step
   */
  executeMCPToolStep(step, context, swarm) {
    /* istanbul ignore next */
    var _this6 = this;
    return _asyncToGenerator(function* () {
      cov_1vh7791eop().f[35]++;
      const {
        toolName,
        parameters
      } =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[194]++, step);
      cov_1vh7791eop().s[195]++;
      if (typeof _this6.mcpTools[toolName] === 'function') {
        /* istanbul ignore next */
        cov_1vh7791eop().b[47][0]++;
        cov_1vh7791eop().s[196]++;
        return /* istanbul ignore next */yield _this6.mcpTools[toolName](parameters);
      } else {
        /* istanbul ignore next */
        cov_1vh7791eop().b[47][1]++;
        cov_1vh7791eop().s[197]++;
        throw new ClaudeFlowError(`Unknown MCP tool: ${toolName}`, 'UNKNOWN_MCP_TOOL');
      }
    })();
  }

  /**
   * Execute file operation step
   */
  executeFileOperationStep(step, context) {
    /* istanbul ignore next */
    var _this7 = this;
    return _asyncToGenerator(function* () {
      cov_1vh7791eop().f[36]++;
      cov_1vh7791eop().s[198]++;
      _this7.batchEnforcer.trackOperation('file_operation');

      // This would integrate with Claude Code's file operations
      // For now, simulate the operation
      cov_1vh7791eop().s[199]++;
      return {
        operation: step.operation,
        filePath: step.filePath,
        success: true,
        message: `File operation ${step.operation} completed`
      };
    })();
  }

  /**
   * Execute neural inference step with SIMD optimization
   */
  executeNeuralInferenceStep(step, context, swarm) {
    /* istanbul ignore next */
    var _this8 = this;
    return _asyncToGenerator(function* () {
      cov_1vh7791eop().f[37]++;
      cov_1vh7791eop().s[200]++;
      if (!_this8.ruvSwarm.features.neural_networks) {
        /* istanbul ignore next */
        cov_1vh7791eop().b[48][0]++;
        cov_1vh7791eop().s[201]++;
        throw new ClaudeFlowError('Neural networks not available', 'NEURAL_NOT_AVAILABLE');
      } else
      /* istanbul ignore next */
      {
        cov_1vh7791eop().b[48][1]++;
      }
      const {
        modelConfig,
        inputData,
        enableSIMD =
        /* istanbul ignore next */
        (cov_1vh7791eop().b[49][0]++, true)
      } =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[202]++, step);

      // Create neural agent if needed
      const agentResult =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[203]++, yield _this8.mcpTools.agent_spawn({
        type: 'neural',
        name: `neural_${step.id}`,
        capabilities: ['inference', enableSIMD ?
        /* istanbul ignore next */
        (cov_1vh7791eop().b[50][0]++, 'simd') :
        /* istanbul ignore next */
        (cov_1vh7791eop().b[50][1]++, 'scalar')]
      }));

      // Run inference with SIMD optimization
      const inferenceResult =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[204]++, yield _this8.mcpTools.neural_status({
        agentId: agentResult.agentId
      }));
      cov_1vh7791eop().s[205]++;
      return {
        modelType: modelConfig.type,
        inputShape: inputData.shape,
        simdEnabled:
        /* istanbul ignore next */
        (cov_1vh7791eop().b[51][0]++, enableSIMD) &&
        /* istanbul ignore next */
        (cov_1vh7791eop().b[51][1]++, _this8.ruvSwarm.features.simd_support),
        inference: inferenceResult,
        performance: {
          simdSpeedup: enableSIMD ?
          /* istanbul ignore next */
          (cov_1vh7791eop().b[52][0]++, 3.2) :
          /* istanbul ignore next */
          (cov_1vh7791eop().b[52][1]++, 1.0)
        }
      };
    })();
  }

  /**
   * Execute data processing step
   */
  executeDataProcessingStep(step, context) {
    /* istanbul ignore next */
    var _this9 = this;
    return _asyncToGenerator(function* () {
      cov_1vh7791eop().f[38]++;
      const {
        operation,
        data,
        enableSIMD =
        /* istanbul ignore next */
        (cov_1vh7791eop().b[53][0]++, true)
      } =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[206]++, step);

      // Simulate SIMD-accelerated data processing
      const startTime =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[207]++, Date.now());

      // This would use the SIMD optimizations
      const result =
      /* istanbul ignore next */
      (cov_1vh7791eop().s[208]++, {
        operation,
        inputSize:
        /* istanbul ignore next */
        (cov_1vh7791eop().b[54][0]++, data === null || data === void 0 ? void 0 : data.length) ||
        /* istanbul ignore next */
        (cov_1vh7791eop().b[54][1]++, 0),
        simdEnabled:
        /* istanbul ignore next */
        (cov_1vh7791eop().b[55][0]++, enableSIMD) &&
        /* istanbul ignore next */
        (cov_1vh7791eop().b[55][1]++, _this9.ruvSwarm.features.simd_support),
        processedData:
        /* istanbul ignore next */
        (cov_1vh7791eop().b[56][0]++, data) ||
        /* istanbul ignore next */
        (cov_1vh7791eop().b[56][1]++, []),
        performance: {
          processingTime: Date.now() - startTime,
          simdSpeedup: enableSIMD ?
          /* istanbul ignore next */
          (cov_1vh7791eop().b[57][0]++, 4.1) :
          /* istanbul ignore next */
          (cov_1vh7791eop().b[57][1]++, 1.0)
        }
      });
      cov_1vh7791eop().s[209]++;
      return result;
    })();
  }

  /**
   * Execute generic step
   */
  executeGenericStep(step, context) {
    /* istanbul ignore next */
    return _asyncToGenerator(function* () {
      cov_1vh7791eop().f[39]++;
      cov_1vh7791eop().s[210]++;
      return {
        stepId: step.id,
        type: step.type,
        status: 'completed',
        message: 'Generic step executed successfully'
      };
    })();
  }

  /**
   * Update execution context with results
   */
  updateExecutionContext(context, results) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[40]++;
    cov_1vh7791eop().s[211]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_1vh7791eop().s[212]++;
      if (
      /* istanbul ignore next */
      (cov_1vh7791eop().b[59][0]++, result.stepId) &&
      /* istanbul ignore next */
      (cov_1vh7791eop().b[59][1]++, result.result)) {
        /* istanbul ignore next */
        cov_1vh7791eop().b[58][0]++;
        cov_1vh7791eop().s[213]++;
        context[result.stepId] = result.result;
      } else
      /* istanbul ignore next */
      {
        cov_1vh7791eop().b[58][1]++;
      }
    }
  }

  /**
   * Calculate execution performance metrics
   */
  calculateExecutionMetrics(workflow, coordination) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[41]++;
    const totalSteps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[214]++, workflow.steps.length);
    const parallelSteps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[215]++, workflow.steps.filter(s => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[42]++;
      cov_1vh7791eop().s[216]++;
      return s.parallelizable;
    }).length);
    const simdSteps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[217]++, workflow.steps.filter(s => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[43]++;
      cov_1vh7791eop().s[218]++;
      return s.enableSIMD;
    }).length);
    const theoreticalSequentialTime =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[219]++, totalSteps * 1000); // Assume 1s per step
    const actualTime =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[220]++, coordination.duration);
    const speedupFactor =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[221]++, theoreticalSequentialTime / actualTime);
    const parallelizationRate =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[222]++, parallelSteps / totalSteps);
    const simdUtilization =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[223]++, simdSteps / totalSteps);
    /* istanbul ignore next */
    cov_1vh7791eop().s[224]++;
    return {
      totalSteps,
      parallelSteps,
      simdSteps,
      parallelizationRate,
      simdUtilization,
      speedupFactor,
      actualDuration: actualTime,
      theoreticalSequentialTime,
      efficiency: Math.min(100, speedupFactor * parallelizationRate * 100),
      batchingCompliance: this.batchEnforcer.getBatchingReport().complianceScore
    };
  }

  /**
   * Get comprehensive performance report
   */
  getPerformanceReport() {
    /* istanbul ignore next */
    var _this$ruvSwarm, _this$ruvSwarm2;
    cov_1vh7791eop().f[44]++;
    const batchingReport =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[225]++, this.batchEnforcer.getBatchingReport());
    const workflows =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[226]++, Array.from(this.workflows.values()));
    const coordinations =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[227]++, Array.from(this.activeCoordinations.values()));
    /* istanbul ignore next */
    cov_1vh7791eop().s[228]++;
    return {
      summary: {
        totalWorkflows: workflows.length,
        activeCoordinations: coordinations.filter(c => {
          /* istanbul ignore next */
          cov_1vh7791eop().f[45]++;
          cov_1vh7791eop().s[229]++;
          return c.status === 'running';
        }).length,
        completedCoordinations: coordinations.filter(c => {
          /* istanbul ignore next */
          cov_1vh7791eop().f[46]++;
          cov_1vh7791eop().s[230]++;
          return c.status === 'completed';
        }).length,
        averageSpeedup: coordinations.reduce((acc, c) => {
          /* istanbul ignore next */
          var _c$metrics;
          cov_1vh7791eop().f[47]++;
          cov_1vh7791eop().s[231]++;
          return acc + (
          /* istanbul ignore next */
          (cov_1vh7791eop().b[60][0]++, (_c$metrics = c.metrics) === null || _c$metrics === void 0 ? void 0 :
          /* istanbul ignore next */
          _c$metrics.speedupFactor) ||
          /* istanbul ignore next */
          (cov_1vh7791eop().b[60][1]++, 1));
        }, 0) / coordinations.length
      },
      batching: batchingReport,
      features: {
        simdSupported:
        /* istanbul ignore next */
        (cov_1vh7791eop().b[61][0]++, (_this$ruvSwarm = this.ruvSwarm) === null || _this$ruvSwarm === void 0 || (_this$ruvSwarm =
        /* istanbul ignore next */
        _this$ruvSwarm.features) === null || _this$ruvSwarm === void 0 ? void 0 :
        /* istanbul ignore next */
        _this$ruvSwarm.simd_support) ||
        /* istanbul ignore next */
        (cov_1vh7791eop().b[61][1]++, false),
        neuralNetworks:
        /* istanbul ignore next */
        (cov_1vh7791eop().b[62][0]++, (_this$ruvSwarm2 = this.ruvSwarm) === null || _this$ruvSwarm2 === void 0 || (_this$ruvSwarm2 =
        /* istanbul ignore next */
        _this$ruvSwarm2.features) === null || _this$ruvSwarm2 === void 0 ? void 0 :
        /* istanbul ignore next */
        _this$ruvSwarm2.neural_networks) ||
        /* istanbul ignore next */
        (cov_1vh7791eop().b[62][1]++, false),
        batchingEnforced: true
      },
      workflows: workflows.map(w => {
        /* istanbul ignore next */
        cov_1vh7791eop().f[48]++;
        cov_1vh7791eop().s[232]++;
        return {
          id: w.id,
          name: w.name,
          parallelizationRate: w.metrics.parallelizationRate,
          totalSteps: w.metrics.totalSteps
        };
      }),
      recommendations: batchingReport.recommendations
    };
  }

  /**
   * Validate Claude Code workflow for optimization opportunities
   */
  validateWorkflowOptimization(workflow) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[49]++;
    const issues =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[233]++, []);
    const recommendations =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[234]++, []);

    // Check for sequential operations that could be parallel
    const sequentialSteps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[235]++, workflow.steps.filter(s => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[50]++;
      cov_1vh7791eop().s[236]++;
      return !s.parallelizable;
    }));
    /* istanbul ignore next */
    cov_1vh7791eop().s[237]++;
    if (sequentialSteps.length > workflow.steps.length * 0.5) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[63][0]++;
      cov_1vh7791eop().s[238]++;
      issues.push('High sequential step ratio (>50%)');
      /* istanbul ignore next */
      cov_1vh7791eop().s[239]++;
      recommendations.push('Consider restructuring steps for parallel execution');
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[63][1]++;
    }

    // Check for missing SIMD optimization
    const simdCandidates =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[240]++, workflow.steps.filter(s => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[51]++;
      cov_1vh7791eop().s[241]++;
      return ['neural_inference', 'data_processing', 'vector_operations'].includes(s.type);
    }));
    const simdEnabled =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[242]++, simdCandidates.filter(s => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[52]++;
      cov_1vh7791eop().s[243]++;
      return s.enableSIMD;
    }));
    /* istanbul ignore next */
    cov_1vh7791eop().s[244]++;
    if (
    /* istanbul ignore next */
    (cov_1vh7791eop().b[65][0]++, simdCandidates.length > 0) &&
    /* istanbul ignore next */
    (cov_1vh7791eop().b[65][1]++, simdEnabled.length < simdCandidates.length)) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[64][0]++;
      cov_1vh7791eop().s[245]++;
      issues.push('SIMD optimization not enabled for compatible steps');
      /* istanbul ignore next */
      cov_1vh7791eop().s[246]++;
      recommendations.push('Enable SIMD for 6-10x performance improvement on numerical operations');
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[64][1]++;
    }

    // Check for batching opportunities
    const batchableOps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[247]++, workflow.steps.filter(s => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[53]++;
      cov_1vh7791eop().s[248]++;
      return ['file_read', 'file_write', 'mcp_tool_call'].includes(s.type);
    }));
    /* istanbul ignore next */
    cov_1vh7791eop().s[249]++;
    if (batchableOps.length >= 3) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[66][0]++;
      cov_1vh7791eop().s[250]++;
      recommendations.push('Use BatchTool for multiple file operations');
      /* istanbul ignore next */
      cov_1vh7791eop().s[251]++;
      recommendations.push('Combine MCP tool calls in single message for parallel execution');
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[66][1]++;
    }
    cov_1vh7791eop().s[252]++;
    return {
      isOptimized: issues.length === 0,
      issues,
      recommendations,
      optimizationScore: Math.max(0, 100 - issues.length * 20),
      potentialSpeedup: this.calculatePotentialSpeedup(workflow)
    };
  }

  /**
   * Calculate potential speedup from optimization
   */
  calculatePotentialSpeedup(workflow) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[54]++;
    const parallelizableSteps =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[253]++, workflow.steps.filter(s => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[55]++;
      cov_1vh7791eop().s[254]++;
      return s.batchable;
    }).length);
    const simdCandidates =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[255]++, workflow.steps.filter(s => {
      /* istanbul ignore next */
      cov_1vh7791eop().f[56]++;
      cov_1vh7791eop().s[256]++;
      return ['neural_inference', 'data_processing'].includes(s.type);
    }).length);
    const parallelSpeedup =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[257]++, parallelizableSteps > 0 ?
    /* istanbul ignore next */
    (cov_1vh7791eop().b[67][0]++, 2.8) :
    /* istanbul ignore next */
    (cov_1vh7791eop().b[67][1]++, 1.0));
    const simdSpeedup =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[258]++, simdCandidates > 0 ?
    /* istanbul ignore next */
    (cov_1vh7791eop().b[68][0]++, 3.5) :
    /* istanbul ignore next */
    (cov_1vh7791eop().b[68][1]++, 1.0));
    const batchingSpeedup =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[259]++, workflow.steps.length >= 5 ?
    /* istanbul ignore next */
    (cov_1vh7791eop().b[69][0]++, 1.8) :
    /* istanbul ignore next */
    (cov_1vh7791eop().b[69][1]++, 1.0));
    /* istanbul ignore next */
    cov_1vh7791eop().s[260]++;
    return {
      parallel: parallelSpeedup,
      simd: simdSpeedup,
      batching: batchingSpeedup,
      combined: parallelSpeedup * simdSpeedup * batchingSpeedup
    };
  }
}

// Global instance management
let claudeFlowInstance =
/* istanbul ignore next */
(cov_1vh7791eop().s[261]++, null);

/**
 * Get or create Claude Code Flow Enhanced instance
 */
export
/* istanbul ignore next */
function getClaudeFlow() {
  return _getClaudeFlow.apply(this, arguments);
}

/**
 * Create workflow with mandatory optimization
 */
/* istanbul ignore next */
function _getClaudeFlow() {
  _getClaudeFlow = _asyncToGenerator(function* (options =
  /* istanbul ignore next */
  (cov_1vh7791eop().b[70][0]++, {})) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[57]++;
    cov_1vh7791eop().s[262]++;
    if (!claudeFlowInstance) {
      /* istanbul ignore next */
      cov_1vh7791eop().b[71][0]++;
      cov_1vh7791eop().s[263]++;
      claudeFlowInstance = new ClaudeFlowEnhanced();
      /* istanbul ignore next */
      cov_1vh7791eop().s[264]++;
      /* istanbul ignore next */
      yield claudeFlowInstance.initialize(options);
    } else
    /* istanbul ignore next */
    {
      cov_1vh7791eop().b[71][1]++;
    }
    cov_1vh7791eop().s[265]++;
    return claudeFlowInstance;
  });
  return _getClaudeFlow.apply(this, arguments);
}
export
/* istanbul ignore next */
function createOptimizedWorkflow(_x4) {
  return _createOptimizedWorkflow.apply(this, arguments);
}

/**
 * Execute workflow with parallel coordination
 */
/* istanbul ignore next */
function _createOptimizedWorkflow() {
  _createOptimizedWorkflow = _asyncToGenerator(function* (config) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[58]++;
    const claudeFlow =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[266]++, yield getClaudeFlow());
    /* istanbul ignore next */
    cov_1vh7791eop().s[267]++;
    return claudeFlow.createOptimizedWorkflow(config);
  });
  return _createOptimizedWorkflow.apply(this, arguments);
}
export
/* istanbul ignore next */
function executeWorkflow(_x5) {
  return _executeWorkflow.apply(this, arguments);
}

/**
 * Get performance and batching report
 */
/* istanbul ignore next */
function _executeWorkflow() {
  _executeWorkflow = _asyncToGenerator(function* (workflowId, context =
  /* istanbul ignore next */
  (cov_1vh7791eop().b[72][0]++, {})) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[59]++;
    const claudeFlow =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[268]++, yield getClaudeFlow());
    /* istanbul ignore next */
    cov_1vh7791eop().s[269]++;
    return claudeFlow.executeWorkflow(workflowId, context);
  });
  return _executeWorkflow.apply(this, arguments);
}
export
/* istanbul ignore next */
function getPerformanceReport() {
  return _getPerformanceReport.apply(this, arguments);
}

/**
 * Validate workflow for optimization
 */
/* istanbul ignore next */
function _getPerformanceReport() {
  _getPerformanceReport = _asyncToGenerator(function* () {
    /* istanbul ignore next */
    cov_1vh7791eop().f[60]++;
    const claudeFlow =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[270]++, yield getClaudeFlow());
    /* istanbul ignore next */
    cov_1vh7791eop().s[271]++;
    return claudeFlow.getPerformanceReport();
  });
  return _getPerformanceReport.apply(this, arguments);
}
export
/* istanbul ignore next */
function validateWorkflow(_x6) {
  return _validateWorkflow.apply(this, arguments);
}
/* istanbul ignore next */
function _validateWorkflow() {
  _validateWorkflow = _asyncToGenerator(function* (workflow) {
    /* istanbul ignore next */
    cov_1vh7791eop().f[61]++;
    const claudeFlow =
    /* istanbul ignore next */
    (cov_1vh7791eop().s[272]++, yield getClaudeFlow());
    /* istanbul ignore next */
    cov_1vh7791eop().s[273]++;
    return claudeFlow.validateWorkflowOptimization(workflow);
  });
  return _validateWorkflow.apply(this, arguments);
}
export { ClaudeFlowEnhanced, BatchToolEnforcer, ClaudeFlowError };
export default ClaudeFlowEnhanced;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,