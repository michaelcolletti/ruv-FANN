a79c40e1ecbe154b873fa06ba7b5c1c6
/* istanbul ignore next */
function cov_rlrtbx1tr() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/mcp-daa-tools.js";
  var hash = "a774447a5752fba360fdf21893f21512908d742d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/mcp-daa-tools.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 37
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "2": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "3": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "4": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "5": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "6": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "7": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 37
        }
      },
      "8": {
        start: {
          line: 34,
          column: 10
        },
        end: {
          line: 34,
          column: 16
        }
      },
      "9": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "10": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 51,
          column: 7
        }
      },
      "11": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 74
        }
      },
      "12": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 20
        }
      },
      "13": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "14": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 87
        }
      },
      "15": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 18
        }
      },
      "16": {
        start: {
          line: 66,
          column: 22
        },
        end: {
          line: 66,
          column: 39
        }
      },
      "17": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "18": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 37
        }
      },
      "19": {
        start: {
          line: 76,
          column: 10
        },
        end: {
          line: 76,
          column: 16
        }
      },
      "20": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 80,
          column: 7
        }
      },
      "21": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 48
        }
      },
      "22": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 91,
          column: 8
        }
      },
      "23": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 24
        }
      },
      "24": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 106,
          column: 7
        }
      },
      "25": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "26": {
        start: {
          line: 97,
          column: 10
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "27": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 25
        }
      },
      "28": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 46
        }
      },
      "29": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "30": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 38
        }
      },
      "31": {
        start: {
          line: 108,
          column: 21
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "32": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "33": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 82
        }
      },
      "34": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 122,
          column: 20
        }
      },
      "35": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 126,
          column: 7
        }
      },
      "36": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 95
        }
      },
      "37": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 18
        }
      },
      "38": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 39
        }
      },
      "39": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "40": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 138,
          column: 37
        }
      },
      "41": {
        start: {
          line: 145,
          column: 10
        },
        end: {
          line: 145,
          column: 16
        }
      },
      "42": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "43": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 48
        }
      },
      "44": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 156,
          column: 8
        }
      },
      "45": {
        start: {
          line: 158,
          column: 21
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "46": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 170,
          column: 7
        }
      },
      "47": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 81
        }
      },
      "48": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 20
        }
      },
      "49": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 175,
          column: 7
        }
      },
      "50": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 94
        }
      },
      "51": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 18
        }
      },
      "52": {
        start: {
          line: 185,
          column: 22
        },
        end: {
          line: 185,
          column: 39
        }
      },
      "53": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "54": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 187,
          column: 37
        }
      },
      "55": {
        start: {
          line: 195,
          column: 10
        },
        end: {
          line: 195,
          column: 16
        }
      },
      "56": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 199,
          column: 7
        }
      },
      "57": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 61
        }
      },
      "58": {
        start: {
          line: 201,
          column: 23
        },
        end: {
          line: 201,
          column: 79
        }
      },
      "59": {
        start: {
          line: 203,
          column: 21
        },
        end: {
          line: 211,
          column: 7
        }
      },
      "60": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 215,
          column: 7
        }
      },
      "61": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 85
        }
      },
      "62": {
        start: {
          line: 216,
          column: 6
        },
        end: {
          line: 216,
          column: 20
        }
      },
      "63": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 220,
          column: 7
        }
      },
      "64": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 98
        }
      },
      "65": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 18
        }
      },
      "66": {
        start: {
          line: 230,
          column: 22
        },
        end: {
          line: 230,
          column: 39
        }
      },
      "67": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "68": {
        start: {
          line: 232,
          column: 6
        },
        end: {
          line: 232,
          column: 37
        }
      },
      "69": {
        start: {
          line: 238,
          column: 10
        },
        end: {
          line: 238,
          column: 16
        }
      },
      "70": {
        start: {
          line: 240,
          column: 6
        },
        end: {
          line: 242,
          column: 7
        }
      },
      "71": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 51
        }
      },
      "72": {
        start: {
          line: 244,
          column: 30
        },
        end: {
          line: 247,
          column: 8
        }
      },
      "73": {
        start: {
          line: 249,
          column: 21
        },
        end: {
          line: 258,
          column: 7
        }
      },
      "74": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 262,
          column: 7
        }
      },
      "75": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 86
        }
      },
      "76": {
        start: {
          line: 263,
          column: 6
        },
        end: {
          line: 263,
          column: 20
        }
      },
      "77": {
        start: {
          line: 265,
          column: 6
        },
        end: {
          line: 267,
          column: 7
        }
      },
      "78": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 99
        }
      },
      "79": {
        start: {
          line: 268,
          column: 6
        },
        end: {
          line: 268,
          column: 18
        }
      },
      "80": {
        start: {
          line: 277,
          column: 22
        },
        end: {
          line: 277,
          column: 39
        }
      },
      "81": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 321,
          column: 5
        }
      },
      "82": {
        start: {
          line: 279,
          column: 6
        },
        end: {
          line: 279,
          column: 37
        }
      },
      "83": {
        start: {
          line: 286,
          column: 10
        },
        end: {
          line: 286,
          column: 16
        }
      },
      "84": {
        start: {
          line: 288,
          column: 6
        },
        end: {
          line: 290,
          column: 7
        }
      },
      "85": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 68
        }
      },
      "86": {
        start: {
          line: 292,
          column: 29
        },
        end: {
          line: 300,
          column: 7
        }
      },
      "87": {
        start: {
          line: 302,
          column: 21
        },
        end: {
          line: 310,
          column: 7
        }
      },
      "88": {
        start: {
          line: 312,
          column: 6
        },
        end: {
          line: 314,
          column: 7
        }
      },
      "89": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 85
        }
      },
      "90": {
        start: {
          line: 315,
          column: 6
        },
        end: {
          line: 315,
          column: 20
        }
      },
      "91": {
        start: {
          line: 317,
          column: 6
        },
        end: {
          line: 319,
          column: 7
        }
      },
      "92": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 98
        }
      },
      "93": {
        start: {
          line: 320,
          column: 6
        },
        end: {
          line: 320,
          column: 18
        }
      },
      "94": {
        start: {
          line: 329,
          column: 22
        },
        end: {
          line: 329,
          column: 39
        }
      },
      "95": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 369,
          column: 5
        }
      },
      "96": {
        start: {
          line: 331,
          column: 6
        },
        end: {
          line: 331,
          column: 37
        }
      },
      "97": {
        start: {
          line: 333,
          column: 44
        },
        end: {
          line: 333,
          column: 50
        }
      },
      "98": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 342,
          column: 7
        }
      },
      "99": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 74
        }
      },
      "100": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 68
        }
      },
      "101": {
        start: {
          line: 344,
          column: 21
        },
        end: {
          line: 354,
          column: 7
        }
      },
      "102": {
        start: {
          line: 356,
          column: 6
        },
        end: {
          line: 358,
          column: 7
        }
      },
      "103": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 65
        }
      },
      "104": {
        start: {
          line: 360,
          column: 6
        },
        end: {
          line: 362,
          column: 7
        }
      },
      "105": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 85
        }
      },
      "106": {
        start: {
          line: 363,
          column: 6
        },
        end: {
          line: 363,
          column: 20
        }
      },
      "107": {
        start: {
          line: 365,
          column: 6
        },
        end: {
          line: 367,
          column: 7
        }
      },
      "108": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 98
        }
      },
      "109": {
        start: {
          line: 368,
          column: 6
        },
        end: {
          line: 368,
          column: 18
        }
      },
      "110": {
        start: {
          line: 377,
          column: 22
        },
        end: {
          line: 377,
          column: 39
        }
      },
      "111": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 432,
          column: 5
        }
      },
      "112": {
        start: {
          line: 379,
          column: 6
        },
        end: {
          line: 379,
          column: 37
        }
      },
      "113": {
        start: {
          line: 385,
          column: 10
        },
        end: {
          line: 385,
          column: 16
        }
      },
      "114": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 426,
          column: 7
        }
      },
      "115": {
        start: {
          line: 389,
          column: 25
        },
        end: {
          line: 389,
          column: 75
        }
      },
      "116": {
        start: {
          line: 391,
          column: 23
        },
        end: {
          line: 399,
          column: 9
        }
      },
      "117": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 403,
          column: 9
        }
      },
      "118": {
        start: {
          line: 402,
          column: 10
        },
        end: {
          line: 402,
          column: 89
        }
      },
      "119": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 22
        }
      },
      "120": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "121": {
        start: {
          line: 408,
          column: 10
        },
        end: {
          line: 408,
          column: 82
        }
      },
      "122": {
        start: {
          line: 411,
          column: 29
        },
        end: {
          line: 411,
          column: 83
        }
      },
      "123": {
        start: {
          line: 413,
          column: 23
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "124": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "125": {
        start: {
          line: 423,
          column: 10
        },
        end: {
          line: 423,
          column: 89
        }
      },
      "126": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 22
        }
      },
      "127": {
        start: {
          line: 428,
          column: 6
        },
        end: {
          line: 430,
          column: 7
        }
      },
      "128": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 100
        }
      },
      "129": {
        start: {
          line: 431,
          column: 6
        },
        end: {
          line: 431,
          column: 18
        }
      },
      "130": {
        start: {
          line: 440,
          column: 22
        },
        end: {
          line: 440,
          column: 39
        }
      },
      "131": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 479,
          column: 5
        }
      },
      "132": {
        start: {
          line: 442,
          column: 6
        },
        end: {
          line: 442,
          column: 37
        }
      },
      "133": {
        start: {
          line: 449,
          column: 10
        },
        end: {
          line: 449,
          column: 16
        }
      },
      "134": {
        start: {
          line: 451,
          column: 33
        },
        end: {
          line: 456,
          column: 8
        }
      },
      "135": {
        start: {
          line: 458,
          column: 21
        },
        end: {
          line: 468,
          column: 7
        }
      },
      "136": {
        start: {
          line: 470,
          column: 6
        },
        end: {
          line: 472,
          column: 7
        }
      },
      "137": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 83
        }
      },
      "138": {
        start: {
          line: 473,
          column: 6
        },
        end: {
          line: 473,
          column: 20
        }
      },
      "139": {
        start: {
          line: 475,
          column: 6
        },
        end: {
          line: 477,
          column: 7
        }
      },
      "140": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 96
        }
      },
      "141": {
        start: {
          line: 478,
          column: 6
        },
        end: {
          line: 478,
          column: 18
        }
      },
      "142": {
        start: {
          line: 487,
          column: 22
        },
        end: {
          line: 487,
          column: 39
        }
      },
      "143": {
        start: {
          line: 488,
          column: 4
        },
        end: {
          line: 536,
          column: 5
        }
      },
      "144": {
        start: {
          line: 489,
          column: 6
        },
        end: {
          line: 489,
          column: 37
        }
      },
      "145": {
        start: {
          line: 491,
          column: 53
        },
        end: {
          line: 491,
          column: 59
        }
      },
      "146": {
        start: {
          line: 493,
          column: 22
        },
        end: {
          line: 496,
          column: 8
        }
      },
      "147": {
        start: {
          line: 498,
          column: 21
        },
        end: {
          line: 525,
          column: 7
        }
      },
      "148": {
        start: {
          line: 527,
          column: 6
        },
        end: {
          line: 529,
          column: 7
        }
      },
      "149": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 89
        }
      },
      "150": {
        start: {
          line: 530,
          column: 6
        },
        end: {
          line: 530,
          column: 20
        }
      },
      "151": {
        start: {
          line: 532,
          column: 6
        },
        end: {
          line: 534,
          column: 7
        }
      },
      "152": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 102
        }
      },
      "153": {
        start: {
          line: 535,
          column: 6
        },
        end: {
          line: 535,
          column: 18
        }
      },
      "154": {
        start: {
          line: 543,
          column: 4
        },
        end: {
          line: 674,
          column: 6
        }
      },
      "155": {
        start: {
          line: 679,
          column: 27
        },
        end: {
          line: 679,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 12,
            column: 3
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 3
          }
        },
        loc: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 19,
            column: 3
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        loc: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 59,
            column: 3
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 65,
            column: 3
          }
        },
        loc: {
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 129,
            column: 3
          }
        },
        line: 65
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 135,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        loc: {
          start: {
            line: 135,
            column: 32
          },
          end: {
            line: 178,
            column: 3
          }
        },
        line: 135
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 184,
            column: 2
          },
          end: {
            line: 184,
            column: 3
          }
        },
        loc: {
          start: {
            line: 184,
            column: 36
          },
          end: {
            line: 223,
            column: 3
          }
        },
        line: 184
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 229,
            column: 2
          },
          end: {
            line: 229,
            column: 3
          }
        },
        loc: {
          start: {
            line: 229,
            column: 37
          },
          end: {
            line: 270,
            column: 3
          }
        },
        line: 229
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 276,
            column: 2
          },
          end: {
            line: 276,
            column: 3
          }
        },
        loc: {
          start: {
            line: 276,
            column: 36
          },
          end: {
            line: 322,
            column: 3
          }
        },
        line: 276
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 328,
            column: 2
          },
          end: {
            line: 328,
            column: 3
          }
        },
        loc: {
          start: {
            line: 328,
            column: 36
          },
          end: {
            line: 370,
            column: 3
          }
        },
        line: 328
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 376,
            column: 2
          },
          end: {
            line: 376,
            column: 3
          }
        },
        loc: {
          start: {
            line: 376,
            column: 38
          },
          end: {
            line: 433,
            column: 3
          }
        },
        line: 376
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 439,
            column: 2
          },
          end: {
            line: 439,
            column: 3
          }
        },
        loc: {
          start: {
            line: 439,
            column: 34
          },
          end: {
            line: 480,
            column: 3
          }
        },
        line: 439
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 486,
            column: 2
          },
          end: {
            line: 486,
            column: 3
          }
        },
        loc: {
          start: {
            line: 486,
            column: 40
          },
          end: {
            line: 537,
            column: 3
          }
        },
        line: 486
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 542,
            column: 2
          },
          end: {
            line: 542,
            column: 3
          }
        },
        loc: {
          start: {
            line: 542,
            column: 23
          },
          end: {
            line: 675,
            column: 3
          }
        },
        line: 542
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 29
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 33
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 33,
            column: 32
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 6
          },
          end: {
            line: 51,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 6
          },
          end: {
            line: 51,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 72,
            column: 25
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 73,
            column: 27
          },
          end: {
            line: 73,
            column: 37
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 74,
            column: 28
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 75,
            column: 23
          },
          end: {
            line: 75,
            column: 27
          }
        }],
        line: 75
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 80,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 80,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 106,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 106,
            column: 7
          }
        }, {
          start: {
            line: 103,
            column: 13
          },
          end: {
            line: 106,
            column: 7
          }
        }],
        line: 95
      },
      "12": {
        loc: {
          start: {
            line: 97,
            column: 10
          },
          end: {
            line: 101,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 10
          },
          end: {
            line: 101,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "13": {
        loc: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 49
          }
        }, {
          start: {
            line: 111,
            column: 53
          },
          end: {
            line: 111,
            column: 69
          }
        }],
        line: 111
      },
      "14": {
        loc: {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 51
          }
        }, {
          start: {
            line: 112,
            column: 55
          },
          end: {
            line: 112,
            column: 67
          }
        }],
        line: 112
      },
      "15": {
        loc: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 121,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 121,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 126,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 126,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 30
          }
        }],
        line: 143
      },
      "18": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 144,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 22
          },
          end: {
            line: 144,
            column: 24
          }
        }],
        line: 144
      },
      "19": {
        loc: {
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 149,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 149,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "20": {
        loc: {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "21": {
        loc: {
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "22": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 192,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 18
          }
        }],
        line: 192
      },
      "23": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 23
          },
          end: {
            line: 193,
            column: 25
          }
        }],
        line: 193
      },
      "24": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 194,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 194,
            column: 19
          },
          end: {
            line: 194,
            column: 29
          }
        }],
        line: 194
      },
      "25": {
        loc: {
          start: {
            line: 197,
            column: 6
          },
          end: {
            line: 199,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 6
          },
          end: {
            line: 199,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "26": {
        loc: {
          start: {
            line: 197,
            column: 10
          },
          end: {
            line: 197,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 10
          },
          end: {
            line: 197,
            column: 13
          }
        }, {
          start: {
            line: 197,
            column: 17
          },
          end: {
            line: 197,
            column: 22
          }
        }],
        line: 197
      },
      "27": {
        loc: {
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 215,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 215,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "28": {
        loc: {
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 220,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 220,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "29": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 236,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 236,
            column: 19
          },
          end: {
            line: 236,
            column: 21
          }
        }],
        line: 236
      },
      "30": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 237,
            column: 28
          },
          end: {
            line: 237,
            column: 32
          }
        }],
        line: 237
      },
      "31": {
        loc: {
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 242,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 242,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "32": {
        loc: {
          start: {
            line: 260,
            column: 6
          },
          end: {
            line: 262,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 6
          },
          end: {
            line: 262,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "33": {
        loc: {
          start: {
            line: 265,
            column: 6
          },
          end: {
            line: 267,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 6
          },
          end: {
            line: 267,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "34": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 283,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 25
          },
          end: {
            line: 283,
            column: 27
          }
        }],
        line: 283
      },
      "35": {
        loc: {
          start: {
            line: 288,
            column: 6
          },
          end: {
            line: 290,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 6
          },
          end: {
            line: 290,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "36": {
        loc: {
          start: {
            line: 288,
            column: 10
          },
          end: {
            line: 288,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 10
          },
          end: {
            line: 288,
            column: 24
          }
        }, {
          start: {
            line: 288,
            column: 28
          },
          end: {
            line: 288,
            column: 55
          }
        }],
        line: 288
      },
      "37": {
        loc: {
          start: {
            line: 312,
            column: 6
          },
          end: {
            line: 314,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 6
          },
          end: {
            line: 314,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "38": {
        loc: {
          start: {
            line: 317,
            column: 6
          },
          end: {
            line: 319,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 6
          },
          end: {
            line: 319,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "39": {
        loc: {
          start: {
            line: 333,
            column: 23
          },
          end: {
            line: 333,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 333,
            column: 34
          },
          end: {
            line: 333,
            column: 39
          }
        }],
        line: 333
      },
      "40": {
        loc: {
          start: {
            line: 336,
            column: 6
          },
          end: {
            line: 342,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 6
          },
          end: {
            line: 342,
            column: 7
          }
        }, {
          start: {
            line: 339,
            column: 13
          },
          end: {
            line: 342,
            column: 7
          }
        }],
        line: 336
      },
      "41": {
        loc: {
          start: {
            line: 345,
            column: 18
          },
          end: {
            line: 345,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 18
          },
          end: {
            line: 345,
            column: 25
          }
        }, {
          start: {
            line: 345,
            column: 29
          },
          end: {
            line: 345,
            column: 34
          }
        }],
        line: 345
      },
      "42": {
        loc: {
          start: {
            line: 356,
            column: 6
          },
          end: {
            line: 358,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 6
          },
          end: {
            line: 358,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "43": {
        loc: {
          start: {
            line: 360,
            column: 6
          },
          end: {
            line: 362,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 6
          },
          end: {
            line: 362,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "44": {
        loc: {
          start: {
            line: 365,
            column: 6
          },
          end: {
            line: 367,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 6
          },
          end: {
            line: 367,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "45": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 384,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 384,
            column: 18
          },
          end: {
            line: 384,
            column: 23
          }
        }],
        line: 384
      },
      "46": {
        loc: {
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 426,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 426,
            column: 7
          }
        }, {
          start: {
            line: 405,
            column: 13
          },
          end: {
            line: 426,
            column: 7
          }
        }],
        line: 387
      },
      "47": {
        loc: {
          start: {
            line: 393,
            column: 20
          },
          end: {
            line: 393,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 393,
            column: 20
          },
          end: {
            line: 393,
            column: 27
          }
        }, {
          start: {
            line: 393,
            column: 31
          },
          end: {
            line: 393,
            column: 36
          }
        }],
        line: 393
      },
      "48": {
        loc: {
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 403,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 403,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "49": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "50": {
        loc: {
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 407,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 407,
            column: 20
          }
        }, {
          start: {
            line: 407,
            column: 24
          },
          end: {
            line: 407,
            column: 32
          }
        }],
        line: 407
      },
      "51": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "52": {
        loc: {
          start: {
            line: 428,
            column: 6
          },
          end: {
            line: 430,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 6
          },
          end: {
            line: 430,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "53": {
        loc: {
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 447,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 447,
            column: 23
          },
          end: {
            line: 447,
            column: 33
          }
        }],
        line: 447
      },
      "54": {
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 448,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 448,
            column: 19
          },
          end: {
            line: 448,
            column: 21
          }
        }],
        line: 448
      },
      "55": {
        loc: {
          start: {
            line: 455,
            column: 18
          },
          end: {
            line: 455,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 455,
            column: 40
          },
          end: {
            line: 455,
            column: 48
          }
        }, {
          start: {
            line: 455,
            column: 51
          },
          end: {
            line: 455,
            column: 60
          }
        }],
        line: 455
      },
      "56": {
        loc: {
          start: {
            line: 470,
            column: 6
          },
          end: {
            line: 472,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 6
          },
          end: {
            line: 472,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "57": {
        loc: {
          start: {
            line: 475,
            column: 6
          },
          end: {
            line: 477,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 475,
            column: 6
          },
          end: {
            line: 477,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 475
      },
      "58": {
        loc: {
          start: {
            line: 491,
            column: 14
          },
          end: {
            line: 491,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 491,
            column: 25
          },
          end: {
            line: 491,
            column: 30
          }
        }],
        line: 491
      },
      "59": {
        loc: {
          start: {
            line: 491,
            column: 32
          },
          end: {
            line: 491,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 491,
            column: 44
          },
          end: {
            line: 491,
            column: 48
          }
        }],
        line: 491
      },
      "60": {
        loc: {
          start: {
            line: 527,
            column: 6
          },
          end: {
            line: 529,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 527,
            column: 6
          },
          end: {
            line: 529,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 527
      },
      "61": {
        loc: {
          start: {
            line: 532,
            column: 6
          },
          end: {
            line: 534,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 532,
            column: 6
          },
          end: {
            line: 534,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 532
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0],
      "54": [0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0],
      "59": [0],
      "60": [0, 0],
      "61": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a774447a5752fba360fdf21893f21512908d742d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rlrtbx1tr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rlrtbx1tr();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * DAA (Decentralized Autonomous Agents) MCP Tools
 * Exposes DAA capabilities through the MCP interface
 */

import { daaService } from './daa-service.js';
export class DAA_MCPTools {
  constructor(enhancedMcpTools) {
    /* istanbul ignore next */
    cov_rlrtbx1tr().f[0]++;
    cov_rlrtbx1tr().s[0]++;
    this.mcpTools = enhancedMcpTools;
    /* istanbul ignore next */
    cov_rlrtbx1tr().s[1]++;
    this.daaInitialized = false;
  }
  ensureInitialized() {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[1]++;
      cov_rlrtbx1tr().s[2]++;
      if (!_this.daaInitialized) {
        /* istanbul ignore next */
        cov_rlrtbx1tr().b[0][0]++;
        cov_rlrtbx1tr().s[3]++;
        /* istanbul ignore next */
        yield daaService.initialize();
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[4]++;
        _this.daaInitialized = true;
      } else
      /* istanbul ignore next */
      {
        cov_rlrtbx1tr().b[0][1]++;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_init
   * Initialize the DAA service with autonomous agent capabilities
   */
  daa_init(params) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[2]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[5]++, performance.now());
      cov_rlrtbx1tr().s[6]++;
      try {
        /* istanbul ignore next */
        var _this2$mcpTools;
        cov_rlrtbx1tr().s[7]++;
        /* istanbul ignore next */
        yield _this2.ensureInitialized();
        const {
          enableLearning =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[1][0]++, true),
          enableCoordination =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[2][0]++, true),
          persistenceMode =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[3][0]++, 'auto')
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[8]++, params);
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[9]++, {
          initialized: true,
          features: {
            autonomousLearning: enableLearning,
            peerCoordination: enableCoordination,
            persistenceMode,
            neuralIntegration: true,
            cognitivePatterns: 6
          },
          capabilities: daaService.getCapabilities(),
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[10]++;
        if (
        /* istanbul ignore next */
        (_this2$mcpTools = _this2.mcpTools) !== null && _this2$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this2$mcpTools.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[4][0]++;
          cov_rlrtbx1tr().s[11]++;
          _this2.mcpTools.recordToolMetrics('daa_init', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[4][1]++;
        }
        cov_rlrtbx1tr().s[12]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this2$mcpTools2;
        cov_rlrtbx1tr().s[13]++;
        if (
        /* istanbul ignore next */
        (_this2$mcpTools2 = _this2.mcpTools) !== null && _this2$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this2$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[5][0]++;
          cov_rlrtbx1tr().s[14]++;
          _this2.mcpTools.recordToolMetrics('daa_init', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[5][1]++;
        }
        cov_rlrtbx1tr().s[15]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_agent_create
   * Create an autonomous agent with DAA capabilities
   */
  daa_agent_create(params) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[3]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[16]++, performance.now());
      cov_rlrtbx1tr().s[17]++;
      try {
        /* istanbul ignore next */
        var _this3$mcpTools, _this3$mcpTools2;
        cov_rlrtbx1tr().s[18]++;
        /* istanbul ignore next */
        yield _this3.ensureInitialized();
        const {
          id,
          capabilities =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[6][0]++, []),
          cognitivePattern =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[7][0]++, 'adaptive'),
          learningRate =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[8][0]++, 0.001),
          enableMemory =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[9][0]++, true)
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[19]++, params);
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[20]++;
        if (!id) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[10][0]++;
          cov_rlrtbx1tr().s[21]++;
          throw new Error('Agent ID is required');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[10][1]++;
        }
        const agent =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[22]++, yield daaService.createAgent({
          id,
          capabilities,
          cognitivePattern,
          config: {
            learningRate,
            enableMemory,
            autonomousMode: true
          }
        }));

        // Find or create a swarm for the agent
        let swarmId =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[23]++, null);
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[24]++;
        if (
        /* istanbul ignore next */
        (_this3$mcpTools = _this3.mcpTools) !== null && _this3$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this3$mcpTools.activeSwarms) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[11][0]++;
          cov_rlrtbx1tr().s[25]++;
          for (const [id, swarm] of _this3.mcpTools.activeSwarms) {
            /* istanbul ignore next */
            cov_rlrtbx1tr().s[26]++;
            if (swarm.agents.size < swarm.maxAgents) {
              /* istanbul ignore next */
              cov_rlrtbx1tr().b[12][0]++;
              cov_rlrtbx1tr().s[27]++;
              swarmId = id;
              /* istanbul ignore next */
              cov_rlrtbx1tr().s[28]++;
              swarm.agents.set(agent.id, agent);
              /* istanbul ignore next */
              cov_rlrtbx1tr().s[29]++;
              break;
            } else
            /* istanbul ignore next */
            {
              cov_rlrtbx1tr().b[12][1]++;
            }
          }
        } else {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[11][1]++;
          cov_rlrtbx1tr().s[30]++;
          // Create a virtual swarm if none exists
          swarmId = 'daa-default-swarm';
        }
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[31]++, {
          agent_id: agent.id,
          swarm_id: swarmId,
          cognitive_pattern:
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[13][0]++, agent.cognitivePattern) ||
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[13][1]++, cognitivePattern),
          capabilities: Array.from(
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[14][0]++, agent.capabilities) ||
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[14][1]++, capabilities)),
          learning_enabled: learningRate > 0,
          memory_enabled: enableMemory,
          status: 'active',
          created_at: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[32]++;
        if (
        /* istanbul ignore next */
        (_this3$mcpTools2 = _this3.mcpTools) !== null && _this3$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this3$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[15][0]++;
          cov_rlrtbx1tr().s[33]++;
          _this3.mcpTools.recordToolMetrics('daa_agent_create', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[15][1]++;
        }
        cov_rlrtbx1tr().s[34]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this3$mcpTools3;
        cov_rlrtbx1tr().s[35]++;
        if (
        /* istanbul ignore next */
        (_this3$mcpTools3 = _this3.mcpTools) !== null && _this3$mcpTools3 !== void 0 &&
        /* istanbul ignore next */
        _this3$mcpTools3.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[16][0]++;
          cov_rlrtbx1tr().s[36]++;
          _this3.mcpTools.recordToolMetrics('daa_agent_create', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[16][1]++;
        }
        cov_rlrtbx1tr().s[37]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_agent_adapt
   * Trigger agent adaptation based on feedback
   */
  daa_agent_adapt(params) {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[4]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[38]++, performance.now());
      cov_rlrtbx1tr().s[39]++;
      try {
        /* istanbul ignore next */
        var _this4$mcpTools;
        cov_rlrtbx1tr().s[40]++;
        /* istanbul ignore next */
        yield _this4.ensureInitialized();
        const {
          agentId,
          feedback,
          performanceScore =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[17][0]++, 0.5),
          suggestions =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[18][0]++, [])
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[41]++, params);
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[42]++;
        if (!agentId) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[19][0]++;
          cov_rlrtbx1tr().s[43]++;
          throw new Error('Agent ID is required');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[19][1]++;
        }
        const adaptationResult =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[44]++, yield daaService.adaptAgent(agentId, {
          feedback,
          performanceScore,
          suggestions,
          timestamp: new Date().toISOString()
        }));
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[45]++, {
          agent_id: agentId,
          adaptation_complete: true,
          previous_pattern: adaptationResult.previousPattern,
          new_pattern: adaptationResult.newPattern,
          performance_improvement: adaptationResult.improvement,
          learning_insights: adaptationResult.insights,
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[46]++;
        if (
        /* istanbul ignore next */
        (_this4$mcpTools = _this4.mcpTools) !== null && _this4$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this4$mcpTools.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[20][0]++;
          cov_rlrtbx1tr().s[47]++;
          _this4.mcpTools.recordToolMetrics('daa_agent_adapt', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[20][1]++;
        }
        cov_rlrtbx1tr().s[48]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this4$mcpTools2;
        cov_rlrtbx1tr().s[49]++;
        if (
        /* istanbul ignore next */
        (_this4$mcpTools2 = _this4.mcpTools) !== null && _this4$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this4$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[21][0]++;
          cov_rlrtbx1tr().s[50]++;
          _this4.mcpTools.recordToolMetrics('daa_agent_adapt', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[21][1]++;
        }
        cov_rlrtbx1tr().s[51]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_workflow_create
   * Create an autonomous workflow with DAA coordination
   */
  daa_workflow_create(params) {
    /* istanbul ignore next */
    var _this5 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[5]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[52]++, performance.now());
      cov_rlrtbx1tr().s[53]++;
      try {
        /* istanbul ignore next */
        var _this5$mcpTools;
        cov_rlrtbx1tr().s[54]++;
        /* istanbul ignore next */
        yield _this5.ensureInitialized();
        const {
          id,
          name,
          steps =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[22][0]++, []),
          dependencies =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[23][0]++, {}),
          strategy =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[24][0]++, 'parallel')
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[55]++, params);
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[56]++;
        if (
        /* istanbul ignore next */
        (cov_rlrtbx1tr().b[26][0]++, !id) ||
        /* istanbul ignore next */
        (cov_rlrtbx1tr().b[26][1]++, !name)) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[25][0]++;
          cov_rlrtbx1tr().s[57]++;
          throw new Error('Workflow ID and name are required');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[25][1]++;
        }
        const workflow =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[58]++, yield daaService.createWorkflow(id, steps, dependencies));
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[59]++, {
          workflow_id: workflow.id,
          name,
          total_steps: workflow.steps.length,
          execution_strategy: strategy,
          dependencies_count: Object.keys(workflow.dependencies).length,
          status: workflow.status,
          created_at: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[60]++;
        if (
        /* istanbul ignore next */
        (_this5$mcpTools = _this5.mcpTools) !== null && _this5$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this5$mcpTools.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[27][0]++;
          cov_rlrtbx1tr().s[61]++;
          _this5.mcpTools.recordToolMetrics('daa_workflow_create', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[27][1]++;
        }
        cov_rlrtbx1tr().s[62]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this5$mcpTools2;
        cov_rlrtbx1tr().s[63]++;
        if (
        /* istanbul ignore next */
        (_this5$mcpTools2 = _this5.mcpTools) !== null && _this5$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this5$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[28][0]++;
          cov_rlrtbx1tr().s[64]++;
          _this5.mcpTools.recordToolMetrics('daa_workflow_create', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[28][1]++;
        }
        cov_rlrtbx1tr().s[65]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_workflow_execute
   * Execute a DAA workflow with autonomous agents
   */
  daa_workflow_execute(params) {
    /* istanbul ignore next */
    var _this6 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[6]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[66]++, performance.now());
      cov_rlrtbx1tr().s[67]++;
      try {
        /* istanbul ignore next */
        var _this6$mcpTools;
        cov_rlrtbx1tr().s[68]++;
        /* istanbul ignore next */
        yield _this6.ensureInitialized();
        const {
          workflowId,
          agentIds =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[29][0]++, []),
          parallelExecution =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[30][0]++, true)
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[69]++, params);
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[70]++;
        if (!workflowId) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[31][0]++;
          cov_rlrtbx1tr().s[71]++;
          throw new Error('Workflow ID is required');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[31][1]++;
        }
        const executionResult =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[72]++, yield daaService.executeWorkflow(workflowId, {
          agentIds,
          parallel: parallelExecution
        }));
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[73]++, {
          workflow_id: workflowId,
          execution_complete: executionResult.complete,
          steps_completed: executionResult.stepsCompleted,
          total_steps: executionResult.totalSteps,
          execution_time_ms: executionResult.executionTime,
          agents_involved: executionResult.agentsInvolved,
          results: executionResult.stepResults,
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[74]++;
        if (
        /* istanbul ignore next */
        (_this6$mcpTools = _this6.mcpTools) !== null && _this6$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this6$mcpTools.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[32][0]++;
          cov_rlrtbx1tr().s[75]++;
          _this6.mcpTools.recordToolMetrics('daa_workflow_execute', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[32][1]++;
        }
        cov_rlrtbx1tr().s[76]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this6$mcpTools2;
        cov_rlrtbx1tr().s[77]++;
        if (
        /* istanbul ignore next */
        (_this6$mcpTools2 = _this6.mcpTools) !== null && _this6$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this6$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[33][0]++;
          cov_rlrtbx1tr().s[78]++;
          _this6.mcpTools.recordToolMetrics('daa_workflow_execute', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[33][1]++;
        }
        cov_rlrtbx1tr().s[79]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_knowledge_share
   * Share knowledge between autonomous agents
   */
  daa_knowledge_share(params) {
    /* istanbul ignore next */
    var _this7 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[7]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[80]++, performance.now());
      cov_rlrtbx1tr().s[81]++;
      try {
        /* istanbul ignore next */
        var _this7$mcpTools;
        cov_rlrtbx1tr().s[82]++;
        /* istanbul ignore next */
        yield _this7.ensureInitialized();
        const {
          sourceAgentId,
          targetAgentIds =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[34][0]++, []),
          knowledgeDomain,
          knowledgeContent
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[83]++, params);
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[84]++;
        if (
        /* istanbul ignore next */
        (cov_rlrtbx1tr().b[36][0]++, !sourceAgentId) ||
        /* istanbul ignore next */
        (cov_rlrtbx1tr().b[36][1]++, targetAgentIds.length === 0)) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[35][0]++;
          cov_rlrtbx1tr().s[85]++;
          throw new Error('Source and target agent IDs are required');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[35][1]++;
        }
        const sharingResults =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[86]++, yield daaService.shareKnowledge(sourceAgentId, targetAgentIds, {
          domain: knowledgeDomain,
          content: knowledgeContent,
          timestamp: new Date().toISOString()
        }));
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[87]++, {
          source_agent: sourceAgentId,
          target_agents: targetAgentIds,
          knowledge_domain: knowledgeDomain,
          sharing_complete: true,
          agents_updated: sharingResults.updatedAgents,
          knowledge_transfer_rate: sharingResults.transferRate,
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[88]++;
        if (
        /* istanbul ignore next */
        (_this7$mcpTools = _this7.mcpTools) !== null && _this7$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this7$mcpTools.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[37][0]++;
          cov_rlrtbx1tr().s[89]++;
          _this7.mcpTools.recordToolMetrics('daa_knowledge_share', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[37][1]++;
        }
        cov_rlrtbx1tr().s[90]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this7$mcpTools2;
        cov_rlrtbx1tr().s[91]++;
        if (
        /* istanbul ignore next */
        (_this7$mcpTools2 = _this7.mcpTools) !== null && _this7$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this7$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[38][0]++;
          cov_rlrtbx1tr().s[92]++;
          _this7.mcpTools.recordToolMetrics('daa_knowledge_share', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[38][1]++;
        }
        cov_rlrtbx1tr().s[93]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_learning_status
   * Get learning progress and status for DAA agents
   */
  daa_learning_status(params) {
    /* istanbul ignore next */
    var _this8 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[8]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[94]++, performance.now());
      cov_rlrtbx1tr().s[95]++;
      try {
        /* istanbul ignore next */
        var _this8$mcpTools;
        cov_rlrtbx1tr().s[96]++;
        /* istanbul ignore next */
        yield _this8.ensureInitialized();
        const {
          agentId,
          detailed =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[39][0]++, false)
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[97]++, params);
        let learningStatus;
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[98]++;
        if (agentId) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[40][0]++;
          cov_rlrtbx1tr().s[99]++;
          // Get specific agent learning status
          learningStatus =
          /* istanbul ignore next */
          yield daaService.getAgentLearningStatus(agentId);
        } else {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[40][1]++;
          cov_rlrtbx1tr().s[100]++;
          // Get overall system learning status
          learningStatus =
          /* istanbul ignore next */
          yield daaService.getSystemLearningStatus();
        }
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[101]++, {
          agent_id:
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[41][0]++, agentId) ||
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[41][1]++, 'all'),
          total_learning_cycles: learningStatus.totalCycles,
          average_proficiency: learningStatus.avgProficiency,
          knowledge_domains: learningStatus.domains,
          adaptation_rate: learningStatus.adaptationRate,
          neural_models_active: learningStatus.neuralModelsCount,
          cross_session_memory: learningStatus.persistentMemorySize,
          performance_trend: learningStatus.performanceTrend,
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[102]++;
        if (detailed) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[42][0]++;
          cov_rlrtbx1tr().s[103]++;
          result.detailed_metrics = learningStatus.detailedMetrics;
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[42][1]++;
        }
        cov_rlrtbx1tr().s[104]++;
        if (
        /* istanbul ignore next */
        (_this8$mcpTools = _this8.mcpTools) !== null && _this8$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this8$mcpTools.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[43][0]++;
          cov_rlrtbx1tr().s[105]++;
          _this8.mcpTools.recordToolMetrics('daa_learning_status', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[43][1]++;
        }
        cov_rlrtbx1tr().s[106]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this8$mcpTools2;
        cov_rlrtbx1tr().s[107]++;
        if (
        /* istanbul ignore next */
        (_this8$mcpTools2 = _this8.mcpTools) !== null && _this8$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this8$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[44][0]++;
          cov_rlrtbx1tr().s[108]++;
          _this8.mcpTools.recordToolMetrics('daa_learning_status', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[44][1]++;
        }
        cov_rlrtbx1tr().s[109]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_cognitive_pattern
   * Analyze or change cognitive patterns for agents
   */
  daa_cognitive_pattern(params) {
    /* istanbul ignore next */
    var _this9 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[9]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[110]++, performance.now());
      cov_rlrtbx1tr().s[111]++;
      try {
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[112]++;
        /* istanbul ignore next */
        yield _this9.ensureInitialized();
        const {
          agentId,
          pattern,
          analyze =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[45][0]++, false)
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[113]++, params);
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[114]++;
        if (analyze) {
          /* istanbul ignore next */
          var _this9$mcpTools;
          cov_rlrtbx1tr().b[46][0]++;
          // Analyze current cognitive patterns
          const analysis =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().s[115]++, yield daaService.analyzeCognitivePatterns(agentId));
          const result =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().s[116]++, {
            analysis_type: 'cognitive_pattern',
            agent_id:
            /* istanbul ignore next */
            (cov_rlrtbx1tr().b[47][0]++, agentId) ||
            /* istanbul ignore next */
            (cov_rlrtbx1tr().b[47][1]++, 'all'),
            current_patterns: analysis.patterns,
            pattern_effectiveness: analysis.effectiveness,
            recommendations: analysis.recommendations,
            optimization_potential: analysis.optimizationScore,
            timestamp: new Date().toISOString()
          });
          /* istanbul ignore next */
          cov_rlrtbx1tr().s[117]++;
          if (
          /* istanbul ignore next */
          (_this9$mcpTools = _this9.mcpTools) !== null && _this9$mcpTools !== void 0 &&
          /* istanbul ignore next */
          _this9$mcpTools.recordToolMetrics) {
            /* istanbul ignore next */
            cov_rlrtbx1tr().b[48][0]++;
            cov_rlrtbx1tr().s[118]++;
            _this9.mcpTools.recordToolMetrics('daa_cognitive_pattern', startTime, 'success');
          } else
          /* istanbul ignore next */
          {
            cov_rlrtbx1tr().b[48][1]++;
          }
          cov_rlrtbx1tr().s[119]++;
          return result;
        } else {
          /* istanbul ignore next */
          var _this9$mcpTools2;
          cov_rlrtbx1tr().b[46][1]++;
          cov_rlrtbx1tr().s[120]++;
          // Change cognitive pattern
          if (
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[50][0]++, !agentId) ||
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[50][1]++, !pattern)) {
            /* istanbul ignore next */
            cov_rlrtbx1tr().b[49][0]++;
            cov_rlrtbx1tr().s[121]++;
            throw new Error('Agent ID and pattern are required for pattern change');
          } else
          /* istanbul ignore next */
          {
            cov_rlrtbx1tr().b[49][1]++;
          }
          const changeResult =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().s[122]++, yield daaService.setCognitivePattern(agentId, pattern));
          const result =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().s[123]++, {
            agent_id: agentId,
            previous_pattern: changeResult.previousPattern,
            new_pattern: pattern,
            adaptation_success: changeResult.success,
            expected_improvement: changeResult.expectedImprovement,
            timestamp: new Date().toISOString()
          });
          /* istanbul ignore next */
          cov_rlrtbx1tr().s[124]++;
          if (
          /* istanbul ignore next */
          (_this9$mcpTools2 = _this9.mcpTools) !== null && _this9$mcpTools2 !== void 0 &&
          /* istanbul ignore next */
          _this9$mcpTools2.recordToolMetrics) {
            /* istanbul ignore next */
            cov_rlrtbx1tr().b[51][0]++;
            cov_rlrtbx1tr().s[125]++;
            _this9.mcpTools.recordToolMetrics('daa_cognitive_pattern', startTime, 'success');
          } else
          /* istanbul ignore next */
          {
            cov_rlrtbx1tr().b[51][1]++;
          }
          cov_rlrtbx1tr().s[126]++;
          return result;
        }
      } catch (error) {
        /* istanbul ignore next */
        var _this9$mcpTools3;
        cov_rlrtbx1tr().s[127]++;
        if (
        /* istanbul ignore next */
        (_this9$mcpTools3 = _this9.mcpTools) !== null && _this9$mcpTools3 !== void 0 &&
        /* istanbul ignore next */
        _this9$mcpTools3.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[52][0]++;
          cov_rlrtbx1tr().s[128]++;
          _this9.mcpTools.recordToolMetrics('daa_cognitive_pattern', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[52][1]++;
        }
        cov_rlrtbx1tr().s[129]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_meta_learning
   * Enable meta-learning capabilities across domains
   */
  daa_meta_learning(params) {
    /* istanbul ignore next */
    var _this0 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[10]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[130]++, performance.now());
      cov_rlrtbx1tr().s[131]++;
      try {
        /* istanbul ignore next */
        var _this0$mcpTools;
        cov_rlrtbx1tr().s[132]++;
        /* istanbul ignore next */
        yield _this0.ensureInitialized();
        const {
          sourceDomain,
          targetDomain,
          transferMode =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[53][0]++, 'adaptive'),
          agentIds =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[54][0]++, [])
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[133]++, params);
        const metaLearningResult =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[134]++, yield daaService.performMetaLearning({
          sourceDomain,
          targetDomain,
          transferMode,
          agentIds: agentIds.length > 0 ?
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[55][0]++, agentIds) :
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[55][1]++, undefined)
        }));
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[135]++, {
          meta_learning_complete: true,
          source_domain: sourceDomain,
          target_domain: targetDomain,
          transfer_mode: transferMode,
          knowledge_transferred: metaLearningResult.knowledgeItems,
          agents_updated: metaLearningResult.updatedAgents,
          domain_proficiency_gain: metaLearningResult.proficiencyGain,
          cross_domain_insights: metaLearningResult.insights,
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[136]++;
        if (
        /* istanbul ignore next */
        (_this0$mcpTools = _this0.mcpTools) !== null && _this0$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this0$mcpTools.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[56][0]++;
          cov_rlrtbx1tr().s[137]++;
          _this0.mcpTools.recordToolMetrics('daa_meta_learning', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[56][1]++;
        }
        cov_rlrtbx1tr().s[138]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this0$mcpTools2;
        cov_rlrtbx1tr().s[139]++;
        if (
        /* istanbul ignore next */
        (_this0$mcpTools2 = _this0.mcpTools) !== null && _this0$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this0$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[57][0]++;
          cov_rlrtbx1tr().s[140]++;
          _this0.mcpTools.recordToolMetrics('daa_meta_learning', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[57][1]++;
        }
        cov_rlrtbx1tr().s[141]++;
        throw error;
      }
    })();
  }

  /**
   * DAA MCP Tool: daa_performance_metrics
   * Get comprehensive DAA performance metrics
   */
  daa_performance_metrics(params) {
    /* istanbul ignore next */
    var _this1 = this;
    return _asyncToGenerator(function* () {
      cov_rlrtbx1tr().f[11]++;
      const startTime =
      /* istanbul ignore next */
      (cov_rlrtbx1tr().s[142]++, performance.now());
      cov_rlrtbx1tr().s[143]++;
      try {
        /* istanbul ignore next */
        var _this1$mcpTools;
        cov_rlrtbx1tr().s[144]++;
        /* istanbul ignore next */
        yield _this1.ensureInitialized();
        const {
          category =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[58][0]++, 'all'),
          timeRange =
          /* istanbul ignore next */
          (cov_rlrtbx1tr().b[59][0]++, '1h')
        } =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[145]++, params);
        const metrics =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[146]++, yield daaService.getPerformanceMetrics({
          category,
          timeRange
        }));
        const result =
        /* istanbul ignore next */
        (cov_rlrtbx1tr().s[147]++, {
          metrics_category: category,
          time_range: timeRange,
          system_metrics: {
            total_agents: metrics.totalAgents,
            active_agents: metrics.activeAgents,
            autonomous_tasks_completed: metrics.tasksCompleted,
            average_task_time_ms: metrics.avgTaskTime,
            learning_cycles_completed: metrics.learningCycles
          },
          performance_metrics: {
            task_success_rate: metrics.successRate,
            adaptation_effectiveness: metrics.adaptationScore,
            knowledge_sharing_events: metrics.knowledgeSharingCount,
            cross_domain_transfers: metrics.crossDomainTransfers
          },
          efficiency_metrics: {
            token_reduction: metrics.tokenReduction,
            parallel_execution_gain: metrics.parallelGain,
            memory_optimization: metrics.memoryOptimization
          },
          neural_metrics: {
            models_active: metrics.neuralModelsActive,
            inference_speed_ms: metrics.avgInferenceTime,
            training_iterations: metrics.totalTrainingIterations
          },
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_rlrtbx1tr().s[148]++;
        if (
        /* istanbul ignore next */
        (_this1$mcpTools = _this1.mcpTools) !== null && _this1$mcpTools !== void 0 &&
        /* istanbul ignore next */
        _this1$mcpTools.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[60][0]++;
          cov_rlrtbx1tr().s[149]++;
          _this1.mcpTools.recordToolMetrics('daa_performance_metrics', startTime, 'success');
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[60][1]++;
        }
        cov_rlrtbx1tr().s[150]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        var _this1$mcpTools2;
        cov_rlrtbx1tr().s[151]++;
        if (
        /* istanbul ignore next */
        (_this1$mcpTools2 = _this1.mcpTools) !== null && _this1$mcpTools2 !== void 0 &&
        /* istanbul ignore next */
        _this1$mcpTools2.recordToolMetrics) {
          /* istanbul ignore next */
          cov_rlrtbx1tr().b[61][0]++;
          cov_rlrtbx1tr().s[152]++;
          _this1.mcpTools.recordToolMetrics('daa_performance_metrics', startTime, 'error', error.message);
        } else
        /* istanbul ignore next */
        {
          cov_rlrtbx1tr().b[61][1]++;
        }
        cov_rlrtbx1tr().s[153]++;
        throw error;
      }
    })();
  }

  /**
   * Get all DAA tool definitions for MCP
   */
  getToolDefinitions() {
    /* istanbul ignore next */
    cov_rlrtbx1tr().f[12]++;
    cov_rlrtbx1tr().s[154]++;
    return [{
      name: 'daa_init',
      description: 'Initialize DAA (Decentralized Autonomous Agents) service',
      inputSchema: {
        type: 'object',
        properties: {
          enableLearning: {
            type: 'boolean',
            description: 'Enable autonomous learning'
          },
          enableCoordination: {
            type: 'boolean',
            description: 'Enable peer coordination'
          },
          persistenceMode: {
            type: 'string',
            enum: ['auto', 'memory', 'disk'],
            description: 'Persistence mode'
          }
        }
      }
    }, {
      name: 'daa_agent_create',
      description: 'Create an autonomous agent with DAA capabilities',
      inputSchema: {
        type: 'object',
        properties: {
          id: {
            type: 'string',
            description: 'Unique agent identifier'
          },
          capabilities: {
            type: 'array',
            items: {
              type: 'string'
            },
            description: 'Agent capabilities'
          },
          cognitivePattern: {
            type: 'string',
            enum: ['convergent', 'divergent', 'lateral', 'systems', 'critical', 'adaptive'],
            description: 'Cognitive thinking pattern'
          },
          learningRate: {
            type: 'number',
            description: 'Learning rate (0-1)'
          },
          enableMemory: {
            type: 'boolean',
            description: 'Enable persistent memory'
          }
        },
        required: ['id']
      }
    }, {
      name: 'daa_agent_adapt',
      description: 'Trigger agent adaptation based on feedback',
      inputSchema: {
        type: 'object',
        properties: {
          agentId: {
            type: 'string',
            description: 'Agent ID to adapt'
          },
          feedback: {
            type: 'string',
            description: 'Feedback message'
          },
          performanceScore: {
            type: 'number',
            description: 'Performance score (0-1)'
          },
          suggestions: {
            type: 'array',
            items: {
              type: 'string'
            },
            description: 'Improvement suggestions'
          }
        },
        required: ['agentId']
      }
    }, {
      name: 'daa_workflow_create',
      description: 'Create an autonomous workflow with DAA coordination',
      inputSchema: {
        type: 'object',
        properties: {
          id: {
            type: 'string',
            description: 'Workflow ID'
          },
          name: {
            type: 'string',
            description: 'Workflow name'
          },
          steps: {
            type: 'array',
            description: 'Workflow steps'
          },
          dependencies: {
            type: 'object',
            description: 'Step dependencies'
          },
          strategy: {
            type: 'string',
            enum: ['parallel', 'sequential', 'adaptive'],
            description: 'Execution strategy'
          }
        },
        required: ['id', 'name']
      }
    }, {
      name: 'daa_workflow_execute',
      description: 'Execute a DAA workflow with autonomous agents',
      inputSchema: {
        type: 'object',
        properties: {
          workflowId: {
            type: 'string',
            description: 'Workflow ID to execute'
          },
          agentIds: {
            type: 'array',
            items: {
              type: 'string'
            },
            description: 'Agent IDs to use'
          },
          parallelExecution: {
            type: 'boolean',
            description: 'Enable parallel execution'
          }
        },
        required: ['workflowId']
      }
    }, {
      name: 'daa_knowledge_share',
      description: 'Share knowledge between autonomous agents',
      inputSchema: {
        type: 'object',
        properties: {
          sourceAgentId: {
            type: 'string',
            description: 'Source agent ID'
          },
          targetAgentIds: {
            type: 'array',
            items: {
              type: 'string'
            },
            description: 'Target agent IDs'
          },
          knowledgeDomain: {
            type: 'string',
            description: 'Knowledge domain'
          },
          knowledgeContent: {
            type: 'object',
            description: 'Knowledge to share'
          }
        },
        required: ['sourceAgentId', 'targetAgentIds']
      }
    }, {
      name: 'daa_learning_status',
      description: 'Get learning progress and status for DAA agents',
      inputSchema: {
        type: 'object',
        properties: {
          agentId: {
            type: 'string',
            description: 'Specific agent ID (optional)'
          },
          detailed: {
            type: 'boolean',
            description: 'Include detailed metrics'
          }
        }
      }
    }, {
      name: 'daa_cognitive_pattern',
      description: 'Analyze or change cognitive patterns for agents',
      inputSchema: {
        type: 'object',
        properties: {
          agentId: {
            type: 'string',
            description: 'Agent ID'
          },
          pattern: {
            type: 'string',
            enum: ['convergent', 'divergent', 'lateral', 'systems', 'critical', 'adaptive'],
            description: 'New pattern to set'
          },
          analyze: {
            type: 'boolean',
            description: 'Analyze patterns instead of changing'
          }
        }
      }
    }, {
      name: 'daa_meta_learning',
      description: 'Enable meta-learning capabilities across domains',
      inputSchema: {
        type: 'object',
        properties: {
          sourceDomain: {
            type: 'string',
            description: 'Source knowledge domain'
          },
          targetDomain: {
            type: 'string',
            description: 'Target knowledge domain'
          },
          transferMode: {
            type: 'string',
            enum: ['adaptive', 'direct', 'gradual'],
            description: 'Transfer mode'
          },
          agentIds: {
            type: 'array',
            items: {
              type: 'string'
            },
            description: 'Specific agents to update'
          }
        }
      }
    }, {
      name: 'daa_performance_metrics',
      description: 'Get comprehensive DAA performance metrics',
      inputSchema: {
        type: 'object',
        properties: {
          category: {
            type: 'string',
            enum: ['all', 'system', 'performance', 'efficiency', 'neural'],
            description: 'Metrics category'
          },
          timeRange: {
            type: 'string',
            description: 'Time range (e.g., 1h, 24h, 7d)'
          }
        }
      }
    }];
  }
}

// Export singleton instance
export const daaMcpTools =
/* istanbul ignore next */
(cov_rlrtbx1tr().s[155]++, new DAA_MCPTools(null));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,