9abeb2ae14185060c4299c96a8a3263b
/* istanbul ignore next */
function cov_1b4rpi984y() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/github-coordinator/claude-hooks.js";
  var hash = "8f935ce39c7f6fb1817435a6e48231c322310f41";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/github-coordinator/claude-hooks.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 53
        }
      },
      "1": {
        start: {
          line: 8,
          column: 13
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "2": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 50
        }
      },
      "3": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 61
        }
      },
      "4": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 78
        }
      },
      "6": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 89
        }
      },
      "7": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "8": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 30,
          column: 79
        }
      },
      "9": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "10": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 37,
          column: 8
        }
      },
      "11": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "13": {
        start: {
          line: 36,
          column: 40
        },
        end: {
          line: 36,
          column: 66
        }
      },
      "14": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "15": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 90
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "17": {
        start: {
          line: 42,
          column: 10
        },
        end: {
          line: 42,
          column: 47
        }
      },
      "18": {
        start: {
          line: 43,
          column: 10
        },
        end: {
          line: 43,
          column: 93
        }
      },
      "19": {
        start: {
          line: 44,
          column: 10
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "20": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 81
        }
      },
      "21": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 32
        }
      },
      "22": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 51,
          column: 61
        }
      },
      "23": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "24": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "25": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "26": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "27": {
        start: {
          line: 65,
          column: 22
        },
        end: {
          line: 65,
          column: 103
        }
      },
      "28": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 88
        }
      },
      "29": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 84
        }
      },
      "30": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 69,
          column: 62
        }
      },
      "31": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "32": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "33": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "34": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "35": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 100
        }
      },
      "36": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 90
        }
      },
      "37": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "38": {
        start: {
          line: 88,
          column: 10
        },
        end: {
          line: 88,
          column: 69
        }
      },
      "39": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 74
        }
      },
      "40": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 68
        }
      },
      "41": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 29
        }
      },
      "42": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 62
        }
      },
      "43": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "44": {
        start: {
          line: 107,
          column: 21
        },
        end: {
          line: 107,
          column: 67
        }
      },
      "45": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "46": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 78
        }
      },
      "47": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "48": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 37
        }
      },
      "49": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 66
        }
      },
      "50": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 38
        }
      },
      "51": {
        start: {
          line: 136,
          column: 20
        },
        end: {
          line: 136,
          column: 105
        }
      },
      "52": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 141,
          column: 6
        }
      },
      "53": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 150,
          column: 4
        }
      },
      "54": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 159,
          column: 4
        }
      },
      "55": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 57
        }
      },
      "56": {
        start: {
          line: 155,
          column: 27
        },
        end: {
          line: 155,
          column: 66
        }
      },
      "57": {
        start: {
          line: 156,
          column: 27
        },
        end: {
          line: 156,
          column: 67
        }
      },
      "58": {
        start: {
          line: 157,
          column: 29
        },
        end: {
          line: 157,
          column: 52
        }
      },
      "59": {
        start: {
          line: 158,
          column: 27
        },
        end: {
          line: 158,
          column: 50
        }
      },
      "60": {
        start: {
          line: 162,
          column: 0
        },
        end: {
          line: 162,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 28
          },
          end: {
            line: 15,
            column: 3
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 20
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 38
          }
        },
        loc: {
          start: {
            line: 34,
            column: 45
          },
          end: {
            line: 37,
            column: 7
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 30
          }
        },
        loc: {
          start: {
            line: 36,
            column: 40
          },
          end: {
            line: 36,
            column: 66
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 76,
            column: 3
          }
        },
        loc: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 100,
            column: 3
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 105,
            column: 3
          }
        },
        loc: {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 105
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 135,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        loc: {
          start: {
            line: 135,
            column: 26
          },
          end: {
            line: 142,
            column: 3
          }
        },
        line: 135
      },
      "9": {
        name: "registerHooks",
        decl: {
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 28
          }
        },
        loc: {
          start: {
            line: 146,
            column: 31
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 146
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        },
        loc: {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 57
          }
        },
        line: 154
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 155,
            column: 17
          },
          end: {
            line: 155,
            column: 18
          }
        },
        loc: {
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 155,
            column: 66
          }
        },
        line: 155
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 156,
            column: 18
          }
        },
        loc: {
          start: {
            line: 156,
            column: 27
          },
          end: {
            line: 156,
            column: 67
          }
        },
        line: 156
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 157,
            column: 23
          },
          end: {
            line: 157,
            column: 24
          }
        },
        loc: {
          start: {
            line: 157,
            column: 29
          },
          end: {
            line: 157,
            column: 52
          }
        },
        line: 157
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 158,
            column: 21
          },
          end: {
            line: 158,
            column: 22
          }
        },
        loc: {
          start: {
            line: 158,
            column: 27
          },
          end: {
            line: 158,
            column: 50
          }
        },
        line: 158
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 11,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 24
          },
          end: {
            line: 11,
            column: 26
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 34
          }
        }, {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 13,
            column: 60
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 38
          }
        }, {
          start: {
            line: 19,
            column: 42
          },
          end: {
            line: 19,
            column: 77
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 42
          },
          end: {
            line: 35,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 42
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 55
          },
          end: {
            line: 35,
            column: 57
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 46,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 46,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 67
          },
          end: {
            line: 65,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 67
          },
          end: {
            line: 65,
            column: 82
          }
        }, {
          start: {
            line: 65,
            column: 86
          },
          end: {
            line: 65,
            column: 101
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        }, {
          start: {
            line: 91,
            column: 13
          },
          end: {
            line: 94,
            column: 7
          }
        }],
        line: 82
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 65
          }
        }, {
          start: {
            line: 83,
            column: 69
          },
          end: {
            line: 83,
            column: 98
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "12": {
        loc: {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "13": {
        loc: {
          start: {
            line: 148,
            column: 11
          },
          end: {
            line: 148,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 11
          },
          end: {
            line: 148,
            column: 35
          }
        }, {
          start: {
            line: 148,
            column: 39
          },
          end: {
            line: 148,
            column: 47
          }
        }],
        line: 148
      },
      "14": {
        loc: {
          start: {
            line: 149,
            column: 10
          },
          end: {
            line: 149,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 10
          },
          end: {
            line: 149,
            column: 33
          }
        }, {
          start: {
            line: 149,
            column: 37
          },
          end: {
            line: 149,
            column: 47
          }
        }],
        line: 149
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f935ce39c7f6fb1817435a6e48231c322310f41"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b4rpi984y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b4rpi984y();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Claude Code Hooks for GitHub Coordination
 * Automatically coordinates swarm activities with GitHub
 */

const GHCoordinator =
/* istanbul ignore next */
(cov_1b4rpi984y().s[0]++, require('./gh-cli-coordinator'));
// const fs = require('fs').promises; // Unused - will be used in future implementation
const path =
/* istanbul ignore next */
(cov_1b4rpi984y().s[1]++, require('path'));
class ClaudeGitHubHooks {
  constructor(options =
  /* istanbul ignore next */
  (cov_1b4rpi984y().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1b4rpi984y().f[0]++;
    cov_1b4rpi984y().s[2]++;
    this.coordinator = new GHCoordinator(options);
    /* istanbul ignore next */
    cov_1b4rpi984y().s[3]++;
    this.swarmId =
    /* istanbul ignore next */
    (cov_1b4rpi984y().b[1][0]++, options.swarmId) ||
    /* istanbul ignore next */
    (cov_1b4rpi984y().b[1][1]++, this.generateSwarmId());
    /* istanbul ignore next */
    cov_1b4rpi984y().s[4]++;
    this.activeTask = null;
  }
  generateSwarmId() {
    /* istanbul ignore next */
    cov_1b4rpi984y().f[1]++;
    cov_1b4rpi984y().s[5]++;
    // Generate swarm ID from environment or random
    return /* istanbul ignore next */(cov_1b4rpi984y().b[2][0]++, process.env.CLAUDE_SWARM_ID) ||
    /* istanbul ignore next */
    (cov_1b4rpi984y().b[2][1]++, `claude-${Date.now().toString(36)}`);
  }

  /**
   * Pre-task hook: Claim a GitHub issue before starting work
   */
  preTask(taskDescription) {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* () {
      cov_1b4rpi984y().f[2]++;
      cov_1b4rpi984y().s[6]++;
      console.log(`🎯 Pre-task: Looking for GitHub issues related to: ${taskDescription}`);
      cov_1b4rpi984y().s[7]++;
      try {
        // Search for related issues
        const tasks =
        /* istanbul ignore next */
        (cov_1b4rpi984y().s[8]++, yield _this.coordinator.getAvailableTasks({
          state: 'open'
        }));

        // Find best matching task (simple keyword matching for now)
        const keywords =
        /* istanbul ignore next */
        (cov_1b4rpi984y().s[9]++, taskDescription.toLowerCase().split(' '));
        const matchedTask =
        /* istanbul ignore next */
        (cov_1b4rpi984y().s[10]++, tasks.find(task => {
          /* istanbul ignore next */
          cov_1b4rpi984y().f[3]++;
          const taskText =
          /* istanbul ignore next */
          (cov_1b4rpi984y().s[11]++, `${task.title} ${
          /* istanbul ignore next */
          (cov_1b4rpi984y().b[3][0]++, task.body) ||
          /* istanbul ignore next */
          (cov_1b4rpi984y().b[3][1]++, '')}`.toLowerCase());
          /* istanbul ignore next */
          cov_1b4rpi984y().s[12]++;
          return keywords.some(keyword => {
            /* istanbul ignore next */
            cov_1b4rpi984y().f[4]++;
            cov_1b4rpi984y().s[13]++;
            return taskText.includes(keyword);
          });
        }));
        /* istanbul ignore next */
        cov_1b4rpi984y().s[14]++;
        if (matchedTask) {
          /* istanbul ignore next */
          cov_1b4rpi984y().b[4][0]++;
          const claimed =
          /* istanbul ignore next */
          (cov_1b4rpi984y().s[15]++, yield _this.coordinator.claimTask(_this.swarmId, matchedTask.number));
          /* istanbul ignore next */
          cov_1b4rpi984y().s[16]++;
          if (claimed) {
            /* istanbul ignore next */
            cov_1b4rpi984y().b[5][0]++;
            cov_1b4rpi984y().s[17]++;
            _this.activeTask = matchedTask.number;
            /* istanbul ignore next */
            cov_1b4rpi984y().s[18]++;
            console.log(`✅ Claimed GitHub issue #${matchedTask.number}: ${matchedTask.title}`);
            /* istanbul ignore next */
            cov_1b4rpi984y().s[19]++;
            return {
              claimed: true,
              issue: matchedTask.number
            };
          } else
          /* istanbul ignore next */
          {
            cov_1b4rpi984y().b[5][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1b4rpi984y().b[4][1]++;
        }
        cov_1b4rpi984y().s[20]++;
        console.log('ℹ️ No matching GitHub issue found, proceeding without claim');
        /* istanbul ignore next */
        cov_1b4rpi984y().s[21]++;
        return {
          claimed: false
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1b4rpi984y().s[22]++;
        console.error('❌ Pre-task hook error:', error.message);
        /* istanbul ignore next */
        cov_1b4rpi984y().s[23]++;
        return {
          error: error.message
        };
      }
    })();
  }

  /**
   * Post-edit hook: Update GitHub issue with progress
   */
  postEdit(filePath, changes) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_1b4rpi984y().f[5]++;
      cov_1b4rpi984y().s[24]++;
      if (!_this2.activeTask) {
        /* istanbul ignore next */
        cov_1b4rpi984y().b[6][0]++;
        cov_1b4rpi984y().s[25]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1b4rpi984y().b[6][1]++;
      }
      cov_1b4rpi984y().s[26]++;
      try {
        const message =
        /* istanbul ignore next */
        (cov_1b4rpi984y().s[27]++, `Updated \`${path.basename(filePath)}\`\n\n${
        /* istanbul ignore next */
        (cov_1b4rpi984y().b[7][0]++, changes.summary) ||
        /* istanbul ignore next */
        (cov_1b4rpi984y().b[7][1]++, 'File modified')}`);
        /* istanbul ignore next */
        cov_1b4rpi984y().s[28]++;
        /* istanbul ignore next */
        yield _this2.coordinator.updateTaskProgress(_this2.swarmId, _this2.activeTask, message);
        /* istanbul ignore next */
        cov_1b4rpi984y().s[29]++;
        console.log(`📝 Updated GitHub issue #${_this2.activeTask} with edit progress`);
      } catch (error) {
        /* istanbul ignore next */
        cov_1b4rpi984y().s[30]++;
        console.error('❌ Post-edit hook error:', error.message);
      }
    })();
  }

  /**
   * Post-task hook: Complete or release the GitHub issue
   */
  postTask(taskId, result) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* () {
      cov_1b4rpi984y().f[6]++;
      cov_1b4rpi984y().s[31]++;
      if (!_this3.activeTask) {
        /* istanbul ignore next */
        cov_1b4rpi984y().b[8][0]++;
        cov_1b4rpi984y().s[32]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1b4rpi984y().b[8][1]++;
      }
      cov_1b4rpi984y().s[33]++;
      try {
        /* istanbul ignore next */
        cov_1b4rpi984y().s[34]++;
        if (result.completed) {
          /* istanbul ignore next */
          cov_1b4rpi984y().b[9][0]++;
          const message =
          /* istanbul ignore next */
          (cov_1b4rpi984y().s[35]++, `✅ **Task Completed**\n\n${
          /* istanbul ignore next */
          (cov_1b4rpi984y().b[10][0]++, result.summary) ||
          /* istanbul ignore next */
          (cov_1b4rpi984y().b[10][1]++, 'Task completed successfully')}`);
          /* istanbul ignore next */
          cov_1b4rpi984y().s[36]++;
          /* istanbul ignore next */
          yield _this3.coordinator.updateTaskProgress(_this3.swarmId, _this3.activeTask, message);

          // Option to auto-close issue (disabled by default)
          /* istanbul ignore next */
          cov_1b4rpi984y().s[37]++;
          if (result.autoClose) {
            /* istanbul ignore next */
            cov_1b4rpi984y().b[11][0]++;
            cov_1b4rpi984y().s[38]++;
            console.log(`🏁 Closing GitHub issue #${_this3.activeTask}`);
            // Use gh CLI to close issue
          } else
          /* istanbul ignore next */
          {
            cov_1b4rpi984y().b[11][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_1b4rpi984y().b[9][1]++;
          cov_1b4rpi984y().s[39]++;
          /* istanbul ignore next */
          yield _this3.coordinator.releaseTask(_this3.swarmId, _this3.activeTask);
          /* istanbul ignore next */
          cov_1b4rpi984y().s[40]++;
          console.log(`🔓 Released GitHub issue #${_this3.activeTask}`);
        }
        /* istanbul ignore next */
        cov_1b4rpi984y().s[41]++;
        _this3.activeTask = null;
      } catch (error) {
        /* istanbul ignore next */
        cov_1b4rpi984y().s[42]++;
        console.error('❌ Post-task hook error:', error.message);
      }
    })();
  }

  /**
   * Conflict detection hook
   */
  detectConflicts() {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* () {
      cov_1b4rpi984y().f[7]++;
      cov_1b4rpi984y().s[43]++;
      try {
        const status =
        /* istanbul ignore next */
        (cov_1b4rpi984y().s[44]++, yield _this4.coordinator.getCoordinationStatus());

        // Check if multiple swarms are working on similar files
        // const conflicts = []; // Unused - will be used in future implementation

        // Simple conflict detection based on swarm count
        /* istanbul ignore next */
        cov_1b4rpi984y().s[45]++;
        if (Object.keys(status.swarmStatus).length > 1) {
          /* istanbul ignore next */
          cov_1b4rpi984y().b[12][0]++;
          cov_1b4rpi984y().s[46]++;
          console.log('⚠️ Multiple swarms detected, checking for conflicts...');

          // More sophisticated conflict detection could be added here
          // For now, just warn about multiple active swarms
          /* istanbul ignore next */
          cov_1b4rpi984y().s[47]++;
          return {
            hasConflicts: false,
            warningCount: Object.keys(status.swarmStatus).length - 1,
            message: 'Multiple swarms active, coordinate through GitHub issues'
          };
        } else
        /* istanbul ignore next */
        {
          cov_1b4rpi984y().b[12][1]++;
        }
        cov_1b4rpi984y().s[48]++;
        return {
          hasConflicts: false
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1b4rpi984y().s[49]++;
        console.error('❌ Conflict detection error:', error.message);
        /* istanbul ignore next */
        cov_1b4rpi984y().s[50]++;
        return {
          error: error.message
        };
      }
    })();
  }

  /**
   * Get coordination dashboard URL
   */
  getDashboardUrl() {
    /* istanbul ignore next */
    var _this5 = this;
    return _asyncToGenerator(function* () {
      cov_1b4rpi984y().f[8]++;
      const baseUrl =
      /* istanbul ignore next */
      (cov_1b4rpi984y().s[51]++, `https://github.com/${_this5.coordinator.config.owner}/${_this5.coordinator.config.repo}`);
      cov_1b4rpi984y().s[52]++;
      return {
        issues: `${baseUrl}/issues?q=is:issue+is:open+label:${_this5.coordinator.config.labelPrefix}${_this5.swarmId}`,
        allSwarms: `${baseUrl}/issues?q=is:issue+is:open+label:${_this5.coordinator.config.labelPrefix}`,
        board: `${baseUrl}/projects`
      };
    })();
  }
}

// Hook registration for Claude Code
/* istanbul ignore next */
function registerHooks() {
  return _registerHooks.apply(this, arguments);
}
/* istanbul ignore next */
function _registerHooks() {
  _registerHooks = _asyncToGenerator(function* () {
    /* istanbul ignore next */
    cov_1b4rpi984y().f[9]++;
    const hooks =
    /* istanbul ignore next */
    (cov_1b4rpi984y().s[53]++, new ClaudeGitHubHooks({
      owner:
      /* istanbul ignore next */
      (cov_1b4rpi984y().b[13][0]++, process.env.GITHUB_OWNER) ||
      /* istanbul ignore next */
      (cov_1b4rpi984y().b[13][1]++, 'ruvnet'),
      repo:
      /* istanbul ignore next */
      (cov_1b4rpi984y().b[14][0]++, process.env.GITHUB_REPO) ||
      /* istanbul ignore next */
      (cov_1b4rpi984y().b[14][1]++, 'ruv-FANN')
    }));

    // Register with Claude Code's hook system
    /* istanbul ignore next */
    cov_1b4rpi984y().s[54]++;
    return {
      'pre-task': args => {
        /* istanbul ignore next */
        cov_1b4rpi984y().f[10]++;
        cov_1b4rpi984y().s[55]++;
        return hooks.preTask(args.description);
      },
      'post-edit': args => {
        /* istanbul ignore next */
        cov_1b4rpi984y().f[11]++;
        cov_1b4rpi984y().s[56]++;
        return hooks.postEdit(args.file, args.changes);
      },
      'post-task': args => {
        /* istanbul ignore next */
        cov_1b4rpi984y().f[12]++;
        cov_1b4rpi984y().s[57]++;
        return hooks.postTask(args.taskId, args.result);
      },
      'check-conflicts': () => {
        /* istanbul ignore next */
        cov_1b4rpi984y().f[13]++;
        cov_1b4rpi984y().s[58]++;
        return hooks.detectConflicts();
      },
      'get-dashboard': () => {
        /* istanbul ignore next */
        cov_1b4rpi984y().f[14]++;
        cov_1b4rpi984y().s[59]++;
        return hooks.getDashboardUrl();
      }
    };
  });
  return _registerHooks.apply(this, arguments);
}
/* istanbul ignore next */
cov_1b4rpi984y().s[60]++;
module.exports = {
  ClaudeGitHubHooks,
  registerHooks
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,