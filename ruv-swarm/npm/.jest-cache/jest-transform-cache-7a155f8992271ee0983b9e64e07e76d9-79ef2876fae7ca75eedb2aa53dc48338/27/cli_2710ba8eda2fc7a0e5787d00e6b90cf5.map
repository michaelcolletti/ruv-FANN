{"version":3,"names":["cov_1niu5trdox","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","handleHook","main","_main","args","process","argv","slice","hookType","options","parseArgs","result","console","log","JSON","stringify","continue","exit","error","message","stack","env","DEBUG","length","arg","startsWith","key","substring","toCamelCase","_args","_","push","str","replace","g","toUpperCase","import","meta","url","catch"],"sources":["cli.js"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * CLI handler for ruv-swarm hooks\n * Usage: npx ruv-swarm hook <type> [options]\n */\n\nimport { handleHook } from './index.js';\n\nasync function main() {\n  const args = process.argv.slice(2);\n\n  // Skip if not a hook command\n  if (args[0] !== 'hook') {\n    return;\n  }\n\n  const [, hookType] = args;\n  const options = parseArgs(args.slice(2));\n\n  try {\n    const result = await handleHook(hookType, options);\n\n    // Output JSON response for Claude Code to parse\n    console.log(JSON.stringify(result, null, 2));\n\n    // Exit with appropriate code\n    if (result.continue === false) {\n      process.exit(2); // Blocking error\n    } else {\n      process.exit(0); // Success\n    }\n  } catch (error) {\n    console.error(JSON.stringify({\n      continue: true,\n      error: error.message,\n      stack: process.env.DEBUG ? error.stack : undefined,\n    }));\n    process.exit(1); // Non-blocking error\n  }\n}\n\nfunction parseArgs(args) {\n  const options = {};\n\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n\n    if (arg.startsWith('--')) {\n      const key = arg.substring(2);\n\n      // Check if next arg is a value or another flag\n      if (i + 1 < args.length && !args[i + 1].startsWith('--')) {\n        // Next arg is the value\n        options[toCamelCase(key)] = args[i + 1];\n        i++; // Skip the value in next iteration\n      } else {\n        // Boolean flag\n        options[toCamelCase(key)] = true;\n      }\n    } else if (!args[i - 1]?.startsWith('--')) {\n      // Positional argument\n      if (!options._) {\n        options._ = [];\n      }\n      options._.push(arg);\n    }\n  }\n\n  return options;\n}\n\nfunction toCamelCase(str) {\n  return str.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}\n\n// Run if called directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  main().catch(console.error);\n}\n\nexport { main };"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AAHA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA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","ignoreList":[]}