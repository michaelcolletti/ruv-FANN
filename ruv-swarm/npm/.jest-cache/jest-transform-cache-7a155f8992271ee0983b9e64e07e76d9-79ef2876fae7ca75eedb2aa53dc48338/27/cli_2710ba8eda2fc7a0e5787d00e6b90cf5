14dc3bf1a3195b796260d9667275d6f2
#!/usr/bin/env node

/**
 * CLI handler for ruv-swarm hooks
 * Usage: npx ruv-swarm hook <type> [options]
 */
/* istanbul ignore next */
function cov_1niu5trdox() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/hooks/cli.js";
  var hash = "8e30df004510dae4cbf826e346dfcefd77bfaa48";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/hooks/cli.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "1": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "2": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 11
        }
      },
      "3": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "4": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "5": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "6": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "7": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "8": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "9": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 22
        }
      },
      "10": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 22
        }
      },
      "11": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 38,
          column: 8
        }
      },
      "12": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 20
        }
      },
      "13": {
        start: {
          line: 44,
          column: 18
        },
        end: {
          line: 44,
          column: 20
        }
      },
      "14": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 68,
          column: 3
        }
      },
      "15": {
        start: {
          line: 46,
          column: 15
        },
        end: {
          line: 46,
          column: 16
        }
      },
      "16": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 23
        }
      },
      "17": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "18": {
        start: {
          line: 50,
          column: 18
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "19": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 60,
          column: 7
        }
      },
      "20": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 48
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 12
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "23": {
        start: {
          line: 61,
          column: 11
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "24": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "25": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 23
        }
      },
      "26": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 26
        }
      },
      "27": {
        start: {
          line: 70,
          column: 2
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "28": {
        start: {
          line: 74,
          column: 2
        },
        end: {
          line: 74,
          column: 61
        }
      },
      "29": {
        start: {
          line: 74,
          column: 41
        },
        end: {
          line: 74,
          column: 59
        }
      },
      "30": {
        start: {
          line: 78,
          column: 0
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "31": {
        start: {
          line: 79,
          column: 2
        },
        end: {
          line: 79,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "main",
        decl: {
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 19
          }
        },
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "parseArgs",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 18
          }
        },
        loc: {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 43
      },
      "2": {
        name: "toCamelCase",
        decl: {
          start: {
            line: 73,
            column: 9
          },
          end: {
            line: 73,
            column: 20
          }
        },
        loc: {
          start: {
            line: 73,
            column: 26
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 73
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 74,
            column: 34
          },
          end: {
            line: 74,
            column: 35
          }
        },
        loc: {
          start: {
            line: 74,
            column: 41
          },
          end: {
            line: 74,
            column: 59
          }
        },
        line: 74
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 32,
            column: 5
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 37,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 37,
            column: 44
          }
        }, {
          start: {
            line: 37,
            column: 47
          },
          end: {
            line: 37,
            column: 56
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 67,
            column: 5
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 6
          },
          end: {
            line: 60,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 6
          },
          end: {
            line: 60,
            column: 7
          }
        }, {
          start: {
            line: 57,
            column: 13
          },
          end: {
            line: 60,
            column: 7
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 10
          },
          end: {
            line: 53,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 10
          },
          end: {
            line: 53,
            column: 29
          }
        }, {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 53,
            column: 62
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 11
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 0
          },
          end: {
            line: 80,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 0
          },
          end: {
            line: 80,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8e30df004510dae4cbf826e346dfcefd77bfaa48"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1niu5trdox = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1niu5trdox();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
import { handleHook } from './index.js';
/* istanbul ignore next */
function main() {
  return _main.apply(this, arguments);
}
/* istanbul ignore next */
function _main() {
  _main = _asyncToGenerator(function* () {
    /* istanbul ignore next */
    cov_1niu5trdox().f[0]++;
    const args =
    /* istanbul ignore next */
    (cov_1niu5trdox().s[0]++, process.argv.slice(2));

    // Skip if not a hook command
    /* istanbul ignore next */
    cov_1niu5trdox().s[1]++;
    if (args[0] !== 'hook') {
      /* istanbul ignore next */
      cov_1niu5trdox().b[0][0]++;
      cov_1niu5trdox().s[2]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1niu5trdox().b[0][1]++;
    }
    const [, hookType] =
    /* istanbul ignore next */
    (cov_1niu5trdox().s[3]++, args);
    const options =
    /* istanbul ignore next */
    (cov_1niu5trdox().s[4]++, parseArgs(args.slice(2)));
    /* istanbul ignore next */
    cov_1niu5trdox().s[5]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1niu5trdox().s[6]++, yield handleHook(hookType, options));

      // Output JSON response for Claude Code to parse
      /* istanbul ignore next */
      cov_1niu5trdox().s[7]++;
      console.log(JSON.stringify(result, null, 2));

      // Exit with appropriate code
      /* istanbul ignore next */
      cov_1niu5trdox().s[8]++;
      if (result.continue === false) {
        /* istanbul ignore next */
        cov_1niu5trdox().b[1][0]++;
        cov_1niu5trdox().s[9]++;
        process.exit(2); // Blocking error
      } else {
        /* istanbul ignore next */
        cov_1niu5trdox().b[1][1]++;
        cov_1niu5trdox().s[10]++;
        process.exit(0); // Success
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1niu5trdox().s[11]++;
      console.error(JSON.stringify({
        continue: true,
        error: error.message,
        stack: process.env.DEBUG ?
        /* istanbul ignore next */
        (cov_1niu5trdox().b[2][0]++, error.stack) :
        /* istanbul ignore next */
        (cov_1niu5trdox().b[2][1]++, undefined)
      }));
      /* istanbul ignore next */
      cov_1niu5trdox().s[12]++;
      process.exit(1); // Non-blocking error
    }
  });
  return _main.apply(this, arguments);
}
function parseArgs(args) {
  /* istanbul ignore next */
  cov_1niu5trdox().f[1]++;
  const options =
  /* istanbul ignore next */
  (cov_1niu5trdox().s[13]++, {});
  /* istanbul ignore next */
  cov_1niu5trdox().s[14]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1niu5trdox().s[15]++, 0); i < args.length; i++) {
    const arg =
    /* istanbul ignore next */
    (cov_1niu5trdox().s[16]++, args[i]);
    /* istanbul ignore next */
    cov_1niu5trdox().s[17]++;
    if (arg.startsWith('--')) {
      /* istanbul ignore next */
      cov_1niu5trdox().b[3][0]++;
      const key =
      /* istanbul ignore next */
      (cov_1niu5trdox().s[18]++, arg.substring(2));

      // Check if next arg is a value or another flag
      /* istanbul ignore next */
      cov_1niu5trdox().s[19]++;
      if (
      /* istanbul ignore next */
      (cov_1niu5trdox().b[5][0]++, i + 1 < args.length) &&
      /* istanbul ignore next */
      (cov_1niu5trdox().b[5][1]++, !args[i + 1].startsWith('--'))) {
        /* istanbul ignore next */
        cov_1niu5trdox().b[4][0]++;
        cov_1niu5trdox().s[20]++;
        // Next arg is the value
        options[toCamelCase(key)] = args[i + 1];
        /* istanbul ignore next */
        cov_1niu5trdox().s[21]++;
        i++; // Skip the value in next iteration
      } else {
        /* istanbul ignore next */
        cov_1niu5trdox().b[4][1]++;
        cov_1niu5trdox().s[22]++;
        // Boolean flag
        options[toCamelCase(key)] = true;
      }
    } else {
      /* istanbul ignore next */
      var _args;
      cov_1niu5trdox().b[3][1]++;
      cov_1niu5trdox().s[23]++;
      if (!
      /* istanbul ignore next */
      ((_args = args[i - 1]) !== null && _args !== void 0 &&
      /* istanbul ignore next */
      _args.startsWith('--'))) {
        /* istanbul ignore next */
        cov_1niu5trdox().b[6][0]++;
        cov_1niu5trdox().s[24]++;
        // Positional argument
        if (!options._) {
          /* istanbul ignore next */
          cov_1niu5trdox().b[7][0]++;
          cov_1niu5trdox().s[25]++;
          options._ = [];
        } else
        /* istanbul ignore next */
        {
          cov_1niu5trdox().b[7][1]++;
        }
        cov_1niu5trdox().s[26]++;
        options._.push(arg);
      } else
      /* istanbul ignore next */
      {
        cov_1niu5trdox().b[6][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1niu5trdox().s[27]++;
  return options;
}
function toCamelCase(str) {
  /* istanbul ignore next */
  cov_1niu5trdox().f[2]++;
  cov_1niu5trdox().s[28]++;
  return str.replace(/-([a-z])/g, g => {
    /* istanbul ignore next */
    cov_1niu5trdox().f[3]++;
    cov_1niu5trdox().s[29]++;
    return g[1].toUpperCase();
  });
}

// Run if called directly
/* istanbul ignore next */
cov_1niu5trdox().s[30]++;
if (import.meta.url === `file://${process.argv[1]}`) {
  /* istanbul ignore next */
  cov_1niu5trdox().b[8][0]++;
  cov_1niu5trdox().s[31]++;
  main().catch(console.error);
} else
/* istanbul ignore next */
{
  cov_1niu5trdox().b[8][1]++;
}
export { main };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,