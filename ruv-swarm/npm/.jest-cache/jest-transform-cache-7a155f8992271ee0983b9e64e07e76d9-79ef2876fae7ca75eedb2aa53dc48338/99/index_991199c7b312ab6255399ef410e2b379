549582670cd948e560753663266621fd
/* istanbul ignore next */
function cov_1htatde79d() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/index.js";
  var hash = "ced2ba7119f26fb9118fc752753bd645692a6819";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/index.js",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 33
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "2": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 91
        }
      },
      "3": {
        start: {
          line: 19,
          column: 60
        },
        end: {
          line: 19,
          column: 90
        }
      },
      "4": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 67
        }
      },
      "5": {
        start: {
          line: 20,
          column: 44
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "6": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 67
        }
      },
      "7": {
        start: {
          line: 21,
          column: 44
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "8": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 91
        }
      },
      "9": {
        start: {
          line: 22,
          column: 60
        },
        end: {
          line: 22,
          column: 90
        }
      },
      "10": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 67
        }
      },
      "11": {
        start: {
          line: 23,
          column: 44
        },
        end: {
          line: 23,
          column: 66
        }
      },
      "12": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 76
        }
      },
      "13": {
        start: {
          line: 24,
          column: 50
        },
        end: {
          line: 24,
          column: 75
        }
      },
      "14": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 67
        }
      },
      "15": {
        start: {
          line: 25,
          column: 44
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "16": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 70
        }
      },
      "17": {
        start: {
          line: 26,
          column: 46
        },
        end: {
          line: 26,
          column: 69
        }
      },
      "18": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "19": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 110
        }
      },
      "20": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "21": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 260,
          column: 1
        }
      },
      "22": {
        start: {
          line: 263,
          column: 30
        },
        end: {
          line: 273,
          column: 1
        }
      },
      "23": {
        start: {
          line: 264,
          column: 2
        },
        end: {
          line: 266,
          column: 3
        }
      },
      "24": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 265,
          column: 73
        }
      },
      "25": {
        start: {
          line: 268,
          column: 2
        },
        end: {
          line: 270,
          column: 3
        }
      },
      "26": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 84
        }
      },
      "27": {
        start: {
          line: 272,
          column: 2
        },
        end: {
          line: 272,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 17,
            column: 34
          }
        },
        loc: {
          start: {
            line: 17,
            column: 56
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 91
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 55
          },
          end: {
            line: 19,
            column: 56
          }
        },
        loc: {
          start: {
            line: 19,
            column: 60
          },
          end: {
            line: 19,
            column: 90
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 10
          }
        },
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 67
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 44
          },
          end: {
            line: 20,
            column: 66
          }
        },
        line: 20
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 10
          }
        },
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 67
          }
        },
        line: 21
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 21,
            column: 40
          }
        },
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 66
          }
        },
        line: 21
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 91
          }
        },
        line: 22
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 22,
            column: 55
          },
          end: {
            line: 22,
            column: 56
          }
        },
        loc: {
          start: {
            line: 22,
            column: 60
          },
          end: {
            line: 22,
            column: 90
          }
        },
        line: 22
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 10
          }
        },
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 67
          }
        },
        line: 23
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 23,
            column: 40
          }
        },
        loc: {
          start: {
            line: 23,
            column: 44
          },
          end: {
            line: 23,
            column: 66
          }
        },
        line: 23
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 13
          }
        },
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 76
          }
        },
        line: 24
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 24,
            column: 45
          },
          end: {
            line: 24,
            column: 46
          }
        },
        loc: {
          start: {
            line: 24,
            column: 50
          },
          end: {
            line: 24,
            column: 75
          }
        },
        line: 24
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 10
          }
        },
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 67
          }
        },
        line: 25
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 25,
            column: 40
          }
        },
        loc: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 25,
            column: 66
          }
        },
        line: 25
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 26,
            column: 10
          },
          end: {
            line: 26,
            column: 11
          }
        },
        loc: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 26,
            column: 70
          }
        },
        line: 26
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 26,
            column: 42
          }
        },
        loc: {
          start: {
            line: 26,
            column: 46
          },
          end: {
            line: 26,
            column: 69
          }
        },
        line: 26
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 263,
            column: 30
          },
          end: {
            line: 263,
            column: 31
          }
        },
        loc: {
          start: {
            line: 263,
            column: 57
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 263
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 49
          },
          end: {
            line: 17,
            column: 51
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 31,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 31,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 264,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "3": {
        loc: {
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 270,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 270,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ced2ba7119f26fb9118fc752753bd645692a6819"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1htatde79d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1htatde79d();
/**
 * Neural Models Index
 * Exports all available neural network architectures
 */

export { NeuralModel } from './base.js';
export { TransformerModel } from './transformer.js';
export { CNNModel } from './cnn.js';
export { GRUModel } from './gru.js';
export { AutoencoderModel } from './autoencoder.js';
export { GNNModel } from './gnn.js';
export { ResNetModel } from './resnet.js';
export { VAEModel } from './vae.js';
export { LSTMModel } from './lstm.js';

// Model factory for easy instantiation
/* istanbul ignore next */
cov_1htatde79d().s[0]++;
export const createNeuralModel = (type, config =
/* istanbul ignore next */
(cov_1htatde79d().b[0][0]++, {})) => {
  /* istanbul ignore next */
  cov_1htatde79d().f[0]++;
  const models =
  /* istanbul ignore next */
  (cov_1htatde79d().s[1]++, {
    transformer: () => {
      /* istanbul ignore next */
      cov_1htatde79d().f[1]++;
      cov_1htatde79d().s[2]++;
      return import('./transformer.js').then(m => {
        /* istanbul ignore next */
        cov_1htatde79d().f[2]++;
        cov_1htatde79d().s[3]++;
        return new m.TransformerModel(config);
      });
    },
    cnn: () => {
      /* istanbul ignore next */
      cov_1htatde79d().f[3]++;
      cov_1htatde79d().s[4]++;
      return import('./cnn.js').then(m => {
        /* istanbul ignore next */
        cov_1htatde79d().f[4]++;
        cov_1htatde79d().s[5]++;
        return new m.CNNModel(config);
      });
    },
    gru: () => {
      /* istanbul ignore next */
      cov_1htatde79d().f[5]++;
      cov_1htatde79d().s[6]++;
      return import('./gru.js').then(m => {
        /* istanbul ignore next */
        cov_1htatde79d().f[6]++;
        cov_1htatde79d().s[7]++;
        return new m.GRUModel(config);
      });
    },
    autoencoder: () => {
      /* istanbul ignore next */
      cov_1htatde79d().f[7]++;
      cov_1htatde79d().s[8]++;
      return import('./autoencoder.js').then(m => {
        /* istanbul ignore next */
        cov_1htatde79d().f[8]++;
        cov_1htatde79d().s[9]++;
        return new m.AutoencoderModel(config);
      });
    },
    gnn: () => {
      /* istanbul ignore next */
      cov_1htatde79d().f[9]++;
      cov_1htatde79d().s[10]++;
      return import('./gnn.js').then(m => {
        /* istanbul ignore next */
        cov_1htatde79d().f[10]++;
        cov_1htatde79d().s[11]++;
        return new m.GNNModel(config);
      });
    },
    resnet: () => {
      /* istanbul ignore next */
      cov_1htatde79d().f[11]++;
      cov_1htatde79d().s[12]++;
      return import('./resnet.js').then(m => {
        /* istanbul ignore next */
        cov_1htatde79d().f[12]++;
        cov_1htatde79d().s[13]++;
        return new m.ResNetModel(config);
      });
    },
    vae: () => {
      /* istanbul ignore next */
      cov_1htatde79d().f[13]++;
      cov_1htatde79d().s[14]++;
      return import('./vae.js').then(m => {
        /* istanbul ignore next */
        cov_1htatde79d().f[14]++;
        cov_1htatde79d().s[15]++;
        return new m.VAEModel(config);
      });
    },
    lstm: () => {
      /* istanbul ignore next */
      cov_1htatde79d().f[15]++;
      cov_1htatde79d().s[16]++;
      return import('./lstm.js').then(m => {
        /* istanbul ignore next */
        cov_1htatde79d().f[16]++;
        cov_1htatde79d().s[17]++;
        return new m.LSTMModel(config);
      });
    }
  });
  /* istanbul ignore next */
  cov_1htatde79d().s[18]++;
  if (!models[type]) {
    /* istanbul ignore next */
    cov_1htatde79d().b[1][0]++;
    cov_1htatde79d().s[19]++;
    throw new Error(`Unknown neural model type: ${type}. Available types: ${Object.keys(models).join(', ')}`);
  } else
  /* istanbul ignore next */
  {
    cov_1htatde79d().b[1][1]++;
  }
  cov_1htatde79d().s[20]++;
  return models[type]();
};

// Model configurations presets
export const MODEL_PRESETS =
/* istanbul ignore next */
(cov_1htatde79d().s[21]++, {
  // Transformer presets
  transformer: {
    small: {
      dimensions: 256,
      heads: 4,
      layers: 3,
      ffDimensions: 1024,
      dropoutRate: 0.1
    },
    base: {
      dimensions: 512,
      heads: 8,
      layers: 6,
      ffDimensions: 2048,
      dropoutRate: 0.1
    },
    large: {
      dimensions: 1024,
      heads: 16,
      layers: 12,
      ffDimensions: 4096,
      dropoutRate: 0.1
    }
  },
  // CNN presets
  cnn: {
    mnist: {
      inputShape: [28, 28, 1],
      convLayers: [{
        filters: 32,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }, {
        filters: 64,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }],
      denseLayers: [128],
      outputSize: 10,
      dropoutRate: 0.5
    },
    cifar10: {
      inputShape: [32, 32, 3],
      convLayers: [{
        filters: 32,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }, {
        filters: 64,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }, {
        filters: 128,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }],
      denseLayers: [256, 128],
      outputSize: 10,
      dropoutRate: 0.5
    },
    imagenet: {
      inputShape: [224, 224, 3],
      convLayers: [{
        filters: 64,
        kernelSize: 7,
        stride: 2,
        padding: 'same',
        activation: 'relu'
      }, {
        filters: 128,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }, {
        filters: 256,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }, {
        filters: 512,
        kernelSize: 3,
        stride: 1,
        padding: 'same',
        activation: 'relu'
      }],
      denseLayers: [4096, 4096],
      outputSize: 1000,
      dropoutRate: 0.5
    }
  },
  // GRU presets
  gru: {
    text_classification: {
      inputSize: 300,
      // Word embedding size
      hiddenSize: 128,
      numLayers: 2,
      outputSize: 2,
      // Binary classification
      bidirectional: true,
      dropoutRate: 0.2
    },
    sequence_generation: {
      inputSize: 128,
      hiddenSize: 512,
      numLayers: 3,
      outputSize: 10000,
      // Vocabulary size
      bidirectional: false,
      dropoutRate: 0.3
    },
    time_series: {
      inputSize: 10,
      // Feature dimensions
      hiddenSize: 64,
      numLayers: 2,
      outputSize: 1,
      // Regression
      bidirectional: false,
      dropoutRate: 0.1
    }
  },
  // Autoencoder presets
  autoencoder: {
    mnist_compress: {
      inputSize: 784,
      encoderLayers: [512, 256, 128],
      bottleneckSize: 32,
      activation: 'relu',
      outputActivation: 'sigmoid',
      dropoutRate: 0.1
    },
    image_denoise: {
      inputSize: 4096,
      // 64x64 grayscale
      encoderLayers: [2048, 1024, 512],
      bottleneckSize: 256,
      activation: 'relu',
      outputActivation: 'sigmoid',
      denoisingNoise: 0.3,
      dropoutRate: 0.2
    },
    vae_generation: {
      inputSize: 784,
      encoderLayers: [512, 256],
      bottleneckSize: 20,
      activation: 'relu',
      outputActivation: 'sigmoid',
      variational: true,
      dropoutRate: 0.1
    }
  },
  // GNN presets
  gnn: {
    social_network: {
      nodeDimensions: 128,
      edgeDimensions: 64,
      hiddenDimensions: 256,
      outputDimensions: 128,
      numLayers: 3,
      aggregation: 'mean'
    },
    molecular: {
      nodeDimensions: 64,
      edgeDimensions: 32,
      hiddenDimensions: 128,
      outputDimensions: 64,
      numLayers: 4,
      aggregation: 'sum'
    },
    knowledge_graph: {
      nodeDimensions: 256,
      edgeDimensions: 128,
      hiddenDimensions: 512,
      outputDimensions: 256,
      numLayers: 2,
      aggregation: 'max'
    }
  },
  // ResNet presets
  resnet: {
    resnet18: {
      numBlocks: 4,
      blockDepth: 2,
      hiddenDimensions: 512,
      initialChannels: 64
    },
    resnet34: {
      numBlocks: 6,
      blockDepth: 3,
      hiddenDimensions: 512,
      initialChannels: 64
    },
    resnet50: {
      numBlocks: 8,
      blockDepth: 3,
      hiddenDimensions: 1024,
      initialChannels: 128
    }
  },
  // VAE presets
  vae: {
    mnist_vae: {
      inputSize: 784,
      encoderLayers: [512, 256],
      latentDimensions: 20,
      decoderLayers: [256, 512],
      betaKL: 1.0
    },
    cifar_vae: {
      inputSize: 3072,
      encoderLayers: [1024, 512, 256],
      latentDimensions: 128,
      decoderLayers: [256, 512, 1024],
      betaKL: 0.5
    },
    beta_vae: {
      inputSize: 784,
      encoderLayers: [512, 256],
      latentDimensions: 10,
      decoderLayers: [256, 512],
      betaKL: 4.0 // Higher beta for disentanglement
    }
  },
  // LSTM presets
  lstm: {
    text_generation: {
      inputSize: 128,
      hiddenSize: 512,
      numLayers: 2,
      outputSize: 10000,
      bidirectional: false,
      returnSequence: true
    },
    sentiment_analysis: {
      inputSize: 300,
      hiddenSize: 256,
      numLayers: 2,
      outputSize: 2,
      bidirectional: true,
      returnSequence: false
    },
    time_series_forecast: {
      inputSize: 10,
      hiddenSize: 128,
      numLayers: 3,
      outputSize: 1,
      bidirectional: false,
      returnSequence: false
    }
  }
});

// Utility function to get preset configuration
/* istanbul ignore next */
cov_1htatde79d().s[22]++;
export const getModelPreset = (modelType, presetName) => {
  /* istanbul ignore next */
  cov_1htatde79d().f[17]++;
  cov_1htatde79d().s[23]++;
  if (!MODEL_PRESETS[modelType]) {
    /* istanbul ignore next */
    cov_1htatde79d().b[2][0]++;
    cov_1htatde79d().s[24]++;
    throw new Error(`No presets available for model type: ${modelType}`);
  } else
  /* istanbul ignore next */
  {
    cov_1htatde79d().b[2][1]++;
  }
  cov_1htatde79d().s[25]++;
  if (!MODEL_PRESETS[modelType][presetName]) {
    /* istanbul ignore next */
    cov_1htatde79d().b[3][0]++;
    cov_1htatde79d().s[26]++;
    throw new Error(`No preset named '${presetName}' for model type: ${modelType}`);
  } else
  /* istanbul ignore next */
  {
    cov_1htatde79d().b[3][1]++;
  }
  cov_1htatde79d().s[27]++;
  return MODEL_PRESETS[modelType][presetName];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,