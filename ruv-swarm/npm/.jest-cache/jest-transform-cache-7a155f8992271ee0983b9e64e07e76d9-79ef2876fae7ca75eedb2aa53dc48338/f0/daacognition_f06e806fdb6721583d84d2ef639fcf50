dff0e653d6b5abf2c5ab4242f413d93e
/* istanbul ignore next */
function cov_16xefb6vda() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/daa-cognition.js";
  var hash = "508fe62af83d5b6b9613501ec99b692cc0abd0f7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/daa-cognition.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 37
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "3": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "5": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "6": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "7": {
        start: {
          line: 82,
          column: 21
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "8": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 48
        }
      },
      "9": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 46
        }
      },
      "10": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 108
        }
      },
      "11": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 20
        }
      },
      "12": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "13": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 50
        }
      },
      "14": {
        start: {
          line: 119,
          column: 11
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "15": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 52
        }
      },
      "16": {
        start: {
          line: 121,
          column: 11
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "17": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 122,
          column: 52
        }
      },
      "18": {
        start: {
          line: 123,
          column: 11
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "19": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 124,
          column: 46
        }
      },
      "20": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 53
        }
      },
      "21": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 141,
          column: 7
        }
      },
      "22": {
        start: {
          line: 150,
          column: 18
        },
        end: {
          line: 150,
          column: 51
        }
      },
      "23": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 28
        }
      },
      "24": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 28
        }
      },
      "25": {
        start: {
          line: 154,
          column: 28
        },
        end: {
          line: 154,
          column: 65
        }
      },
      "26": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "27": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 68
        }
      },
      "28": {
        start: {
          line: 162,
          column: 31
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "29": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 60
        }
      },
      "30": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 62
        }
      },
      "31": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 30
        }
      },
      "32": {
        start: {
          line: 186,
          column: 23
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "33": {
        start: {
          line: 193,
          column: 30
        },
        end: {
          line: 193,
          column: 77
        }
      },
      "34": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 42
        }
      },
      "35": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "36": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 198,
          column: 35
        }
      },
      "37": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 199,
          column: 87
        }
      },
      "38": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 203,
          column: 71
        }
      },
      "39": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "40": {
        start: {
          line: 205,
          column: 25
        },
        end: {
          line: 205,
          column: 71
        }
      },
      "41": {
        start: {
          line: 206,
          column: 6
        },
        end: {
          line: 206,
          column: 48
        }
      },
      "42": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 207,
          column: 94
        }
      },
      "43": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 83
        }
      },
      "44": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 22
        }
      },
      "45": {
        start: {
          line: 222,
          column: 21
        },
        end: {
          line: 222,
          column: 23
        }
      },
      "46": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "47": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 228,
          column: 7
        }
      },
      "48": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 55
        }
      },
      "49": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "50": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 235,
          column: 7
        }
      },
      "51": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 56
        }
      },
      "52": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 20
        }
      },
      "53": {
        start: {
          line: 249,
          column: 29
        },
        end: {
          line: 249,
          column: 61
        }
      },
      "54": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 253,
          column: 6
        }
      },
      "55": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 252,
          column: 60
        }
      },
      "56": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 265,
          column: 7
        }
      },
      "57": {
        start: {
          line: 264,
          column: 6
        },
        end: {
          line: 264,
          column: 53
        }
      },
      "58": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 43
        }
      },
      "59": {
        start: {
          line: 273,
          column: 32
        },
        end: {
          line: 273,
          column: 43
        }
      },
      "60": {
        start: {
          line: 275,
          column: 32
        },
        end: {
          line: 275,
          column: 85
        }
      },
      "61": {
        start: {
          line: 275,
          column: 54
        },
        end: {
          line: 275,
          column: 77
        }
      },
      "62": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 276,
          column: 50
        }
      },
      "63": {
        start: {
          line: 286,
          column: 18
        },
        end: {
          line: 286,
          column: 51
        }
      },
      "64": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 287,
          column: 28
        }
      },
      "65": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 28
        }
      },
      "66": {
        start: {
          line: 290,
          column: 21
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "67": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 300,
          column: 62
        }
      },
      "68": {
        start: {
          line: 303,
          column: 25
        },
        end: {
          line: 303,
          column: 27
        }
      },
      "69": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "70": {
        start: {
          line: 305,
          column: 6
        },
        end: {
          line: 305,
          column: 60
        }
      },
      "71": {
        start: {
          line: 309,
          column: 18
        },
        end: {
          line: 309,
          column: 49
        }
      },
      "72": {
        start: {
          line: 312,
          column: 28
        },
        end: {
          line: 312,
          column: 60
        }
      },
      "73": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 315,
          column: 73
        }
      },
      "74": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 316,
          column: 61
        }
      },
      "75": {
        start: {
          line: 319,
          column: 30
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "76": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 59
        }
      },
      "77": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 331,
          column: 29
        }
      },
      "78": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 340,
          column: 54
        }
      },
      "79": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 343,
          column: 5
        }
      },
      "80": {
        start: {
          line: 342,
          column: 6
        },
        end: {
          line: 342,
          column: 77
        }
      },
      "81": {
        start: {
          line: 346,
          column: 27
        },
        end: {
          line: 346,
          column: 77
        }
      },
      "82": {
        start: {
          line: 349,
          column: 17
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "83": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 356,
          column: 16
        }
      },
      "84": {
        start: {
          line: 365,
          column: 23
        },
        end: {
          line: 365,
          column: 24
        }
      },
      "85": {
        start: {
          line: 366,
          column: 22
        },
        end: {
          line: 366,
          column: 23
        }
      },
      "86": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 378,
          column: 5
        }
      },
      "87": {
        start: {
          line: 369,
          column: 21
        },
        end: {
          line: 369,
          column: 43
        }
      },
      "88": {
        start: {
          line: 370,
          column: 6
        },
        end: {
          line: 370,
          column: 28
        }
      },
      "89": {
        start: {
          line: 372,
          column: 6
        },
        end: {
          line: 374,
          column: 7
        }
      },
      "90": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 31
        }
      },
      "91": {
        start: {
          line: 377,
          column: 6
        },
        end: {
          line: 377,
          column: 45
        }
      },
      "92": {
        start: {
          line: 380,
          column: 27
        },
        end: {
          line: 380,
          column: 75
        }
      },
      "93": {
        start: {
          line: 381,
          column: 21
        },
        end: {
          line: 381,
          column: 41
        }
      },
      "94": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 383,
          column: 66
        }
      },
      "95": {
        start: {
          line: 392,
          column: 18
        },
        end: {
          line: 392,
          column: 51
        }
      },
      "96": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 393,
          column: 23
        }
      },
      "97": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 393,
          column: 23
        }
      },
      "98": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 400,
          column: 7
        }
      },
      "99": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 409,
          column: 5
        }
      },
      "100": {
        start: {
          line: 404,
          column: 6
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "101": {
        start: {
          line: 418,
          column: 22
        },
        end: {
          line: 418,
          column: 54
        }
      },
      "102": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 419,
          column: 27
        }
      },
      "103": {
        start: {
          line: 419,
          column: 20
        },
        end: {
          line: 419,
          column: 27
        }
      },
      "104": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 432,
          column: 5
        }
      },
      "105": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 52
        }
      },
      "106": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 14
        }
      },
      "107": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 52
        }
      },
      "108": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 14
        }
      },
      "109": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 54
        }
      },
      "110": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 14
        }
      },
      "111": {
        start: {
          line: 441,
          column: 18
        },
        end: {
          line: 441,
          column: 51
        }
      },
      "112": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 442,
          column: 23
        }
      },
      "113": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 442,
          column: 23
        }
      },
      "114": {
        start: {
          line: 445,
          column: 25
        },
        end: {
          line: 449,
          column: 5
        }
      },
      "115": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 454,
          column: 6
        }
      },
      "116": {
        start: {
          line: 463,
          column: 18
        },
        end: {
          line: 463,
          column: 51
        }
      },
      "117": {
        start: {
          line: 464,
          column: 4
        },
        end: {
          line: 464,
          column: 28
        }
      },
      "118": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 464,
          column: 28
        }
      },
      "119": {
        start: {
          line: 467,
          column: 26
        },
        end: {
          line: 467,
          column: 78
        }
      },
      "120": {
        start: {
          line: 470,
          column: 27
        },
        end: {
          line: 470,
          column: 75
        }
      },
      "121": {
        start: {
          line: 473,
          column: 31
        },
        end: {
          line: 473,
          column: 88
        }
      },
      "122": {
        start: {
          line: 476,
          column: 4
        },
        end: {
          line: 476,
          column: 57
        }
      },
      "123": {
        start: {
          line: 478,
          column: 4
        },
        end: {
          line: 483,
          column: 6
        }
      },
      "124": {
        start: {
          line: 492,
          column: 21
        },
        end: {
          line: 496,
          column: 5
        }
      },
      "125": {
        start: {
          line: 499,
          column: 4
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "126": {
        start: {
          line: 500,
          column: 23
        },
        end: {
          line: 500,
          column: 65
        }
      },
      "127": {
        start: {
          line: 501,
          column: 6
        },
        end: {
          line: 501,
          column: 35
        }
      },
      "128": {
        start: {
          line: 502,
          column: 6
        },
        end: {
          line: 502,
          column: 60
        }
      },
      "129": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 508,
          column: 5
        }
      },
      "130": {
        start: {
          line: 507,
          column: 6
        },
        end: {
          line: 507,
          column: 67
        }
      },
      "131": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 513,
          column: 7
        }
      },
      "132": {
        start: {
          line: 512,
          column: 6
        },
        end: {
          line: 512,
          column: 69
        }
      },
      "133": {
        start: {
          line: 515,
          column: 4
        },
        end: {
          line: 515,
          column: 20
        }
      },
      "134": {
        start: {
          line: 523,
          column: 21
        },
        end: {
          line: 523,
          column: 23
        }
      },
      "135": {
        start: {
          line: 526,
          column: 4
        },
        end: {
          line: 532,
          column: 5
        }
      },
      "136": {
        start: {
          line: 527,
          column: 6
        },
        end: {
          line: 531,
          column: 9
        }
      },
      "137": {
        start: {
          line: 535,
          column: 25
        },
        end: {
          line: 537,
          column: 5
        }
      },
      "138": {
        start: {
          line: 536,
          column: 6
        },
        end: {
          line: 536,
          column: 64
        }
      },
      "139": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 545,
          column: 5
        }
      },
      "140": {
        start: {
          line: 540,
          column: 6
        },
        end: {
          line: 544,
          column: 9
        }
      },
      "141": {
        start: {
          line: 547,
          column: 4
        },
        end: {
          line: 547,
          column: 20
        }
      },
      "142": {
        start: {
          line: 557,
          column: 4
        },
        end: {
          line: 559,
          column: 5
        }
      },
      "143": {
        start: {
          line: 558,
          column: 6
        },
        end: {
          line: 558,
          column: 43
        }
      },
      "144": {
        start: {
          line: 560,
          column: 4
        },
        end: {
          line: 560,
          column: 17
        }
      },
      "145": {
        start: {
          line: 568,
          column: 21
        },
        end: {
          line: 568,
          column: 23
        }
      },
      "146": {
        start: {
          line: 571,
          column: 26
        },
        end: {
          line: 571,
          column: 69
        }
      },
      "147": {
        start: {
          line: 571,
          column: 45
        },
        end: {
          line: 571,
          column: 68
        }
      },
      "148": {
        start: {
          line: 572,
          column: 25
        },
        end: {
          line: 572,
          column: 67
        }
      },
      "149": {
        start: {
          line: 572,
          column: 44
        },
        end: {
          line: 572,
          column: 66
        }
      },
      "150": {
        start: {
          line: 574,
          column: 4
        },
        end: {
          line: 580,
          column: 5
        }
      },
      "151": {
        start: {
          line: 575,
          column: 6
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "152": {
        start: {
          line: 582,
          column: 4
        },
        end: {
          line: 582,
          column: 20
        }
      },
      "153": {
        start: {
          line: 591,
          column: 18
        },
        end: {
          line: 591,
          column: 51
        }
      },
      "154": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 592,
          column: 26
        }
      },
      "155": {
        start: {
          line: 592,
          column: 16
        },
        end: {
          line: 592,
          column: 26
        }
      },
      "156": {
        start: {
          line: 594,
          column: 27
        },
        end: {
          line: 594,
          column: 29
        }
      },
      "157": {
        start: {
          line: 597,
          column: 4
        },
        end: {
          line: 600,
          column: 5
        }
      },
      "158": {
        start: {
          line: 598,
          column: 26
        },
        end: {
          line: 598,
          column: 82
        }
      },
      "159": {
        start: {
          line: 599,
          column: 6
        },
        end: {
          line: 599,
          column: 39
        }
      },
      "160": {
        start: {
          line: 602,
          column: 4
        },
        end: {
          line: 602,
          column: 26
        }
      },
      "161": {
        start: {
          line: 612,
          column: 4
        },
        end: {
          line: 621,
          column: 7
        }
      },
      "162": {
        start: {
          line: 623,
          column: 4
        },
        end: {
          line: 627,
          column: 6
        }
      },
      "163": {
        start: {
          line: 636,
          column: 18
        },
        end: {
          line: 636,
          column: 51
        }
      },
      "164": {
        start: {
          line: 637,
          column: 4
        },
        end: {
          line: 637,
          column: 23
        }
      },
      "165": {
        start: {
          line: 637,
          column: 16
        },
        end: {
          line: 637,
          column: 23
        }
      },
      "166": {
        start: {
          line: 640,
          column: 28
        },
        end: {
          line: 644,
          column: 5
        }
      },
      "167": {
        start: {
          line: 646,
          column: 4
        },
        end: {
          line: 649,
          column: 6
        }
      },
      "168": {
        start: {
          line: 652,
          column: 4
        },
        end: {
          line: 652,
          column: 43
        }
      },
      "169": {
        start: {
          line: 661,
          column: 18
        },
        end: {
          line: 661,
          column: 51
        }
      },
      "170": {
        start: {
          line: 662,
          column: 4
        },
        end: {
          line: 662,
          column: 28
        }
      },
      "171": {
        start: {
          line: 662,
          column: 16
        },
        end: {
          line: 662,
          column: 28
        }
      },
      "172": {
        start: {
          line: 664,
          column: 23
        },
        end: {
          line: 668,
          column: 5
        }
      },
      "173": {
        start: {
          line: 671,
          column: 4
        },
        end: {
          line: 688,
          column: 5
        }
      },
      "174": {
        start: {
          line: 672,
          column: 6
        },
        end: {
          line: 683,
          column: 7
        }
      },
      "175": {
        start: {
          line: 673,
          column: 8
        },
        end: {
          line: 682,
          column: 11
        }
      },
      "176": {
        start: {
          line: 674,
          column: 29
        },
        end: {
          line: 674,
          column: 69
        }
      },
      "177": {
        start: {
          line: 675,
          column: 10
        },
        end: {
          line: 680,
          column: 11
        }
      },
      "178": {
        start: {
          line: 676,
          column: 12
        },
        end: {
          line: 679,
          column: 15
        }
      },
      "179": {
        start: {
          line: 681,
          column: 10
        },
        end: {
          line: 681,
          column: 77
        }
      },
      "180": {
        start: {
          line: 685,
          column: 6
        },
        end: {
          line: 687,
          column: 7
        }
      },
      "181": {
        start: {
          line: 686,
          column: 8
        },
        end: {
          line: 686,
          column: 56
        }
      },
      "182": {
        start: {
          line: 691,
          column: 23
        },
        end: {
          line: 691,
          column: 49
        }
      },
      "183": {
        start: {
          line: 692,
          column: 4
        },
        end: {
          line: 696,
          column: 5
        }
      },
      "184": {
        start: {
          line: 693,
          column: 6
        },
        end: {
          line: 695,
          column: 9
        }
      },
      "185": {
        start: {
          line: 694,
          column: 8
        },
        end: {
          line: 694,
          column: 69
        }
      },
      "186": {
        start: {
          line: 698,
          column: 4
        },
        end: {
          line: 698,
          column: 22
        }
      },
      "187": {
        start: {
          line: 707,
          column: 4
        },
        end: {
          line: 707,
          column: 36
        }
      },
      "188": {
        start: {
          line: 707,
          column: 29
        },
        end: {
          line: 707,
          column: 36
        }
      },
      "189": {
        start: {
          line: 710,
          column: 4
        },
        end: {
          line: 714,
          column: 7
        }
      },
      "190": {
        start: {
          line: 711,
          column: 6
        },
        end: {
          line: 713,
          column: 7
        }
      },
      "191": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 712,
          column: 59
        }
      },
      "192": {
        start: {
          line: 717,
          column: 27
        },
        end: {
          line: 717,
          column: 80
        }
      },
      "193": {
        start: {
          line: 718,
          column: 4
        },
        end: {
          line: 720,
          column: 7
        }
      },
      "194": {
        start: {
          line: 719,
          column: 6
        },
        end: {
          line: 719,
          column: 69
        }
      },
      "195": {
        start: {
          line: 728,
          column: 17
        },
        end: {
          line: 728,
          column: 26
        }
      },
      "196": {
        start: {
          line: 729,
          column: 4
        },
        end: {
          line: 734,
          column: 7
        }
      },
      "197": {
        start: {
          line: 730,
          column: 18
        },
        end: {
          line: 730,
          column: 58
        }
      },
      "198": {
        start: {
          line: 731,
          column: 6
        },
        end: {
          line: 731,
          column: 38
        }
      },
      "199": {
        start: {
          line: 731,
          column: 25
        },
        end: {
          line: 731,
          column: 38
        }
      },
      "200": {
        start: {
          line: 732,
          column: 6
        },
        end: {
          line: 732,
          column: 20
        }
      },
      "201": {
        start: {
          line: 733,
          column: 6
        },
        end: {
          line: 733,
          column: 18
        }
      },
      "202": {
        start: {
          line: 742,
          column: 22
        },
        end: {
          line: 742,
          column: 44
        }
      },
      "203": {
        start: {
          line: 743,
          column: 23
        },
        end: {
          line: 743,
          column: 63
        }
      },
      "204": {
        start: {
          line: 745,
          column: 4
        },
        end: {
          line: 750,
          column: 6
        }
      },
      "205": {
        start: {
          line: 758,
          column: 18
        },
        end: {
          line: 758,
          column: 51
        }
      },
      "206": {
        start: {
          line: 759,
          column: 4
        },
        end: {
          line: 759,
          column: 23
        }
      },
      "207": {
        start: {
          line: 759,
          column: 16
        },
        end: {
          line: 759,
          column: 23
        }
      },
      "208": {
        start: {
          line: 762,
          column: 31
        },
        end: {
          line: 762,
          column: 63
        }
      },
      "209": {
        start: {
          line: 765,
          column: 4
        },
        end: {
          line: 780,
          column: 7
        }
      },
      "210": {
        start: {
          line: 766,
          column: 6
        },
        end: {
          line: 779,
          column: 7
        }
      },
      "211": {
        start: {
          line: 767,
          column: 33
        },
        end: {
          line: 773,
          column: 9
        }
      },
      "212": {
        start: {
          line: 775,
          column: 8
        },
        end: {
          line: 775,
          column: 56
        }
      },
      "213": {
        start: {
          line: 778,
          column: 8
        },
        end: {
          line: 778,
          column: 63
        }
      },
      "214": {
        start: {
          line: 787,
          column: 26
        },
        end: {
          line: 787,
          column: 35
        }
      },
      "215": {
        start: {
          line: 788,
          column: 26
        },
        end: {
          line: 788,
          column: 35
        }
      },
      "216": {
        start: {
          line: 791,
          column: 4
        },
        end: {
          line: 805,
          column: 5
        }
      },
      "217": {
        start: {
          line: 792,
          column: 6
        },
        end: {
          line: 804,
          column: 7
        }
      },
      "218": {
        start: {
          line: 793,
          column: 8
        },
        end: {
          line: 803,
          column: 9
        }
      },
      "219": {
        start: {
          line: 794,
          column: 30
        },
        end: {
          line: 794,
          column: 53
        }
      },
      "220": {
        start: {
          line: 796,
          column: 10
        },
        end: {
          line: 799,
          column: 11
        }
      },
      "221": {
        start: {
          line: 797,
          column: 12
        },
        end: {
          line: 797,
          column: 46
        }
      },
      "222": {
        start: {
          line: 798,
          column: 12
        },
        end: {
          line: 798,
          column: 54
        }
      },
      "223": {
        start: {
          line: 801,
          column: 10
        },
        end: {
          line: 801,
          column: 77
        }
      },
      "224": {
        start: {
          line: 802,
          column: 10
        },
        end: {
          line: 802,
          column: 54
        }
      },
      "225": {
        start: {
          line: 808,
          column: 24
        },
        end: {
          line: 808,
          column: 49
        }
      },
      "226": {
        start: {
          line: 809,
          column: 21
        },
        end: {
          line: 809,
          column: 23
        }
      },
      "227": {
        start: {
          line: 811,
          column: 4
        },
        end: {
          line: 819,
          column: 5
        }
      },
      "228": {
        start: {
          line: 812,
          column: 23
        },
        end: {
          line: 812,
          column: 53
        }
      },
      "229": {
        start: {
          line: 813,
          column: 6
        },
        end: {
          line: 818,
          column: 9
        }
      },
      "230": {
        start: {
          line: 821,
          column: 4
        },
        end: {
          line: 821,
          column: 20
        }
      },
      "231": {
        start: {
          line: 830,
          column: 18
        },
        end: {
          line: 830,
          column: 51
        }
      },
      "232": {
        start: {
          line: 831,
          column: 4
        },
        end: {
          line: 831,
          column: 23
        }
      },
      "233": {
        start: {
          line: 831,
          column: 16
        },
        end: {
          line: 831,
          column: 23
        }
      },
      "234": {
        start: {
          line: 834,
          column: 4
        },
        end: {
          line: 836,
          column: 5
        }
      },
      "235": {
        start: {
          line: 835,
          column: 6
        },
        end: {
          line: 835,
          column: 60
        }
      },
      "236": {
        start: {
          line: 837,
          column: 4
        },
        end: {
          line: 840,
          column: 7
        }
      },
      "237": {
        start: {
          line: 843,
          column: 4
        },
        end: {
          line: 849,
          column: 5
        }
      },
      "238": {
        start: {
          line: 844,
          column: 6
        },
        end: {
          line: 848,
          column: 9
        }
      },
      "239": {
        start: {
          line: 858,
          column: 18
        },
        end: {
          line: 858,
          column: 51
        }
      },
      "240": {
        start: {
          line: 859,
          column: 4
        },
        end: {
          line: 859,
          column: 23
        }
      },
      "241": {
        start: {
          line: 859,
          column: 16
        },
        end: {
          line: 859,
          column: 23
        }
      },
      "242": {
        start: {
          line: 862,
          column: 4
        },
        end: {
          line: 862,
          column: 52
        }
      },
      "243": {
        start: {
          line: 865,
          column: 4
        },
        end: {
          line: 871,
          column: 6
        }
      },
      "244": {
        start: {
          line: 878,
          column: 18
        },
        end: {
          line: 885,
          column: 5
        }
      },
      "245": {
        start: {
          line: 888,
          column: 4
        },
        end: {
          line: 904,
          column: 5
        }
      },
      "246": {
        start: {
          line: 890,
          column: 20
        },
        end: {
          line: 890,
          column: 61
        }
      },
      "247": {
        start: {
          line: 891,
          column: 6
        },
        end: {
          line: 891,
          column: 75
        }
      },
      "248": {
        start: {
          line: 894,
          column: 6
        },
        end: {
          line: 894,
          column: 102
        }
      },
      "249": {
        start: {
          line: 897,
          column: 6
        },
        end: {
          line: 903,
          column: 9
        }
      },
      "250": {
        start: {
          line: 898,
          column: 8
        },
        end: {
          line: 902,
          column: 9
        }
      },
      "251": {
        start: {
          line: 899,
          column: 10
        },
        end: {
          line: 899,
          column: 38
        }
      },
      "252": {
        start: {
          line: 901,
          column: 10
        },
        end: {
          line: 901,
          column: 37
        }
      },
      "253": {
        start: {
          line: 907,
          column: 4
        },
        end: {
          line: 908,
          column: 57
        }
      },
      "254": {
        start: {
          line: 910,
          column: 4
        },
        end: {
          line: 911,
          column: 93
        }
      },
      "255": {
        start: {
          line: 913,
          column: 4
        },
        end: {
          line: 913,
          column: 17
        }
      },
      "256": {
        start: {
          line: 922,
          column: 19
        },
        end: {
          line: 922,
          column: 53
        }
      },
      "257": {
        start: {
          line: 923,
          column: 19
        },
        end: {
          line: 923,
          column: 53
        }
      },
      "258": {
        start: {
          line: 925,
          column: 4
        },
        end: {
          line: 930,
          column: 5
        }
      },
      "259": {
        start: {
          line: 926,
          column: 6
        },
        end: {
          line: 926,
          column: 43
        }
      },
      "260": {
        start: {
          line: 927,
          column: 6
        },
        end: {
          line: 927,
          column: 43
        }
      },
      "261": {
        start: {
          line: 929,
          column: 6
        },
        end: {
          line: 929,
          column: 70
        }
      },
      "262": {
        start: {
          line: 939,
          column: 4
        },
        end: {
          line: 943,
          column: 5
        }
      },
      "263": {
        start: {
          line: 939,
          column: 17
        },
        end: {
          line: 939,
          column: 18
        }
      },
      "264": {
        start: {
          line: 940,
          column: 6
        },
        end: {
          line: 942,
          column: 7
        }
      },
      "265": {
        start: {
          line: 940,
          column: 19
        },
        end: {
          line: 940,
          column: 24
        }
      },
      "266": {
        start: {
          line: 941,
          column: 8
        },
        end: {
          line: 941,
          column: 53
        }
      },
      "267": {
        start: {
          line: 945,
          column: 4
        },
        end: {
          line: 945,
          column: 71
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        },
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 81,
            column: 3
          }
        },
        loc: {
          start: {
            line: 81,
            column: 44
          },
          end: {
            line: 109,
            column: 3
          }
        },
        line: 81
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 115,
            column: 2
          },
          end: {
            line: 115,
            column: 3
          }
        },
        loc: {
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 128,
            column: 3
          }
        },
        line: 115
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 134,
            column: 3
          }
        },
        loc: {
          start: {
            line: 134,
            column: 39
          },
          end: {
            line: 142,
            column: 3
          }
        },
        line: 134
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 149,
            column: 2
          },
          end: {
            line: 149,
            column: 3
          }
        },
        loc: {
          start: {
            line: 149,
            column: 50
          },
          end: {
            line: 178,
            column: 3
          }
        },
        line: 149
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 185,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        loc: {
          start: {
            line: 185,
            column: 35
          },
          end: {
            line: 214,
            column: 3
          }
        },
        line: 185
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 221,
            column: 2
          },
          end: {
            line: 221,
            column: 3
          }
        },
        loc: {
          start: {
            line: 221,
            column: 45
          },
          end: {
            line: 239,
            column: 3
          }
        },
        line: 221
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 247,
            column: 2
          },
          end: {
            line: 247,
            column: 3
          }
        },
        loc: {
          start: {
            line: 247,
            column: 45
          },
          end: {
            line: 254,
            column: 3
          }
        },
        line: 247
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 250,
            column: 33
          },
          end: {
            line: 250,
            column: 34
          }
        },
        loc: {
          start: {
            line: 251,
            column: 6
          },
          end: {
            line: 252,
            column: 60
          }
        },
        line: 251
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 261,
            column: 2
          },
          end: {
            line: 261,
            column: 3
          }
        },
        loc: {
          start: {
            line: 261,
            column: 40
          },
          end: {
            line: 266,
            column: 3
          }
        },
        line: 261
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 262,
            column: 49
          },
          end: {
            line: 262,
            column: 50
          }
        },
        loc: {
          start: {
            line: 262,
            column: 65
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 262
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 272,
            column: 2
          },
          end: {
            line: 272,
            column: 3
          }
        },
        loc: {
          start: {
            line: 272,
            column: 37
          },
          end: {
            line: 277,
            column: 3
          }
        },
        line: 272
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 275,
            column: 49
          },
          end: {
            line: 275,
            column: 50
          }
        },
        loc: {
          start: {
            line: 275,
            column: 54
          },
          end: {
            line: 275,
            column: 77
          }
        },
        line: 275
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 285,
            column: 2
          },
          end: {
            line: 285,
            column: 3
          }
        },
        loc: {
          start: {
            line: 285,
            column: 58
          },
          end: {
            line: 332,
            column: 3
          }
        },
        line: 285
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 339,
            column: 2
          },
          end: {
            line: 339,
            column: 3
          }
        },
        loc: {
          start: {
            line: 339,
            column: 38
          },
          end: {
            line: 357,
            column: 3
          }
        },
        line: 339
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 364,
            column: 2
          },
          end: {
            line: 364,
            column: 3
          }
        },
        loc: {
          start: {
            line: 364,
            column: 30
          },
          end: {
            line: 384,
            column: 3
          }
        },
        line: 364
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 391,
            column: 2
          },
          end: {
            line: 391,
            column: 3
          }
        },
        loc: {
          start: {
            line: 391,
            column: 45
          },
          end: {
            line: 410,
            column: 3
          }
        },
        line: 391
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 417,
            column: 2
          },
          end: {
            line: 417,
            column: 3
          }
        },
        loc: {
          start: {
            line: 417,
            column: 36
          },
          end: {
            line: 433,
            column: 3
          }
        },
        line: 417
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 440,
            column: 2
          },
          end: {
            line: 440,
            column: 3
          }
        },
        loc: {
          start: {
            line: 440,
            column: 42
          },
          end: {
            line: 455,
            column: 3
          }
        },
        line: 440
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 462,
            column: 2
          },
          end: {
            line: 462,
            column: 3
          }
        },
        loc: {
          start: {
            line: 462,
            column: 58
          },
          end: {
            line: 484,
            column: 3
          }
        },
        line: 462
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 491,
            column: 2
          },
          end: {
            line: 491,
            column: 3
          }
        },
        loc: {
          start: {
            line: 491,
            column: 50
          },
          end: {
            line: 516,
            column: 3
          }
        },
        line: 491
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 511,
            column: 30
          },
          end: {
            line: 511,
            column: 31
          }
        },
        loc: {
          start: {
            line: 511,
            column: 48
          },
          end: {
            line: 513,
            column: 5
          }
        },
        line: 511
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 522,
            column: 2
          },
          end: {
            line: 522,
            column: 3
          }
        },
        loc: {
          start: {
            line: 522,
            column: 27
          },
          end: {
            line: 548,
            column: 3
          }
        },
        line: 522
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 535,
            column: 39
          },
          end: {
            line: 535,
            column: 40
          }
        },
        loc: {
          start: {
            line: 536,
            column: 6
          },
          end: {
            line: 536,
            column: 64
          }
        },
        line: 536
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 555,
            column: 2
          },
          end: {
            line: 555,
            column: 3
          }
        },
        loc: {
          start: {
            line: 555,
            column: 34
          },
          end: {
            line: 561,
            column: 3
          }
        },
        line: 555
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 567,
            column: 2
          },
          end: {
            line: 567,
            column: 3
          }
        },
        loc: {
          start: {
            line: 567,
            column: 29
          },
          end: {
            line: 583,
            column: 3
          }
        },
        line: 567
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 571,
            column: 40
          },
          end: {
            line: 571,
            column: 41
          }
        },
        loc: {
          start: {
            line: 571,
            column: 45
          },
          end: {
            line: 571,
            column: 68
          }
        },
        line: 571
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 572,
            column: 39
          },
          end: {
            line: 572,
            column: 40
          }
        },
        loc: {
          start: {
            line: 572,
            column: 44
          },
          end: {
            line: 572,
            column: 66
          }
        },
        line: 572
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 590,
            column: 2
          },
          end: {
            line: 590,
            column: 3
          }
        },
        loc: {
          start: {
            line: 590,
            column: 46
          },
          end: {
            line: 603,
            column: 3
          }
        },
        line: 590
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 611,
            column: 2
          },
          end: {
            line: 611,
            column: 3
          }
        },
        loc: {
          start: {
            line: 611,
            column: 49
          },
          end: {
            line: 628,
            column: 3
          }
        },
        line: 611
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 635,
            column: 2
          },
          end: {
            line: 635,
            column: 3
          }
        },
        loc: {
          start: {
            line: 635,
            column: 42
          },
          end: {
            line: 653,
            column: 3
          }
        },
        line: 635
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 660,
            column: 2
          },
          end: {
            line: 660,
            column: 3
          }
        },
        loc: {
          start: {
            line: 660,
            column: 55
          },
          end: {
            line: 699,
            column: 3
          }
        },
        line: 660
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 673,
            column: 35
          },
          end: {
            line: 673,
            column: 36
          }
        },
        loc: {
          start: {
            line: 673,
            column: 46
          },
          end: {
            line: 682,
            column: 9
          }
        },
        line: 673
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 693,
            column: 34
          },
          end: {
            line: 693,
            column: 35
          }
        },
        loc: {
          start: {
            line: 693,
            column: 45
          },
          end: {
            line: 695,
            column: 7
          }
        },
        line: 693
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 706,
            column: 2
          },
          end: {
            line: 706,
            column: 3
          }
        },
        loc: {
          start: {
            line: 706,
            column: 50
          },
          end: {
            line: 721,
            column: 3
          }
        },
        line: 706
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 710,
            column: 40
          },
          end: {
            line: 710,
            column: 41
          }
        },
        loc: {
          start: {
            line: 710,
            column: 58
          },
          end: {
            line: 714,
            column: 5
          }
        },
        line: 710
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 718,
            column: 27
          },
          end: {
            line: 718,
            column: 28
          }
        },
        loc: {
          start: {
            line: 718,
            column: 45
          },
          end: {
            line: 720,
            column: 5
          }
        },
        line: 718
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 727,
            column: 2
          },
          end: {
            line: 727,
            column: 3
          }
        },
        loc: {
          start: {
            line: 727,
            column: 32
          },
          end: {
            line: 735,
            column: 3
          }
        },
        line: 727
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 729,
            column: 27
          },
          end: {
            line: 729,
            column: 28
          }
        },
        loc: {
          start: {
            line: 729,
            column: 38
          },
          end: {
            line: 734,
            column: 5
          }
        },
        line: 729
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 741,
            column: 2
          },
          end: {
            line: 741,
            column: 3
          }
        },
        loc: {
          start: {
            line: 741,
            column: 34
          },
          end: {
            line: 751,
            column: 3
          }
        },
        line: 741
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 757,
            column: 2
          },
          end: {
            line: 757,
            column: 3
          }
        },
        loc: {
          start: {
            line: 757,
            column: 36
          },
          end: {
            line: 781,
            column: 3
          }
        },
        line: 757
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 765,
            column: 31
          },
          end: {
            line: 765,
            column: 32
          }
        },
        loc: {
          start: {
            line: 765,
            column: 42
          },
          end: {
            line: 780,
            column: 5
          }
        },
        line: 765
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 786,
            column: 2
          },
          end: {
            line: 786,
            column: 3
          }
        },
        loc: {
          start: {
            line: 786,
            column: 30
          },
          end: {
            line: 822,
            column: 3
          }
        },
        line: 786
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 829,
            column: 2
          },
          end: {
            line: 829,
            column: 3
          }
        },
        loc: {
          start: {
            line: 829,
            column: 52
          },
          end: {
            line: 850,
            column: 3
          }
        },
        line: 829
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 857,
            column: 2
          },
          end: {
            line: 857,
            column: 3
          }
        },
        loc: {
          start: {
            line: 857,
            column: 44
          },
          end: {
            line: 872,
            column: 3
          }
        },
        line: 857
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 877,
            column: 2
          },
          end: {
            line: 877,
            column: 3
          }
        },
        loc: {
          start: {
            line: 877,
            column: 18
          },
          end: {
            line: 914,
            column: 3
          }
        },
        line: 877
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 897,
            column: 45
          },
          end: {
            line: 897,
            column: 46
          }
        },
        loc: {
          start: {
            line: 897,
            column: 57
          },
          end: {
            line: 903,
            column: 7
          }
        },
        line: 897
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 921,
            column: 2
          },
          end: {
            line: 921,
            column: 3
          }
        },
        loc: {
          start: {
            line: 921,
            column: 36
          },
          end: {
            line: 931,
            column: 3
          }
        },
        line: 921
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 937,
            column: 2
          },
          end: {
            line: 937,
            column: 3
          }
        },
        loc: {
          start: {
            line: 937,
            column: 30
          },
          end: {
            line: 946,
            column: 3
          }
        },
        line: 937
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 41
          }
        }, {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 84,
            column: 48
          }
        }],
        line: 84
      },
      "1": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: 119,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        }],
        line: 117
      },
      "2": {
        loc: {
          start: {
            line: 119,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: 121,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        }],
        line: 119
      },
      "3": {
        loc: {
          start: {
            line: 121,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: 123,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        }],
        line: 121
      },
      "4": {
        loc: {
          start: {
            line: 123,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: 125,
            column: 11
          },
          end: {
            line: 127,
            column: 5
          }
        }],
        line: 123
      },
      "5": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "6": {
        loc: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "7": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "8": {
        loc: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "9": {
        loc: {
          start: {
            line: 211,
            column: 32
          },
          end: {
            line: 211,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 62
          },
          end: {
            line: 211,
            column: 71
          }
        }, {
          start: {
            line: 211,
            column: 74
          },
          end: {
            line: 211,
            column: 82
          }
        }],
        line: 211
      },
      "10": {
        loc: {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 228,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 228,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "11": {
        loc: {
          start: {
            line: 233,
            column: 6
          },
          end: {
            line: 235,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 6
          },
          end: {
            line: 235,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "12": {
        loc: {
          start: {
            line: 249,
            column: 29
          },
          end: {
            line: 249,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 29
          },
          end: {
            line: 249,
            column: 55
          }
        }, {
          start: {
            line: 249,
            column: 59
          },
          end: {
            line: 249,
            column: 61
          }
        }],
        line: 249
      },
      "13": {
        loc: {
          start: {
            line: 251,
            column: 6
          },
          end: {
            line: 252,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 6
          },
          end: {
            line: 251,
            column: 27
          }
        }, {
          start: {
            line: 252,
            column: 7
          },
          end: {
            line: 252,
            column: 32
          }
        }, {
          start: {
            line: 252,
            column: 36
          },
          end: {
            line: 252,
            column: 59
          }
        }],
        line: 251
      },
      "14": {
        loc: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "15": {
        loc: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "16": {
        loc: {
          start: {
            line: 315,
            column: 22
          },
          end: {
            line: 315,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 315,
            column: 49
          },
          end: {
            line: 315,
            column: 59
          }
        }, {
          start: {
            line: 315,
            column: 62
          },
          end: {
            line: 315,
            column: 72
          }
        }],
        line: 315
      },
      "17": {
        loc: {
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 321,
            column: 43
          },
          end: {
            line: 321,
            column: 52
          }
        }, {
          start: {
            line: 321,
            column: 55
          },
          end: {
            line: 321,
            column: 63
          }
        }],
        line: 321
      },
      "18": {
        loc: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "19": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 351,
            column: 46
          },
          end: {
            line: 351,
            column: 55
          }
        }, {
          start: {
            line: 351,
            column: 58
          },
          end: {
            line: 351,
            column: 66
          }
        }],
        line: 351
      },
      "20": {
        loc: {
          start: {
            line: 353,
            column: 14
          },
          end: {
            line: 353,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 14
          },
          end: {
            line: 353,
            column: 41
          }
        }, {
          start: {
            line: 353,
            column: 45
          },
          end: {
            line: 353,
            column: 65
          }
        }],
        line: 353
      },
      "21": {
        loc: {
          start: {
            line: 369,
            column: 21
          },
          end: {
            line: 369,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 21
          },
          end: {
            line: 369,
            column: 36
          }
        }, {
          start: {
            line: 369,
            column: 40
          },
          end: {
            line: 369,
            column: 43
          }
        }],
        line: 369
      },
      "22": {
        loc: {
          start: {
            line: 372,
            column: 6
          },
          end: {
            line: 374,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 6
          },
          end: {
            line: 374,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "23": {
        loc: {
          start: {
            line: 380,
            column: 27
          },
          end: {
            line: 380,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 380,
            column: 45
          },
          end: {
            line: 380,
            column: 71
          }
        }, {
          start: {
            line: 380,
            column: 74
          },
          end: {
            line: 380,
            column: 75
          }
        }],
        line: 380
      },
      "24": {
        loc: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "25": {
        loc: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "26": {
        loc: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 432,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 423,
            column: 6
          },
          end: {
            line: 425,
            column: 14
          }
        }, {
          start: {
            line: 426,
            column: 6
          },
          end: {
            line: 428,
            column: 14
          }
        }, {
          start: {
            line: 429,
            column: 6
          },
          end: {
            line: 431,
            column: 14
          }
        }],
        line: 422
      },
      "27": {
        loc: {
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 442,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 442,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "28": {
        loc: {
          start: {
            line: 464,
            column: 4
          },
          end: {
            line: 464,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 464,
            column: 4
          },
          end: {
            line: 464,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 464
      },
      "29": {
        loc: {
          start: {
            line: 499,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 499,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 499
      },
      "30": {
        loc: {
          start: {
            line: 502,
            column: 28
          },
          end: {
            line: 502,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 502,
            column: 50
          },
          end: {
            line: 502,
            column: 53
          }
        }, {
          start: {
            line: 502,
            column: 56
          },
          end: {
            line: 502,
            column: 59
          }
        }],
        line: 502
      },
      "31": {
        loc: {
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "32": {
        loc: {
          start: {
            line: 526,
            column: 4
          },
          end: {
            line: 532,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 526,
            column: 4
          },
          end: {
            line: 532,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 526
      },
      "33": {
        loc: {
          start: {
            line: 536,
            column: 6
          },
          end: {
            line: 536,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 536,
            column: 6
          },
          end: {
            line: 536,
            column: 15
          }
        }, {
          start: {
            line: 536,
            column: 19
          },
          end: {
            line: 536,
            column: 64
          }
        }],
        line: 536
      },
      "34": {
        loc: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 545,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 545,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "35": {
        loc: {
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 557
      },
      "36": {
        loc: {
          start: {
            line: 557,
            column: 8
          },
          end: {
            line: 557,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 557,
            column: 8
          },
          end: {
            line: 557,
            column: 32
          }
        }, {
          start: {
            line: 557,
            column: 36
          },
          end: {
            line: 557,
            column: 63
          }
        }],
        line: 557
      },
      "37": {
        loc: {
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 580,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 580,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "38": {
        loc: {
          start: {
            line: 574,
            column: 8
          },
          end: {
            line: 574,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 574,
            column: 8
          },
          end: {
            line: 574,
            column: 21
          }
        }, {
          start: {
            line: 574,
            column: 25
          },
          end: {
            line: 574,
            column: 37
          }
        }],
        line: 574
      },
      "39": {
        loc: {
          start: {
            line: 592,
            column: 4
          },
          end: {
            line: 592,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 592,
            column: 4
          },
          end: {
            line: 592,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 592
      },
      "40": {
        loc: {
          start: {
            line: 637,
            column: 4
          },
          end: {
            line: 637,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 637,
            column: 4
          },
          end: {
            line: 637,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 637
      },
      "41": {
        loc: {
          start: {
            line: 662,
            column: 4
          },
          end: {
            line: 662,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 662,
            column: 4
          },
          end: {
            line: 662,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 662
      },
      "42": {
        loc: {
          start: {
            line: 672,
            column: 6
          },
          end: {
            line: 683,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 672,
            column: 6
          },
          end: {
            line: 683,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 672
      },
      "43": {
        loc: {
          start: {
            line: 675,
            column: 10
          },
          end: {
            line: 680,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 675,
            column: 10
          },
          end: {
            line: 680,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 675
      },
      "44": {
        loc: {
          start: {
            line: 685,
            column: 6
          },
          end: {
            line: 687,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 685,
            column: 6
          },
          end: {
            line: 687,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 685
      },
      "45": {
        loc: {
          start: {
            line: 692,
            column: 4
          },
          end: {
            line: 696,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 692,
            column: 4
          },
          end: {
            line: 696,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 692
      },
      "46": {
        loc: {
          start: {
            line: 707,
            column: 4
          },
          end: {
            line: 707,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 707,
            column: 4
          },
          end: {
            line: 707,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 707
      },
      "47": {
        loc: {
          start: {
            line: 711,
            column: 6
          },
          end: {
            line: 713,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 711,
            column: 6
          },
          end: {
            line: 713,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 711
      },
      "48": {
        loc: {
          start: {
            line: 731,
            column: 6
          },
          end: {
            line: 731,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 731,
            column: 6
          },
          end: {
            line: 731,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 731
      },
      "49": {
        loc: {
          start: {
            line: 759,
            column: 4
          },
          end: {
            line: 759,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 759,
            column: 4
          },
          end: {
            line: 759,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 759
      },
      "50": {
        loc: {
          start: {
            line: 766,
            column: 6
          },
          end: {
            line: 779,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 766,
            column: 6
          },
          end: {
            line: 779,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 766
      },
      "51": {
        loc: {
          start: {
            line: 766,
            column: 10
          },
          end: {
            line: 766,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 766,
            column: 10
          },
          end: {
            line: 766,
            column: 34
          }
        }, {
          start: {
            line: 766,
            column: 38
          },
          end: {
            line: 766,
            column: 61
          }
        }],
        line: 766
      },
      "52": {
        loc: {
          start: {
            line: 793,
            column: 8
          },
          end: {
            line: 803,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 793,
            column: 8
          },
          end: {
            line: 803,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 793
      },
      "53": {
        loc: {
          start: {
            line: 793,
            column: 12
          },
          end: {
            line: 793,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 793,
            column: 12
          },
          end: {
            line: 793,
            column: 38
          }
        }, {
          start: {
            line: 793,
            column: 42
          },
          end: {
            line: 793,
            column: 70
          }
        }],
        line: 793
      },
      "54": {
        loc: {
          start: {
            line: 794,
            column: 30
          },
          end: {
            line: 794,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 794,
            column: 30
          },
          end: {
            line: 794,
            column: 40
          }
        }, {
          start: {
            line: 794,
            column: 44
          },
          end: {
            line: 794,
            column: 53
          }
        }],
        line: 794
      },
      "55": {
        loc: {
          start: {
            line: 796,
            column: 10
          },
          end: {
            line: 799,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 796,
            column: 10
          },
          end: {
            line: 799,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 796
      },
      "56": {
        loc: {
          start: {
            line: 831,
            column: 4
          },
          end: {
            line: 831,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 831,
            column: 4
          },
          end: {
            line: 831,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 831
      },
      "57": {
        loc: {
          start: {
            line: 834,
            column: 4
          },
          end: {
            line: 836,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 834,
            column: 4
          },
          end: {
            line: 836,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 834
      },
      "58": {
        loc: {
          start: {
            line: 859,
            column: 4
          },
          end: {
            line: 859,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 859,
            column: 4
          },
          end: {
            line: 859,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 859
      },
      "59": {
        loc: {
          start: {
            line: 891,
            column: 37
          },
          end: {
            line: 891,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 891,
            column: 37
          },
          end: {
            line: 891,
            column: 64
          }
        }, {
          start: {
            line: 891,
            column: 68
          },
          end: {
            line: 891,
            column: 69
          }
        }],
        line: 891
      },
      "60": {
        loc: {
          start: {
            line: 898,
            column: 8
          },
          end: {
            line: 902,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 898,
            column: 8
          },
          end: {
            line: 902,
            column: 9
          }
        }, {
          start: {
            line: 900,
            column: 15
          },
          end: {
            line: 902,
            column: 9
          }
        }],
        line: 898
      },
      "61": {
        loc: {
          start: {
            line: 907,
            column: 33
          },
          end: {
            line: 908,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 908,
            column: 6
          },
          end: {
            line: 908,
            column: 52
          }
        }, {
          start: {
            line: 908,
            column: 55
          },
          end: {
            line: 908,
            column: 56
          }
        }],
        line: 907
      },
      "62": {
        loc: {
          start: {
            line: 910,
            column: 25
          },
          end: {
            line: 911,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 911,
            column: 6
          },
          end: {
            line: 911,
            column: 88
          }
        }, {
          start: {
            line: 911,
            column: 91
          },
          end: {
            line: 911,
            column: 92
          }
        }],
        line: 910
      },
      "63": {
        loc: {
          start: {
            line: 925,
            column: 4
          },
          end: {
            line: 930,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 925,
            column: 4
          },
          end: {
            line: 930,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 925
      },
      "64": {
        loc: {
          start: {
            line: 925,
            column: 8
          },
          end: {
            line: 925,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 925,
            column: 8
          },
          end: {
            line: 925,
            column: 14
          }
        }, {
          start: {
            line: 925,
            column: 18
          },
          end: {
            line: 925,
            column: 24
          }
        }],
        line: 925
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "508fe62af83d5b6b9613501ec99b692cc0abd0f7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16xefb6vda = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16xefb6vda();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * DAA Cognition Module
 * Decentralized Autonomous Agent Cognitive Integration
 */

export class DAACognition {
  constructor() {
    /* istanbul ignore next */
    cov_16xefb6vda().f[0]++;
    cov_16xefb6vda().s[0]++;
    this.cognitiveAgents = new Map();
    /* istanbul ignore next */
    cov_16xefb6vda().s[1]++;
    this.distributedMemory = new Map();
    /* istanbul ignore next */
    cov_16xefb6vda().s[2]++;
    this.consensusProtocol = new Map();
    /* istanbul ignore next */
    cov_16xefb6vda().s[3]++;
    this.autonomyLevels = new Map();
    /* istanbul ignore next */
    cov_16xefb6vda().s[4]++;
    this.emergentBehaviors = new Map();

    // Initialize DAA-specific cognitive patterns
    /* istanbul ignore next */
    cov_16xefb6vda().s[5]++;
    this.initializeDAAPatterns();
  }

  /**
   * Initialize DAA-specific cognitive patterns
   */
  initializeDAAPatterns() {
    /* istanbul ignore next */
    cov_16xefb6vda().f[1]++;
    cov_16xefb6vda().s[6]++;
    this.daaPatterns = {
      autonomous_decision: {
        name: 'Autonomous Decision Making',
        description: 'Independent decision-making without central control',
        characteristics: {
          autonomyLevel: 0.9,
          consensusRequirement: 0.3,
          decisionSpeed: 0.8,
          riskTolerance: 0.6
        }
      },
      distributed_reasoning: {
        name: 'Distributed Reasoning',
        description: 'Collective reasoning across multiple agents',
        characteristics: {
          collaborationLevel: 0.9,
          informationSharing: 0.8,
          consensusBuilding: 0.7,
          knowledgeAggregation: 0.8
        }
      },
      emergent_intelligence: {
        name: 'Emergent Intelligence',
        description: 'Intelligence emerging from agent interactions',
        characteristics: {
          emergenceThreshold: 0.7,
          collectiveIQ: 0.8,
          adaptiveCapacity: 0.9,
          selfOrganization: 0.85
        }
      },
      swarm_cognition: {
        name: 'Swarm Cognition',
        description: 'Collective cognitive processing as a swarm',
        characteristics: {
          swarmCoherence: 0.8,
          localInteractions: 0.9,
          globalOptimization: 0.7,
          scalability: 0.95
        }
      },
      decentralized_learning: {
        name: 'Decentralized Learning',
        description: 'Learning without centralized coordination',
        characteristics: {
          peerLearning: 0.85,
          knowledgePropagation: 0.8,
          adaptationRate: 0.75,
          robustness: 0.9
        }
      }
    };
  }

  /**
   * Initialize DAA cognitive agent
   * @param {string} agentId - Agent identifier
   * @param {Object} config - Agent configuration
   */
  initializeDAAAgent(agentId, config) {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[2]++;
      const daaAgent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[7]++, {
        id: agentId,
        autonomyLevel:
        /* istanbul ignore next */
        (cov_16xefb6vda().b[0][0]++, config.autonomyLevel) ||
        /* istanbul ignore next */
        (cov_16xefb6vda().b[0][1]++, 0.7),
        cognitivePattern: _this.selectDAAPattern(config),
        localMemory: new Map(),
        peerConnections: new Set(),
        consensusState: {
          proposals: new Map(),
          votes: new Map(),
          decisions: []
        },
        emergentTraits: new Set(),
        learningState: {
          localKnowledge: new Map(),
          sharedKnowledge: new Map(),
          propagationQueue: []
        }
      });
      cov_16xefb6vda().s[8]++;
      _this.cognitiveAgents.set(agentId, daaAgent);

      // Initialize in distributed memory
      cov_16xefb6vda().s[9]++;
      _this.initializeDistributedMemory(agentId);
      cov_16xefb6vda().s[10]++;
      console.log(`Initialized DAA cognitive agent ${agentId} with autonomy level ${daaAgent.autonomyLevel}`);
      cov_16xefb6vda().s[11]++;
      return daaAgent;
    })();
  }

  /**
   * Select appropriate DAA cognitive pattern
   * @param {Object} config - Agent configuration
   */
  selectDAAPattern(config) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[3]++;
    cov_16xefb6vda().s[12]++;
    // Select based on agent type and requirements
    if (config.requiresAutonomy) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[1][0]++;
      cov_16xefb6vda().s[13]++;
      return this.daaPatterns.autonomous_decision;
    } else {
      /* istanbul ignore next */
      cov_16xefb6vda().b[1][1]++;
      cov_16xefb6vda().s[14]++;
      if (config.requiresCollaboration) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[2][0]++;
        cov_16xefb6vda().s[15]++;
        return this.daaPatterns.distributed_reasoning;
      } else {
        /* istanbul ignore next */
        cov_16xefb6vda().b[2][1]++;
        cov_16xefb6vda().s[16]++;
        if (config.enableEmergence) {
          /* istanbul ignore next */
          cov_16xefb6vda().b[3][0]++;
          cov_16xefb6vda().s[17]++;
          return this.daaPatterns.emergent_intelligence;
        } else {
          /* istanbul ignore next */
          cov_16xefb6vda().b[3][1]++;
          cov_16xefb6vda().s[18]++;
          if (config.swarmMode) {
            /* istanbul ignore next */
            cov_16xefb6vda().b[4][0]++;
            cov_16xefb6vda().s[19]++;
            return this.daaPatterns.swarm_cognition;
          } else {
            /* istanbul ignore next */
            cov_16xefb6vda().b[4][1]++;
            cov_16xefb6vda().s[20]++;
            return this.daaPatterns.decentralized_learning;
          }
        }
      }
    }
  }

  /**
   * Initialize distributed memory for agent
   * @param {string} agentId - Agent identifier
   */
  initializeDistributedMemory(agentId) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[4]++;
    cov_16xefb6vda().s[21]++;
    this.distributedMemory.set(agentId, {
      localSegment: new Map(),
      sharedSegments: new Map(),
      replicationFactor: 3,
      consistencyLevel: 'eventual',
      lastSync: Date.now()
    });
  }

  /**
   * Enable autonomous decision making
   * @param {string} agentId - Agent identifier
   * @param {Object} decision - Decision context
   */
  makeAutonomousDecision(agentId, decision) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[5]++;
      const agent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[22]++, _this2.cognitiveAgents.get(agentId));
      cov_16xefb6vda().s[23]++;
      if (!agent) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[5][0]++;
        cov_16xefb6vda().s[24]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[5][1]++;
      }

      // Evaluate decision based on local knowledge
      const localEvaluation =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[25]++, _this2.evaluateLocally(agent, decision));

      // Check if consensus is needed based on autonomy level
      cov_16xefb6vda().s[26]++;
      if (agent.autonomyLevel < decision.consensusThreshold) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[6][0]++;
        cov_16xefb6vda().s[27]++;
        return _this2.seekConsensus(agentId, decision, localEvaluation);
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[6][1]++;
      }

      // Make autonomous decision
      const autonomousDecision =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[28]++, {
        agentId,
        decision: localEvaluation.recommendation,
        confidence: localEvaluation.confidence,
        reasoning: localEvaluation.reasoning,
        timestamp: Date.now(),
        autonomous: true
      });

      // Record decision
      cov_16xefb6vda().s[29]++;
      agent.consensusState.decisions.push(autonomousDecision);

      // Propagate decision to peers
      cov_16xefb6vda().s[30]++;
      /* istanbul ignore next */
      yield _this2.propagateDecision(agentId, autonomousDecision);
      cov_16xefb6vda().s[31]++;
      return autonomousDecision;
    })();
  }

  /**
   * Evaluate decision locally
   * @param {Object} agent - DAA agent
   * @param {Object} decision - Decision context
   */
  evaluateLocally(agent, decision) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[6]++;
    const evaluation =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[32]++, {
      recommendation: null,
      confidence: 0,
      reasoning: []
    });

    // Use local knowledge for evaluation
    const relevantKnowledge =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[33]++, this.retrieveRelevantKnowledge(agent, decision));

    // Apply cognitive pattern
    const pattern =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[34]++, agent.cognitivePattern);
    /* istanbul ignore next */
    cov_16xefb6vda().s[35]++;
    if (pattern.characteristics.autonomyLevel > 0.5) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[7][0]++;
      cov_16xefb6vda().s[36]++;
      evaluation.confidence += 0.3;
      /* istanbul ignore next */
      cov_16xefb6vda().s[37]++;
      evaluation.reasoning.push('High autonomy pattern supports independent decision');
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[7][1]++;
    }

    // Analyze based on past decisions
    const similarDecisions =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[38]++, this.findSimilarDecisions(agent, decision));
    /* istanbul ignore next */
    cov_16xefb6vda().s[39]++;
    if (similarDecisions.length > 0) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[8][0]++;
      const avgOutcome =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[40]++, this.calculateAverageOutcome(similarDecisions));
      /* istanbul ignore next */
      cov_16xefb6vda().s[41]++;
      evaluation.confidence += avgOutcome * 0.4;
      /* istanbul ignore next */
      cov_16xefb6vda().s[42]++;
      evaluation.reasoning.push(`Historical success rate: ${(avgOutcome * 100).toFixed(1)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[8][1]++;
    }

    // Make recommendation
    cov_16xefb6vda().s[43]++;
    evaluation.recommendation = evaluation.confidence > 0.6 ?
    /* istanbul ignore next */
    (cov_16xefb6vda().b[9][0]++, 'approve') :
    /* istanbul ignore next */
    (cov_16xefb6vda().b[9][1]++, 'reject');
    /* istanbul ignore next */
    cov_16xefb6vda().s[44]++;
    return evaluation;
  }

  /**
   * Retrieve relevant knowledge for decision
   * @param {Object} agent - DAA agent
   * @param {Object} decision - Decision context
   */
  retrieveRelevantKnowledge(agent, decision) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[7]++;
    const relevant =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[45]++, []);

    // Check local memory
    /* istanbul ignore next */
    cov_16xefb6vda().s[46]++;
    for (const [key, value] of agent.localMemory) {
      /* istanbul ignore next */
      cov_16xefb6vda().s[47]++;
      if (this.isRelevantToDecision(key, value, decision)) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[10][0]++;
        cov_16xefb6vda().s[48]++;
        relevant.push({
          source: 'local',
          key,
          value
        });
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[10][1]++;
      }
    }

    // Check shared knowledge
    /* istanbul ignore next */
    cov_16xefb6vda().s[49]++;
    for (const [key, value] of agent.learningState.sharedKnowledge) {
      /* istanbul ignore next */
      cov_16xefb6vda().s[50]++;
      if (this.isRelevantToDecision(key, value, decision)) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[11][0]++;
        cov_16xefb6vda().s[51]++;
        relevant.push({
          source: 'shared',
          key,
          value
        });
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[11][1]++;
      }
    }
    /* istanbul ignore next */
    cov_16xefb6vda().s[52]++;
    return relevant;
  }

  /**
   * Check if knowledge is relevant to decision
   * @param {string} key - Knowledge key
   * @param {*} value - Knowledge value
   * @param {Object} decision - Decision context
   */
  isRelevantToDecision(key, value, decision) {
    /* istanbul ignore next */
    var _decision$context;
    cov_16xefb6vda().f[8]++;
    // Simple relevance check based on keywords
    const decisionKeywords =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[53]++,
    /* istanbul ignore next */
    (cov_16xefb6vda().b[12][0]++, (_decision$context = decision.context) === null || _decision$context === void 0 ? void 0 :
    /* istanbul ignore next */
    _decision$context.keywords) ||
    /* istanbul ignore next */
    (cov_16xefb6vda().b[12][1]++, []));
    /* istanbul ignore next */
    cov_16xefb6vda().s[54]++;
    return decisionKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[9]++;
      cov_16xefb6vda().s[55]++;
      return /* istanbul ignore next */(cov_16xefb6vda().b[13][0]++, key.includes(keyword)) ||
      /* istanbul ignore next */
      (cov_16xefb6vda().b[13][1]++, typeof value === 'string') &&
      /* istanbul ignore next */
      (cov_16xefb6vda().b[13][2]++, value.includes(keyword));
    });
  }

  /**
   * Find similar past decisions
   * @param {Object} agent - DAA agent
   * @param {Object} decision - Current decision
   */
  findSimilarDecisions(agent, decision) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[10]++;
    cov_16xefb6vda().s[56]++;
    return agent.consensusState.decisions.filter(pastDecision => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[11]++;
      cov_16xefb6vda().s[57]++;
      // Simple similarity based on decision type
      return pastDecision.decision === decision.type;
    });
  }

  /**
   * Calculate average outcome of decisions
   * @param {Array} decisions - Past decisions
   */
  calculateAverageOutcome(decisions) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[12]++;
    cov_16xefb6vda().s[58]++;
    if (decisions.length === 0) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[14][0]++;
      cov_16xefb6vda().s[59]++;
      return 0.5;
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[14][1]++;
    }
    const successfulDecisions =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[60]++, decisions.filter(d => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[13]++;
      cov_16xefb6vda().s[61]++;
      return d.outcome === 'success';
    }).length);
    /* istanbul ignore next */
    cov_16xefb6vda().s[62]++;
    return successfulDecisions / decisions.length;
  }

  /**
   * Seek consensus from peer agents
   * @param {string} agentId - Agent identifier
   * @param {Object} decision - Decision context
   * @param {Object} localEvaluation - Local evaluation
   */
  seekConsensus(agentId, decision, localEvaluation) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[14]++;
      const agent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[63]++, _this3.cognitiveAgents.get(agentId));
      cov_16xefb6vda().s[64]++;
      if (!agent) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[15][0]++;
        cov_16xefb6vda().s[65]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[15][1]++;
      }

      // Create consensus proposal
      const proposal =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[66]++, {
        id: `proposal_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        proposer: agentId,
        decision,
        localEvaluation,
        timestamp: Date.now(),
        votes: new Map(),
        status: 'pending'
      });
      cov_16xefb6vda().s[67]++;
      agent.consensusState.proposals.set(proposal.id, proposal);

      // Request votes from peers
      const votePromises =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[68]++, []);
      cov_16xefb6vda().s[69]++;
      for (const peerId of agent.peerConnections) {
        /* istanbul ignore next */
        cov_16xefb6vda().s[70]++;
        votePromises.push(_this3.requestVote(peerId, proposal));
      }

      // Collect votes
      const votes =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[71]++, yield Promise.all(votePromises));

      // Tally results
      const consensusResult =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[72]++, _this3.tallyVotes(votes, proposal));

      // Update proposal status
      cov_16xefb6vda().s[73]++;
      proposal.status = consensusResult.approved ?
      /* istanbul ignore next */
      (cov_16xefb6vda().b[16][0]++, 'approved') :
      /* istanbul ignore next */
      (cov_16xefb6vda().b[16][1]++, 'rejected');
      cov_16xefb6vda().s[74]++;
      proposal.consensusLevel = consensusResult.consensusLevel;

      // Create consensus decision
      const consensusDecision =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[75]++, {
        agentId,
        decision: consensusResult.approved ?
        /* istanbul ignore next */
        (cov_16xefb6vda().b[17][0]++, 'approve') :
        /* istanbul ignore next */
        (cov_16xefb6vda().b[17][1]++, 'reject'),
        confidence: consensusResult.consensusLevel,
        reasoning: [...localEvaluation.reasoning, `Consensus level: ${(consensusResult.consensusLevel * 100).toFixed(1)}%`],
        timestamp: Date.now(),
        autonomous: false,
        proposalId: proposal.id
      });
      cov_16xefb6vda().s[76]++;
      agent.consensusState.decisions.push(consensusDecision);
      cov_16xefb6vda().s[77]++;
      return consensusDecision;
    })();
  }

  /**
   * Request vote from peer agent
   * @param {string} peerId - Peer agent ID
   * @param {Object} proposal - Consensus proposal
   */
  requestVote(peerId, proposal) {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[15]++;
      const peerAgent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[78]++, _this4.cognitiveAgents.get(peerId));
      cov_16xefb6vda().s[79]++;
      if (!peerAgent) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[18][0]++;
        cov_16xefb6vda().s[80]++;
        return {
          agentId: peerId,
          vote: 'abstain',
          reason: 'Agent not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[18][1]++;
      }

      // Peer evaluates proposal
      const peerEvaluation =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[81]++, _this4.evaluateLocally(peerAgent, proposal.decision));

      // Cast vote based on evaluation
      const vote =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[82]++, {
        agentId: peerId,
        vote: peerEvaluation.confidence > 0.5 ?
        /* istanbul ignore next */
        (cov_16xefb6vda().b[19][0]++, 'approve') :
        /* istanbul ignore next */
        (cov_16xefb6vda().b[19][1]++, 'reject'),
        confidence: peerEvaluation.confidence,
        reason:
        /* istanbul ignore next */
        (cov_16xefb6vda().b[20][0]++, peerEvaluation.reasoning[0]) ||
        /* istanbul ignore next */
        (cov_16xefb6vda().b[20][1]++, 'No specific reason')
      });
      cov_16xefb6vda().s[83]++;
      return vote;
    })();
  }

  /**
   * Tally votes for consensus
   * @param {Array} votes - Vote results
   * @param {Object} proposal - Consensus proposal
   */
  tallyVotes(votes, proposal) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[16]++;
    let approveCount =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[84]++, 0);
    let totalWeight =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[85]++, 0);
    /* istanbul ignore next */
    cov_16xefb6vda().s[86]++;
    for (const vote of votes) {
      const weight =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[87]++,
      /* istanbul ignore next */
      (cov_16xefb6vda().b[21][0]++, vote.confidence) ||
      /* istanbul ignore next */
      (cov_16xefb6vda().b[21][1]++, 0.5));
      /* istanbul ignore next */
      cov_16xefb6vda().s[88]++;
      totalWeight += weight;
      /* istanbul ignore next */
      cov_16xefb6vda().s[89]++;
      if (vote.vote === 'approve') {
        /* istanbul ignore next */
        cov_16xefb6vda().b[22][0]++;
        cov_16xefb6vda().s[90]++;
        approveCount += weight;
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[22][1]++;
      }

      // Store vote in proposal
      cov_16xefb6vda().s[91]++;
      proposal.votes.set(vote.agentId, vote);
    }
    const consensusLevel =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[92]++, totalWeight > 0 ?
    /* istanbul ignore next */
    (cov_16xefb6vda().b[23][0]++, approveCount / totalWeight) :
    /* istanbul ignore next */
    (cov_16xefb6vda().b[23][1]++, 0));
    const approved =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[93]++, consensusLevel > 0.5);
    /* istanbul ignore next */
    cov_16xefb6vda().s[94]++;
    return {
      approved,
      consensusLevel,
      totalVotes: votes.length
    };
  }

  /**
   * Propagate decision to peer agents
   * @param {string} agentId - Agent identifier
   * @param {Object} decision - Decision to propagate
   */
  propagateDecision(agentId, decision) {
    /* istanbul ignore next */
    var _this5 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[17]++;
      const agent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[95]++, _this5.cognitiveAgents.get(agentId));
      cov_16xefb6vda().s[96]++;
      if (!agent) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[24][0]++;
        cov_16xefb6vda().s[97]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[24][1]++;
      }

      // Add to propagation queue
      cov_16xefb6vda().s[98]++;
      agent.learningState.propagationQueue.push({
        type: 'decision',
        content: decision,
        timestamp: Date.now()
      });

      // Propagate to connected peers
      cov_16xefb6vda().s[99]++;
      for (const peerId of agent.peerConnections) {
        /* istanbul ignore next */
        cov_16xefb6vda().s[100]++;
        /* istanbul ignore next */
        yield _this5.sendToPeer(peerId, {
          type: 'decision_update',
          from: agentId,
          decision
        });
      }
    })();
  }

  /**
   * Send message to peer agent
   * @param {string} peerId - Peer agent ID
   * @param {Object} message - Message to send
   */
  sendToPeer(peerId, message) {
    /* istanbul ignore next */
    var _this6 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[18]++;
      const peerAgent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[101]++, _this6.cognitiveAgents.get(peerId));
      cov_16xefb6vda().s[102]++;
      if (!peerAgent) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[25][0]++;
        cov_16xefb6vda().s[103]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[25][1]++;
      }

      // Process message based on type
      cov_16xefb6vda().s[104]++;
      switch (message.type) {
        case 'decision_update':
          /* istanbul ignore next */
          cov_16xefb6vda().b[26][0]++;
          cov_16xefb6vda().s[105]++;
          _this6.processDecisionUpdate(peerId, message);
          /* istanbul ignore next */
          cov_16xefb6vda().s[106]++;
          break;
        case 'knowledge_share':
          /* istanbul ignore next */
          cov_16xefb6vda().b[26][1]++;
          cov_16xefb6vda().s[107]++;
          _this6.processKnowledgeShare(peerId, message);
          /* istanbul ignore next */
          cov_16xefb6vda().s[108]++;
          break;
        case 'emergent_behavior':
          /* istanbul ignore next */
          cov_16xefb6vda().b[26][2]++;
          cov_16xefb6vda().s[109]++;
          _this6.processEmergentBehavior(peerId, message);
          /* istanbul ignore next */
          cov_16xefb6vda().s[110]++;
          break;
      }
    })();
  }

  /**
   * Process decision update from peer
   * @param {string} agentId - Receiving agent ID
   * @param {Object} message - Update message
   */
  processDecisionUpdate(agentId, message) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[19]++;
    const agent =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[111]++, this.cognitiveAgents.get(agentId));
    /* istanbul ignore next */
    cov_16xefb6vda().s[112]++;
    if (!agent) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[27][0]++;
      cov_16xefb6vda().s[113]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[27][1]++;
    }

    // Store peer decision for learning
    const peerDecision =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[114]++, _objectSpread(_objectSpread({}, message.decision), {}, {
      receivedFrom: message.from,
      receivedAt: Date.now()
    }));
    /* istanbul ignore next */
    cov_16xefb6vda().s[115]++;
    agent.learningState.sharedKnowledge.set(`peer_decision_${message.decision.timestamp}`, peerDecision);
  }

  /**
   * Enable distributed learning
   * @param {string} agentId - Agent identifier
   * @param {Object} learningData - Data to learn from
   */
  performDistributedLearning(agentId, learningData) {
    /* istanbul ignore next */
    var _this7 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[20]++;
      const agent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[116]++, _this7.cognitiveAgents.get(agentId));
      cov_16xefb6vda().s[117]++;
      if (!agent) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[28][0]++;
        cov_16xefb6vda().s[118]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[28][1]++;
      }

      // Local learning phase
      const localLearning =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[119]++, yield _this7.performLocalLearning(agent, learningData));

      // Share learning with peers
      const sharedLearning =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[120]++, yield _this7.shareLearning(agentId, localLearning));

      // Aggregate peer learning
      const aggregatedLearning =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[121]++, yield _this7.aggregatePeerLearning(agentId, sharedLearning));

      // Update agent's knowledge
      cov_16xefb6vda().s[122]++;
      _this7.updateAgentKnowledge(agent, aggregatedLearning);
      cov_16xefb6vda().s[123]++;
      return {
        localLearning,
        sharedLearning,
        aggregatedLearning,
        knowledgeGrowth: _this7.calculateKnowledgeGrowth(agent)
      };
    })();
  }

  /**
   * Perform local learning
   * @param {Object} agent - DAA agent
   * @param {Object} learningData - Learning data
   */
  performLocalLearning(agent, learningData) {
    /* istanbul ignore next */
    var _this8 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[21]++;
      const learning =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[124]++, {
        patterns: [],
        insights: [],
        confidence: 0
      });

      // Extract patterns from data
      cov_16xefb6vda().s[125]++;
      if (learningData.samples) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[29][0]++;
        const patterns =
        /* istanbul ignore next */
        (cov_16xefb6vda().s[126]++, _this8.extractPatterns(learningData.samples));
        /* istanbul ignore next */
        cov_16xefb6vda().s[127]++;
        learning.patterns = patterns;
        /* istanbul ignore next */
        cov_16xefb6vda().s[128]++;
        learning.confidence = patterns.length > 0 ?
        /* istanbul ignore next */
        (cov_16xefb6vda().b[30][0]++, 0.7) :
        /* istanbul ignore next */
        (cov_16xefb6vda().b[30][1]++, 0.3);
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[29][1]++;
      }

      // Generate insights
      cov_16xefb6vda().s[129]++;
      if (learning.patterns.length > 0) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[31][0]++;
        cov_16xefb6vda().s[130]++;
        learning.insights = _this8.generateInsights(learning.patterns);
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[31][1]++;
      }

      // Store in local memory
      cov_16xefb6vda().s[131]++;
      learning.patterns.forEach((pattern, idx) => {
        /* istanbul ignore next */
        cov_16xefb6vda().f[22]++;
        cov_16xefb6vda().s[132]++;
        agent.localMemory.set(`pattern_${Date.now()}_${idx}`, pattern);
      });
      cov_16xefb6vda().s[133]++;
      return learning;
    })();
  }

  /**
   * Extract patterns from data samples
   * @param {Array} samples - Data samples
   */
  extractPatterns(samples) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[23]++;
    const patterns =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[134]++, []);

    // Simple pattern extraction (placeholder for more sophisticated methods)
    /* istanbul ignore next */
    cov_16xefb6vda().s[135]++;
    if (samples.length > 10) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[32][0]++;
      cov_16xefb6vda().s[136]++;
      patterns.push({
        type: 'frequency',
        description: 'High sample frequency detected',
        confidence: 0.8
      });
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[32][1]++;
    }

    // Look for sequences
    const isSequential =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[137]++, samples.every((sample, idx) => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[24]++;
      cov_16xefb6vda().s[138]++;
      return /* istanbul ignore next */(cov_16xefb6vda().b[33][0]++, idx === 0) ||
      /* istanbul ignore next */
      (cov_16xefb6vda().b[33][1]++, this.isSequentialWith(samples[idx - 1], sample));
    }));
    /* istanbul ignore next */
    cov_16xefb6vda().s[139]++;
    if (isSequential) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[34][0]++;
      cov_16xefb6vda().s[140]++;
      patterns.push({
        type: 'sequential',
        description: 'Sequential pattern detected',
        confidence: 0.9
      });
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[34][1]++;
    }
    cov_16xefb6vda().s[141]++;
    return patterns;
  }

  /**
   * Check if samples are sequential
   * @param {*} prev - Previous sample
   * @param {*} current - Current sample
   */
  isSequentialWith(prev, current) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[25]++;
    cov_16xefb6vda().s[142]++;
    // Simple check - can be made more sophisticated
    if (
    /* istanbul ignore next */
    (cov_16xefb6vda().b[36][0]++, typeof prev === 'number') &&
    /* istanbul ignore next */
    (cov_16xefb6vda().b[36][1]++, typeof current === 'number')) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[35][0]++;
      cov_16xefb6vda().s[143]++;
      return Math.abs(current - prev) < 10;
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[35][1]++;
    }
    cov_16xefb6vda().s[144]++;
    return false;
  }

  /**
   * Generate insights from patterns
   * @param {Array} patterns - Detected patterns
   */
  generateInsights(patterns) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[26]++;
    const insights =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[145]++, []);

    // Generate insights based on pattern combinations
    const hasSequential =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[146]++, patterns.some(p => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[27]++;
      cov_16xefb6vda().s[147]++;
      return p.type === 'sequential';
    }));
    const hasFrequency =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[148]++, patterns.some(p => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[28]++;
      cov_16xefb6vda().s[149]++;
      return p.type === 'frequency';
    }));
    /* istanbul ignore next */
    cov_16xefb6vda().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_16xefb6vda().b[38][0]++, hasSequential) &&
    /* istanbul ignore next */
    (cov_16xefb6vda().b[38][1]++, hasFrequency)) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[37][0]++;
      cov_16xefb6vda().s[151]++;
      insights.push({
        type: 'combined',
        description: 'High-frequency sequential data detected',
        actionable: 'Consider time-series optimization'
      });
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[37][1]++;
    }
    cov_16xefb6vda().s[152]++;
    return insights;
  }

  /**
   * Share learning with peer agents
   * @param {string} agentId - Agent identifier
   * @param {Object} localLearning - Local learning results
   */
  shareLearning(agentId, localLearning) {
    /* istanbul ignore next */
    var _this9 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[29]++;
      const agent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[153]++, _this9.cognitiveAgents.get(agentId));
      cov_16xefb6vda().s[154]++;
      if (!agent) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[39][0]++;
        cov_16xefb6vda().s[155]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[39][1]++;
      }
      const sharingResults =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[156]++, []);

      // Share with each peer
      cov_16xefb6vda().s[157]++;
      for (const peerId of agent.peerConnections) {
        const shareResult =
        /* istanbul ignore next */
        (cov_16xefb6vda().s[158]++, yield _this9.shareWithPeer(agentId, peerId, localLearning));
        /* istanbul ignore next */
        cov_16xefb6vda().s[159]++;
        sharingResults.push(shareResult);
      }
      cov_16xefb6vda().s[160]++;
      return sharingResults;
    })();
  }

  /**
   * Share learning with specific peer
   * @param {string} agentId - Sharing agent ID
   * @param {string} peerId - Peer agent ID
   * @param {Object} learning - Learning to share
   */
  shareWithPeer(agentId, peerId, learning) {
    /* istanbul ignore next */
    var _this0 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[30]++;
      cov_16xefb6vda().s[161]++;
      /* istanbul ignore next */
      yield _this0.sendToPeer(peerId, {
        type: 'knowledge_share',
        from: agentId,
        learning: {
          patterns: learning.patterns,
          insights: learning.insights,
          confidence: learning.confidence,
          timestamp: Date.now()
        }
      });
      cov_16xefb6vda().s[162]++;
      return {
        peer: peerId,
        shared: true,
        timestamp: Date.now()
      };
    })();
  }

  /**
   * Process knowledge share from peer
   * @param {string} agentId - Receiving agent ID
   * @param {Object} message - Knowledge share message
   */
  processKnowledgeShare(agentId, message) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[31]++;
    const agent =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[163]++, this.cognitiveAgents.get(agentId));
    /* istanbul ignore next */
    cov_16xefb6vda().s[164]++;
    if (!agent) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[40][0]++;
      cov_16xefb6vda().s[165]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[40][1]++;
    }

    // Store shared knowledge
    const sharedKnowledge =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[166]++, _objectSpread(_objectSpread({}, message.learning), {}, {
      source: message.from,
      receivedAt: Date.now()
    }));
    /* istanbul ignore next */
    cov_16xefb6vda().s[167]++;
    agent.learningState.sharedKnowledge.set(`shared_${message.from}_${message.learning.timestamp}`, sharedKnowledge);

    // Check for emergent patterns
    /* istanbul ignore next */
    cov_16xefb6vda().s[168]++;
    this.checkForEmergentPatterns(agentId);
  }

  /**
   * Aggregate learning from peers
   * @param {string} agentId - Agent identifier
   * @param {Array} sharingResults - Results of sharing
   */
  aggregatePeerLearning(agentId, sharingResults) {
    /* istanbul ignore next */
    var _this1 = this;
    return _asyncToGenerator(function* () {
      cov_16xefb6vda().f[32]++;
      const agent =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[169]++, _this1.cognitiveAgents.get(agentId));
      cov_16xefb6vda().s[170]++;
      if (!agent) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[41][0]++;
        cov_16xefb6vda().s[171]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[41][1]++;
      }
      const aggregated =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[172]++, {
        patterns: new Map(),
        insights: [],
        consensusLevel: 0
      });

      // Collect all shared knowledge
      cov_16xefb6vda().s[173]++;
      for (const [key, knowledge] of agent.learningState.sharedKnowledge) {
        /* istanbul ignore next */
        cov_16xefb6vda().s[174]++;
        if (knowledge.patterns) {
          /* istanbul ignore next */
          cov_16xefb6vda().b[42][0]++;
          cov_16xefb6vda().s[175]++;
          knowledge.patterns.forEach(pattern => {
            /* istanbul ignore next */
            cov_16xefb6vda().f[33]++;
            const patternKey =
            /* istanbul ignore next */
            (cov_16xefb6vda().s[176]++, `${pattern.type}_${pattern.description}`);
            /* istanbul ignore next */
            cov_16xefb6vda().s[177]++;
            if (!aggregated.patterns.has(patternKey)) {
              /* istanbul ignore next */
              cov_16xefb6vda().b[43][0]++;
              cov_16xefb6vda().s[178]++;
              aggregated.patterns.set(patternKey,
              /* istanbul ignore next */
              _objectSpread(_objectSpread({}, pattern), {}, {
                sources: []
              }));
            } else
            /* istanbul ignore next */
            {
              cov_16xefb6vda().b[43][1]++;
            }
            cov_16xefb6vda().s[179]++;
            aggregated.patterns.get(patternKey).sources.push(knowledge.source);
          });
        } else
        /* istanbul ignore next */
        {
          cov_16xefb6vda().b[42][1]++;
        }
        cov_16xefb6vda().s[180]++;
        if (knowledge.insights) {
          /* istanbul ignore next */
          cov_16xefb6vda().b[44][0]++;
          cov_16xefb6vda().s[181]++;
          aggregated.insights.push(...knowledge.insights);
        } else
        /* istanbul ignore next */
        {
          cov_16xefb6vda().b[44][1]++;
        }
      }

      // Calculate consensus level
      const totalPeers =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[182]++, agent.peerConnections.size);
      cov_16xefb6vda().s[183]++;
      if (totalPeers > 0) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[45][0]++;
        cov_16xefb6vda().s[184]++;
        aggregated.patterns.forEach(pattern => {
          /* istanbul ignore next */
          cov_16xefb6vda().f[34]++;
          cov_16xefb6vda().s[185]++;
          pattern.consensusLevel = pattern.sources.length / totalPeers;
        });
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[45][1]++;
      }
      cov_16xefb6vda().s[186]++;
      return aggregated;
    })();
  }

  /**
   * Update agent knowledge with aggregated learning
   * @param {Object} agent - DAA agent
   * @param {Object} aggregatedLearning - Aggregated learning
   */
  updateAgentKnowledge(agent, aggregatedLearning) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[35]++;
    cov_16xefb6vda().s[187]++;
    if (!aggregatedLearning) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[46][0]++;
      cov_16xefb6vda().s[188]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[46][1]++;
    }

    // Update local knowledge with high-consensus patterns
    cov_16xefb6vda().s[189]++;
    aggregatedLearning.patterns.forEach((pattern, key) => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[36]++;
      cov_16xefb6vda().s[190]++;
      if (pattern.consensusLevel > 0.6) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[47][0]++;
        cov_16xefb6vda().s[191]++;
        agent.localMemory.set(`consensus_${key}`, pattern);
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[47][1]++;
      }
    });

    // Store unique insights
    const uniqueInsights =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[192]++, this.deduplicateInsights(aggregatedLearning.insights));
    /* istanbul ignore next */
    cov_16xefb6vda().s[193]++;
    uniqueInsights.forEach((insight, idx) => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[37]++;
      cov_16xefb6vda().s[194]++;
      agent.localMemory.set(`insight_${Date.now()}_${idx}`, insight);
    });
  }

  /**
   * Deduplicate insights
   * @param {Array} insights - Array of insights
   */
  deduplicateInsights(insights) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[38]++;
    const seen =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[195]++, new Set());
    /* istanbul ignore next */
    cov_16xefb6vda().s[196]++;
    return insights.filter(insight => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[39]++;
      const key =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[197]++, `${insight.type}_${insight.description}`);
      /* istanbul ignore next */
      cov_16xefb6vda().s[198]++;
      if (seen.has(key)) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[48][0]++;
        cov_16xefb6vda().s[199]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[48][1]++;
      }
      cov_16xefb6vda().s[200]++;
      seen.add(key);
      /* istanbul ignore next */
      cov_16xefb6vda().s[201]++;
      return true;
    });
  }

  /**
   * Calculate knowledge growth for agent
   * @param {Object} agent - DAA agent
   */
  calculateKnowledgeGrowth(agent) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[40]++;
    const localSize =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[202]++, agent.localMemory.size);
    const sharedSize =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[203]++, agent.learningState.sharedKnowledge.size);
    /* istanbul ignore next */
    cov_16xefb6vda().s[204]++;
    return {
      localKnowledge: localSize,
      sharedKnowledge: sharedSize,
      totalKnowledge: localSize + sharedSize,
      knowledgeDensity: (localSize + sharedSize) / (agent.peerConnections.size + 1)
    };
  }

  /**
   * Check for emergent patterns across agents
   * @param {string} agentId - Agent identifier
   */
  checkForEmergentPatterns(agentId) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[41]++;
    const agent =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[205]++, this.cognitiveAgents.get(agentId));
    /* istanbul ignore next */
    cov_16xefb6vda().s[206]++;
    if (!agent) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[49][0]++;
      cov_16xefb6vda().s[207]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[49][1]++;
    }

    // Analyze collective patterns
    const collectivePatterns =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[208]++, this.analyzeCollectivePatterns());

    // Check for emergence criteria
    /* istanbul ignore next */
    cov_16xefb6vda().s[209]++;
    collectivePatterns.forEach(pattern => {
      /* istanbul ignore next */
      cov_16xefb6vda().f[42]++;
      cov_16xefb6vda().s[210]++;
      if (
      /* istanbul ignore next */
      (cov_16xefb6vda().b[51][0]++, pattern.occurrence > 0.7) &&
      /* istanbul ignore next */
      (cov_16xefb6vda().b[51][1]++, pattern.diversity > 0.5)) {
        /* istanbul ignore next */
        cov_16xefb6vda().b[50][0]++;
        const emergentBehavior =
        /* istanbul ignore next */
        (cov_16xefb6vda().s[211]++, {
          type: 'pattern_emergence',
          pattern: pattern.type,
          strength: pattern.occurrence,
          diversity: pattern.diversity,
          timestamp: Date.now()
        });
        /* istanbul ignore next */
        cov_16xefb6vda().s[212]++;
        agent.emergentTraits.add(emergentBehavior.type);

        // Notify peers of emergent behavior
        /* istanbul ignore next */
        cov_16xefb6vda().s[213]++;
        this.notifyEmergentBehavior(agentId, emergentBehavior);
      } else
      /* istanbul ignore next */
      {
        cov_16xefb6vda().b[50][1]++;
      }
    });
  }

  /**
   * Analyze patterns across all agents
   */
  analyzeCollectivePatterns() {
    /* istanbul ignore next */
    cov_16xefb6vda().f[43]++;
    const patternCounts =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[214]++, new Map());
    const patternAgents =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[215]++, new Map());

    // Count patterns across all agents
    /* istanbul ignore next */
    cov_16xefb6vda().s[216]++;
    for (const [agentId, agent] of this.cognitiveAgents) {
      /* istanbul ignore next */
      cov_16xefb6vda().s[217]++;
      for (const [key, value] of agent.localMemory) {
        /* istanbul ignore next */
        cov_16xefb6vda().s[218]++;
        if (
        /* istanbul ignore next */
        (cov_16xefb6vda().b[53][0]++, key.startsWith('pattern_')) ||
        /* istanbul ignore next */
        (cov_16xefb6vda().b[53][1]++, key.startsWith('consensus_'))) {
          /* istanbul ignore next */
          cov_16xefb6vda().b[52][0]++;
          const patternType =
          /* istanbul ignore next */
          (cov_16xefb6vda().s[219]++,
          /* istanbul ignore next */
          (cov_16xefb6vda().b[54][0]++, value.type) ||
          /* istanbul ignore next */
          (cov_16xefb6vda().b[54][1]++, 'unknown'));
          /* istanbul ignore next */
          cov_16xefb6vda().s[220]++;
          if (!patternCounts.has(patternType)) {
            /* istanbul ignore next */
            cov_16xefb6vda().b[55][0]++;
            cov_16xefb6vda().s[221]++;
            patternCounts.set(patternType, 0);
            /* istanbul ignore next */
            cov_16xefb6vda().s[222]++;
            patternAgents.set(patternType, new Set());
          } else
          /* istanbul ignore next */
          {
            cov_16xefb6vda().b[55][1]++;
          }
          cov_16xefb6vda().s[223]++;
          patternCounts.set(patternType, patternCounts.get(patternType) + 1);
          /* istanbul ignore next */
          cov_16xefb6vda().s[224]++;
          patternAgents.get(patternType).add(agentId);
        } else
        /* istanbul ignore next */
        {
          cov_16xefb6vda().b[52][1]++;
        }
      }
    }

    // Calculate pattern statistics
    const totalAgents =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[225]++, this.cognitiveAgents.size);
    const patterns =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[226]++, []);
    /* istanbul ignore next */
    cov_16xefb6vda().s[227]++;
    for (const [patternType, count] of patternCounts) {
      const agentSet =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[228]++, patternAgents.get(patternType));
      /* istanbul ignore next */
      cov_16xefb6vda().s[229]++;
      patterns.push({
        type: patternType,
        count: count,
        occurrence: agentSet.size / totalAgents,
        diversity: agentSet.size / count // How spread out the pattern is
      });
    }
    /* istanbul ignore next */
    cov_16xefb6vda().s[230]++;
    return patterns;
  }

  /**
   * Notify peers of emergent behavior
   * @param {string} agentId - Agent identifier
   * @param {Object} emergentBehavior - Emergent behavior detected
   */
  notifyEmergentBehavior(agentId, emergentBehavior) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[44]++;
    const agent =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[231]++, this.cognitiveAgents.get(agentId));
    /* istanbul ignore next */
    cov_16xefb6vda().s[232]++;
    if (!agent) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[56][0]++;
      cov_16xefb6vda().s[233]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[56][1]++;
    }

    // Record in emergent behaviors
    cov_16xefb6vda().s[234]++;
    if (!this.emergentBehaviors.has(emergentBehavior.type)) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[57][0]++;
      cov_16xefb6vda().s[235]++;
      this.emergentBehaviors.set(emergentBehavior.type, []);
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[57][1]++;
    }
    cov_16xefb6vda().s[236]++;
    this.emergentBehaviors.get(emergentBehavior.type).push(
    /* istanbul ignore next */
    _objectSpread(_objectSpread({}, emergentBehavior), {}, {
      discoveredBy: agentId
    }));

    // Notify all peers
    /* istanbul ignore next */
    cov_16xefb6vda().s[237]++;
    for (const peerId of agent.peerConnections) {
      /* istanbul ignore next */
      cov_16xefb6vda().s[238]++;
      this.sendToPeer(peerId, {
        type: 'emergent_behavior',
        from: agentId,
        behavior: emergentBehavior
      });
    }
  }

  /**
   * Process emergent behavior notification
   * @param {string} agentId - Receiving agent ID
   * @param {Object} message - Emergent behavior message
   */
  processEmergentBehavior(agentId, message) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[45]++;
    const agent =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[239]++, this.cognitiveAgents.get(agentId));
    /* istanbul ignore next */
    cov_16xefb6vda().s[240]++;
    if (!agent) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[58][0]++;
      cov_16xefb6vda().s[241]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[58][1]++;
    }

    // Add to agent's emergent traits
    cov_16xefb6vda().s[242]++;
    agent.emergentTraits.add(message.behavior.type);

    // Store in local memory for future reference
    /* istanbul ignore next */
    cov_16xefb6vda().s[243]++;
    agent.localMemory.set(`emergent_${message.behavior.type}_${Date.now()}`,
    /* istanbul ignore next */
    _objectSpread(_objectSpread({}, message.behavior), {}, {
      reportedBy: message.from
    }));
  }

  /**
   * Get DAA statistics
   */
  getStatistics() {
    /* istanbul ignore next */
    cov_16xefb6vda().f[46]++;
    const stats =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[244]++, {
      totalAgents: this.cognitiveAgents.size,
      autonomyLevels: {},
      emergentBehaviors: this.emergentBehaviors.size,
      distributedKnowledge: 0,
      consensusDecisions: 0,
      autonomousDecisions: 0
    });

    // Calculate detailed statistics
    /* istanbul ignore next */
    cov_16xefb6vda().s[245]++;
    for (const [agentId, agent] of this.cognitiveAgents) {
      // Autonomy distribution
      const level =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[246]++, Math.floor(agent.autonomyLevel * 10) / 10);
      /* istanbul ignore next */
      cov_16xefb6vda().s[247]++;
      stats.autonomyLevels[level] = (
      /* istanbul ignore next */
      (cov_16xefb6vda().b[59][0]++, stats.autonomyLevels[level]) ||
      /* istanbul ignore next */
      (cov_16xefb6vda().b[59][1]++, 0)) + 1;

      // Knowledge statistics
      /* istanbul ignore next */
      cov_16xefb6vda().s[248]++;
      stats.distributedKnowledge += agent.localMemory.size + agent.learningState.sharedKnowledge.size;

      // Decision statistics
      /* istanbul ignore next */
      cov_16xefb6vda().s[249]++;
      agent.consensusState.decisions.forEach(decision => {
        /* istanbul ignore next */
        cov_16xefb6vda().f[47]++;
        cov_16xefb6vda().s[250]++;
        if (decision.autonomous) {
          /* istanbul ignore next */
          cov_16xefb6vda().b[60][0]++;
          cov_16xefb6vda().s[251]++;
          stats.autonomousDecisions++;
        } else {
          /* istanbul ignore next */
          cov_16xefb6vda().b[60][1]++;
          cov_16xefb6vda().s[252]++;
          stats.consensusDecisions++;
        }
      });
    }

    // Average metrics
    /* istanbul ignore next */
    cov_16xefb6vda().s[253]++;
    stats.avgKnowledgePerAgent = stats.totalAgents > 0 ?
    /* istanbul ignore next */
    (cov_16xefb6vda().b[61][0]++, stats.distributedKnowledge / stats.totalAgents) :
    /* istanbul ignore next */
    (cov_16xefb6vda().b[61][1]++, 0);
    /* istanbul ignore next */
    cov_16xefb6vda().s[254]++;
    stats.autonomyRate = stats.autonomousDecisions + stats.consensusDecisions > 0 ?
    /* istanbul ignore next */
    (cov_16xefb6vda().b[62][0]++, stats.autonomousDecisions / (stats.autonomousDecisions + stats.consensusDecisions)) :
    /* istanbul ignore next */
    (cov_16xefb6vda().b[62][1]++, 0);
    /* istanbul ignore next */
    cov_16xefb6vda().s[255]++;
    return stats;
  }

  /**
   * Connect two agents as peers
   * @param {string} agentId1 - First agent
   * @param {string} agentId2 - Second agent
   */
  connectAgents(agentId1, agentId2) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[48]++;
    const agent1 =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[256]++, this.cognitiveAgents.get(agentId1));
    const agent2 =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[257]++, this.cognitiveAgents.get(agentId2));
    /* istanbul ignore next */
    cov_16xefb6vda().s[258]++;
    if (
    /* istanbul ignore next */
    (cov_16xefb6vda().b[64][0]++, agent1) &&
    /* istanbul ignore next */
    (cov_16xefb6vda().b[64][1]++, agent2)) {
      /* istanbul ignore next */
      cov_16xefb6vda().b[63][0]++;
      cov_16xefb6vda().s[259]++;
      agent1.peerConnections.add(agentId2);
      /* istanbul ignore next */
      cov_16xefb6vda().s[260]++;
      agent2.peerConnections.add(agentId1);
      /* istanbul ignore next */
      cov_16xefb6vda().s[261]++;
      console.log(`Connected DAA agents ${agentId1} and ${agentId2}`);
    } else
    /* istanbul ignore next */
    {
      cov_16xefb6vda().b[63][1]++;
    }
  }

  /**
   * Create mesh network of agents
   * @param {Array} agentIds - List of agent IDs
   */
  createMeshNetwork(agentIds) {
    /* istanbul ignore next */
    cov_16xefb6vda().f[49]++;
    cov_16xefb6vda().s[262]++;
    // Connect every agent to every other agent
    for (let i =
    /* istanbul ignore next */
    (cov_16xefb6vda().s[263]++, 0); i < agentIds.length; i++) {
      /* istanbul ignore next */
      cov_16xefb6vda().s[264]++;
      for (let j =
      /* istanbul ignore next */
      (cov_16xefb6vda().s[265]++, i + 1); j < agentIds.length; j++) {
        /* istanbul ignore next */
        cov_16xefb6vda().s[266]++;
        this.connectAgents(agentIds[i], agentIds[j]);
      }
    }
    /* istanbul ignore next */
    cov_16xefb6vda().s[267]++;
    console.log(`Created mesh network with ${agentIds.length} agents`);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,