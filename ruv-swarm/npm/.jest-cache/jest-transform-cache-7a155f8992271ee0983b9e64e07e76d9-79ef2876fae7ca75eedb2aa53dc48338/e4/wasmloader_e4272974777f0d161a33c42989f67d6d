008964199e6a99435856ab3a9fb9e225
/* istanbul ignore next */
var _ref;
function cov_2ppxhj1wxg() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/wasm-loader.js";
  var hash = "fa32b1c7d0a91fad3ae298d94ea9b9f7332a2f7c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/wasm-loader.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "1": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 49
        }
      },
      "2": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "3": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "4": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 37
        }
      },
      "5": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "6": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "7": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "8": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "9": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 43,
          column: 6
        }
      },
      "10": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 36
        }
      },
      "11": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "12": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 36
        }
      },
      "13": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "14": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 34
        }
      },
      "15": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "16": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 56,
          column: 38
        }
      },
      "17": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 61
        }
      },
      "18": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "19": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 63,
          column: 36
        }
      },
      "20": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "21": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 44
        }
      },
      "22": {
        start: {
          line: 69,
          column: 17
        },
        end: {
          line: 69,
          column: 42
        }
      },
      "23": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "24": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "25": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "26": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 36
        }
      },
      "27": {
        start: {
          line: 77,
          column: 22
        },
        end: {
          line: 77,
          column: 46
        }
      },
      "28": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 38
        }
      },
      "29": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 21
        }
      },
      "30": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 74
        }
      },
      "31": {
        start: {
          line: 83,
          column: 51
        },
        end: {
          line: 83,
          column: 71
        }
      },
      "32": {
        start: {
          line: 85,
          column: 14
        },
        end: {
          line: 87,
          column: 40
        }
      },
      "33": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 38
        }
      },
      "34": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "35": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 23
        }
      },
      "36": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 32
        }
      },
      "37": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 93,
          column: 78
        }
      },
      "38": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 15
        }
      },
      "39": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 40
        }
      },
      "40": {
        start: {
          line: 101,
          column: 14
        },
        end: {
          line: 101,
          column: 16
        }
      },
      "41": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "42": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 110,
          column: 8
        }
      },
      "43": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "44": {
        start: {
          line: 117,
          column: 21
        },
        end: {
          line: 117,
          column: 55
        }
      },
      "45": {
        start: {
          line: 118,
          column: 21
        },
        end: {
          line: 118,
          column: 43
        }
      },
      "46": {
        start: {
          line: 121,
          column: 19
        },
        end: {
          line: 121,
          column: 47
        }
      },
      "47": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "48": {
        start: {
          line: 123,
          column: 6
        },
        end: {
          line: 123,
          column: 57
        }
      },
      "49": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 124,
          column: 27
        }
      },
      "50": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "51": {
        start: {
          line: 129,
          column: 19
        },
        end: {
          line: 129,
          column: 40
        }
      },
      "52": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "53": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 60
        }
      },
      "54": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 133,
          column: 40
        }
      },
      "55": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 135,
          column: 61
        }
      },
      "56": {
        start: {
          line: 135,
          column: 55
        },
        end: {
          line: 135,
          column: 59
        }
      },
      "57": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "58": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 39
        }
      },
      "59": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 42
        }
      },
      "60": {
        start: {
          line: 142,
          column: 33
        },
        end: {
          line: 142,
          column: 79
        }
      },
      "61": {
        start: {
          line: 143,
          column: 19
        },
        end: {
          line: 143,
          column: 99
        }
      },
      "62": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "63": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 18
        }
      },
      "64": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "65": {
        start: {
          line: 158,
          column: 29
        },
        end: {
          line: 158,
          column: 58
        }
      },
      "66": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 176,
          column: 7
        }
      },
      "67": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "68": {
        start: {
          line: 162,
          column: 10
        },
        end: {
          line: 162,
          column: 53
        }
      },
      "69": {
        start: {
          line: 163,
          column: 10
        },
        end: {
          line: 163,
          column: 87
        }
      },
      "70": {
        start: {
          line: 165,
          column: 10
        },
        end: {
          line: 171,
          column: 12
        }
      },
      "71": {
        start: {
          line: 170,
          column: 39
        },
        end: {
          line: 170,
          column: 50
        }
      },
      "72": {
        start: {
          line: 173,
          column: 10
        },
        end: {
          line: 173,
          column: 98
        }
      },
      "73": {
        start: {
          line: 174,
          column: 10
        },
        end: {
          line: 174,
          column: 19
        }
      },
      "74": {
        start: {
          line: 178,
          column: 6
        },
        end: {
          line: 178,
          column: 60
        }
      },
      "75": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 180,
          column: 78
        }
      },
      "76": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 181,
          column: 72
        }
      },
      "77": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 189,
          column: 7
        }
      },
      "78": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "79": {
        start: {
          line: 191,
          column: 6
        },
        end: {
          line: 191,
          column: 39
        }
      },
      "80": {
        start: {
          line: 196,
          column: 17
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "81": {
        start: {
          line: 200,
          column: 10
        },
        end: {
          line: 200,
          column: 44
        }
      },
      "82": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 25
        }
      },
      "83": {
        start: {
          line: 205,
          column: 23
        },
        end: {
          line: 205,
          column: 71
        }
      },
      "84": {
        start: {
          line: 206,
          column: 10
        },
        end: {
          line: 206,
          column: 39
        }
      },
      "85": {
        start: {
          line: 207,
          column: 10
        },
        end: {
          line: 207,
          column: 19
        }
      },
      "86": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "87": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 213,
          column: 95
        }
      },
      "88": {
        start: {
          line: 213,
          column: 55
        },
        end: {
          line: 213,
          column: 92
        }
      },
      "89": {
        start: {
          line: 214,
          column: 11
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "90": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 215,
          column: 96
        }
      },
      "91": {
        start: {
          line: 215,
          column: 51
        },
        end: {
          line: 215,
          column: 93
        }
      },
      "92": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 16
        }
      },
      "93": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 221,
          column: 71
        }
      },
      "94": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 67
        }
      },
      "95": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 229,
          column: 6
        }
      },
      "96": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 34
        }
      },
      "97": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 86
        }
      },
      "98": {
        start: {
          line: 236,
          column: 65
        },
        end: {
          line: 236,
          column: 83
        }
      },
      "99": {
        start: {
          line: 239,
          column: 21
        },
        end: {
          line: 239,
          column: 23
        }
      },
      "100": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "101": {
        start: {
          line: 241,
          column: 6
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "102": {
        start: {
          line: 243,
          column: 10
        },
        end: {
          line: 247,
          column: 11
        }
      },
      "103": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 246,
          column: 14
        }
      },
      "104": {
        start: {
          line: 248,
          column: 10
        },
        end: {
          line: 248,
          column: 48
        }
      },
      "105": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 20
        }
      },
      "106": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 294,
          column: 7
        }
      },
      "107": {
        start: {
          line: 274,
          column: 27
        },
        end: {
          line: 274,
          column: 86
        }
      },
      "108": {
        start: {
          line: 275,
          column: 27
        },
        end: {
          line: 275,
          column: 84
        }
      },
      "109": {
        start: {
          line: 276,
          column: 27
        },
        end: {
          line: 276,
          column: 79
        }
      },
      "110": {
        start: {
          line: 287,
          column: 6
        },
        end: {
          line: 287,
          column: 40
        }
      },
      "111": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 40
        }
      },
      "112": {
        start: {
          line: 288,
          column: 6
        },
        end: {
          line: 293,
          column: 7
        }
      },
      "113": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 59
        }
      },
      "114": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 21
        }
      },
      "115": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "116": {
        start: {
          line: 300,
          column: 6
        },
        end: {
          line: 300,
          column: 36
        }
      },
      "117": {
        start: {
          line: 303,
          column: 29
        },
        end: {
          line: 303,
          column: 42
        }
      },
      "118": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 306,
          column: 46
        }
      },
      "119": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 323,
          column: 5
        }
      },
      "120": {
        start: {
          line: 310,
          column: 6
        },
        end: {
          line: 322,
          column: 7
        }
      },
      "121": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 50
        }
      },
      "122": {
        start: {
          line: 313,
          column: 26
        },
        end: {
          line: 313,
          column: 70
        }
      },
      "123": {
        start: {
          line: 314,
          column: 29
        },
        end: {
          line: 314,
          column: 52
        }
      },
      "124": {
        start: {
          line: 315,
          column: 31
        },
        end: {
          line: 315,
          column: 51
        }
      },
      "125": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 42
        }
      },
      "126": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 45
        }
      },
      "127": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 30
        }
      },
      "128": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 83
        }
      },
      "129": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 326,
          column: 58
        }
      },
      "130": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 331,
          column: 49
        }
      },
      "131": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 332,
          column: 55
        }
      },
      "132": {
        start: {
          line: 336,
          column: 29
        },
        end: {
          line: 336,
          column: 42
        }
      },
      "133": {
        start: {
          line: 337,
          column: 23
        },
        end: {
          line: 337,
          column: 50
        }
      },
      "134": {
        start: {
          line: 339,
          column: 20
        },
        end: {
          line: 339,
          column: 44
        }
      },
      "135": {
        start: {
          line: 340,
          column: 33
        },
        end: {
          line: 340,
          column: 83
        }
      },
      "136": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 342,
          column: 43
        }
      },
      "137": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 343,
          column: 59
        }
      },
      "138": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 393,
          column: 5
        }
      },
      "139": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 112
        }
      },
      "140": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 17
        }
      },
      "141": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 75
        }
      },
      "142": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 20
        }
      },
      "143": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 61
        }
      },
      "144": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 49
        }
      },
      "145": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 66
        }
      },
      "146": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 17
        }
      },
      "147": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 81
        }
      },
      "148": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 49
        }
      },
      "149": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 93
        }
      },
      "150": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 17
        }
      },
      "151": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 73
        }
      },
      "152": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 17
        }
      },
      "153": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 27
        }
      },
      "154": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 406,
          column: 5
        }
      },
      "155": {
        start: {
          line: 397,
          column: 21
        },
        end: {
          line: 397,
          column: 67
        }
      },
      "156": {
        start: {
          line: 398,
          column: 6
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "157": {
        start: {
          line: 400,
          column: 10
        },
        end: {
          line: 402,
          column: 11
        }
      },
      "158": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 32
        }
      },
      "159": {
        start: {
          line: 403,
          column: 10
        },
        end: {
          line: 403,
          column: 27
        }
      },
      "160": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 408,
          column: 15
        }
      },
      "161": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 414,
          column: 5
        }
      },
      "162": {
        start: {
          line: 413,
          column: 6
        },
        end: {
          line: 413,
          column: 19
        }
      },
      "163": {
        start: {
          line: 415,
          column: 14
        },
        end: {
          line: 415,
          column: 18
        }
      },
      "164": {
        start: {
          line: 415,
          column: 24
        },
        end: {
          line: 415,
          column: 61
        }
      },
      "165": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 416,
          column: 70
        }
      },
      "166": {
        start: {
          line: 420,
          column: 21
        },
        end: {
          line: 420,
          column: 22
        }
      },
      "167": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 426,
          column: 5
        }
      },
      "168": {
        start: {
          line: 423,
          column: 6
        },
        end: {
          line: 425,
          column: 7
        }
      },
      "169": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 54
        }
      },
      "170": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 428,
          column: 22
        }
      },
      "171": {
        start: {
          line: 432,
          column: 22
        },
        end: {
          line: 432,
          column: 41
        }
      },
      "172": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 433,
          column: 27
        }
      },
      "173": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 434,
          column: 64
        }
      },
      "174": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 439,
          column: 26
        }
      },
      "175": {
        start: {
          line: 440,
          column: 18
        },
        end: {
          line: 440,
          column: 19
        }
      },
      "176": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 447,
          column: 5
        }
      },
      "177": {
        start: {
          line: 443,
          column: 6
        },
        end: {
          line: 446,
          column: 7
        }
      },
      "178": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 35
        }
      },
      "179": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 18
        }
      },
      "180": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 451,
          column: 5
        }
      },
      "181": {
        start: {
          line: 450,
          column: 6
        },
        end: {
          line: 450,
          column: 70
        }
      },
      "182": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 457,
          column: 5
        }
      },
      "183": {
        start: {
          line: 455,
          column: 6
        },
        end: {
          line: 455,
          column: 18
        }
      },
      "184": {
        start: {
          line: 456,
          column: 6
        },
        end: {
          line: 456,
          column: 53
        }
      },
      "185": {
        start: {
          line: 459,
          column: 4
        },
        end: {
          line: 463,
          column: 6
        }
      },
      "186": {
        start: {
          line: 472,
          column: 0
        },
        end: {
          line: 474,
          column: 1
        }
      },
      "187": {
        start: {
          line: 473,
          column: 2
        },
        end: {
          line: 473,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 45
          },
          end: {
            line: 59,
            column: 3
          }
        },
        line: 47
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        },
        loc: {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 98,
            column: 3
          }
        },
        line: 61
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 83,
            column: 44
          },
          end: {
            line: 83,
            column: 45
          }
        },
        loc: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 71
          }
        },
        line: 83
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 100,
            column: 2
          },
          end: {
            line: 100,
            column: 3
          }
        },
        loc: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 100
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 135,
            column: 49
          },
          end: {
            line: 135,
            column: 50
          }
        },
        loc: {
          start: {
            line: 135,
            column: 55
          },
          end: {
            line: 135,
            column: 59
          }
        },
        line: 135
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 170,
            column: 33
          },
          end: {
            line: 170,
            column: 34
          }
        },
        loc: {
          start: {
            line: 170,
            column: 39
          },
          end: {
            line: 170,
            column: 50
          }
        },
        line: 170
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 199,
            column: 19
          },
          end: {
            line: 199,
            column: 20
          }
        },
        loc: {
          start: {
            line: 199,
            column: 24
          },
          end: {
            line: 201,
            column: 9
          }
        },
        line: 199
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 202,
            column: 18
          },
          end: {
            line: 202,
            column: 19
          }
        },
        loc: {
          start: {
            line: 202,
            column: 24
          },
          end: {
            line: 202,
            column: 25
          }
        },
        line: 202
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 21
          }
        },
        loc: {
          start: {
            line: 204,
            column: 34
          },
          end: {
            line: 208,
            column: 9
          }
        },
        line: 204
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 213,
            column: 45
          },
          end: {
            line: 213,
            column: 46
          }
        },
        loc: {
          start: {
            line: 213,
            column: 55
          },
          end: {
            line: 213,
            column: 92
          }
        },
        line: 213
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 215,
            column: 41
          },
          end: {
            line: 215,
            column: 42
          }
        },
        loc: {
          start: {
            line: 215,
            column: 51
          },
          end: {
            line: 215,
            column: 93
          }
        },
        line: 215
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 236,
            column: 60
          },
          end: {
            line: 236,
            column: 61
          }
        },
        loc: {
          start: {
            line: 236,
            column: 65
          },
          end: {
            line: 236,
            column: 83
          }
        },
        line: 236
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 242,
            column: 13
          },
          end: {
            line: 242,
            column: 14
          }
        },
        loc: {
          start: {
            line: 242,
            column: 23
          },
          end: {
            line: 249,
            column: 9
          }
        },
        line: 242
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        loc: {
          start: {
            line: 274,
            column: 25
          },
          end: {
            line: 274,
            column: 88
          }
        },
        line: 274
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 275,
            column: 9
          }
        },
        loc: {
          start: {
            line: 275,
            column: 25
          },
          end: {
            line: 275,
            column: 86
          }
        },
        line: 275
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        loc: {
          start: {
            line: 276,
            column: 25
          },
          end: {
            line: 276,
            column: 81
          }
        },
        line: 276
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 286,
            column: 13
          },
          end: {
            line: 286,
            column: 14
          }
        },
        loc: {
          start: {
            line: 286,
            column: 26
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 286
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 352,
            column: 29
          },
          end: {
            line: 352,
            column: 30
          }
        },
        loc: {
          start: {
            line: 352,
            column: 60
          },
          end: {
            line: 355,
            column: 7
          }
        },
        line: 352
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 357,
            column: 21
          },
          end: {
            line: 357,
            column: 22
          }
        },
        loc: {
          start: {
            line: 357,
            column: 51
          },
          end: {
            line: 360,
            column: 7
          }
        },
        line: 357
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 362,
            column: 20
          },
          end: {
            line: 362,
            column: 21
          }
        },
        loc: {
          start: {
            line: 362,
            column: 43
          },
          end: {
            line: 365,
            column: 7
          }
        },
        line: 362
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 368,
            column: 32
          },
          end: {
            line: 368,
            column: 33
          }
        },
        loc: {
          start: {
            line: 368,
            column: 42
          },
          end: {
            line: 371,
            column: 7
          }
        },
        line: 368
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 373,
            column: 16
          },
          end: {
            line: 373,
            column: 17
          }
        },
        loc: {
          start: {
            line: 373,
            column: 45
          },
          end: {
            line: 376,
            column: 7
          }
        },
        line: 373
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 379,
            column: 20
          },
          end: {
            line: 379,
            column: 21
          }
        },
        loc: {
          start: {
            line: 379,
            column: 46
          },
          end: {
            line: 382,
            column: 7
          }
        },
        line: 379
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 384,
            column: 19
          },
          end: {
            line: 384,
            column: 20
          }
        },
        loc: {
          start: {
            line: 384,
            column: 45
          },
          end: {
            line: 387,
            column: 7
          }
        },
        line: 384
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 390,
            column: 27
          },
          end: {
            line: 390,
            column: 28
          }
        },
        loc: {
          start: {
            line: 390,
            column: 33
          },
          end: {
            line: 392,
            column: 7
          }
        },
        line: 390
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 399,
            column: 9
          }
        },
        loc: {
          start: {
            line: 399,
            column: 23
          },
          end: {
            line: 404,
            column: 9
          }
        },
        line: 399
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 419,
            column: 2
          },
          end: {
            line: 419,
            column: 3
          }
        },
        loc: {
          start: {
            line: 419,
            column: 24
          },
          end: {
            line: 429,
            column: 3
          }
        },
        line: 419
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 431,
            column: 2
          },
          end: {
            line: 431,
            column: 3
          }
        },
        loc: {
          start: {
            line: 431,
            column: 15
          },
          end: {
            line: 435,
            column: 3
          }
        },
        line: 431
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 437,
            column: 2
          },
          end: {
            line: 437,
            column: 3
          }
        },
        loc: {
          start: {
            line: 437,
            column: 19
          },
          end: {
            line: 464,
            column: 3
          }
        },
        line: 437
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 32
          }
        }, {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 13,
            column: 46
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 47,
            column: 43
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "9": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 20
          }
        }, {
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 75,
            column: 37
          }
        }],
        line: 75
      },
      "10": {
        loc: {
          start: {
            line: 85,
            column: 14
          },
          end: {
            line: 87,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 32
          }
        }, {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 87,
            column: 40
          }
        }],
        line: 85
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 55
          }
        }, {
          start: {
            line: 106,
            column: 59
          },
          end: {
            line: 106,
            column: 64
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 122,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 122,
            column: 14
          }
        }, {
          start: {
            line: 122,
            column: 19
          },
          end: {
            line: 122,
            column: 68
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: 134,
            column: 11
          },
          end: {
            line: 139,
            column: 5
          }
        }],
        line: 128
      },
      "15": {
        loc: {
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "16": {
        loc: {
          start: {
            line: 136,
            column: 6
          },
          end: {
            line: 138,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 6
          },
          end: {
            line: 138,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "17": {
        loc: {
          start: {
            line: 184,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "18": {
        loc: {
          start: {
            line: 184,
            column: 10
          },
          end: {
            line: 184,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 10
          },
          end: {
            line: 184,
            column: 23
          }
        }, {
          start: {
            line: 184,
            column: 27
          },
          end: {
            line: 184,
            column: 59
          }
        }],
        line: 184
      },
      "19": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        }, {
          start: {
            line: 214,
            column: 11
          },
          end: {
            line: 216,
            column: 5
          }
        }],
        line: 212
      },
      "20": {
        loc: {
          start: {
            line: 214,
            column: 11
          },
          end: {
            line: 216,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 11
          },
          end: {
            line: 216,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "21": {
        loc: {
          start: {
            line: 243,
            column: 10
          },
          end: {
            line: 247,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 10
          },
          end: {
            line: 247,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "22": {
        loc: {
          start: {
            line: 287,
            column: 6
          },
          end: {
            line: 287,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 6
          },
          end: {
            line: 287,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "23": {
        loc: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "24": {
        loc: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "25": {
        loc: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "26": {
        loc: {
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 396,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 396,
            column: 23
          }
        }, {
          start: {
            line: 396,
            column: 27
          },
          end: {
            line: 396,
            column: 46
          }
        }],
        line: 396
      },
      "27": {
        loc: {
          start: {
            line: 397,
            column: 21
          },
          end: {
            line: 397,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 397,
            column: 21
          },
          end: {
            line: 397,
            column: 40
          }
        }, {
          start: {
            line: 397,
            column: 44
          },
          end: {
            line: 397,
            column: 67
          }
        }],
        line: 397
      },
      "28": {
        loc: {
          start: {
            line: 400,
            column: 10
          },
          end: {
            line: 402,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 10
          },
          end: {
            line: 402,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "29": {
        loc: {
          start: {
            line: 400,
            column: 14
          },
          end: {
            line: 400,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 14
          },
          end: {
            line: 400,
            column: 20
          }
        }, {
          start: {
            line: 400,
            column: 24
          },
          end: {
            line: 400,
            column: 59
          }
        }],
        line: 400
      },
      "30": {
        loc: {
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "31": {
        loc: {
          start: {
            line: 423,
            column: 6
          },
          end: {
            line: 425,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 6
          },
          end: {
            line: 425,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "32": {
        loc: {
          start: {
            line: 423,
            column: 10
          },
          end: {
            line: 423,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 10
          },
          end: {
            line: 423,
            column: 16
          }
        }, {
          start: {
            line: 423,
            column: 20
          },
          end: {
            line: 423,
            column: 33
          }
        }, {
          start: {
            line: 423,
            column: 37
          },
          end: {
            line: 423,
            column: 57
          }
        }],
        line: 423
      },
      "33": {
        loc: {
          start: {
            line: 443,
            column: 6
          },
          end: {
            line: 446,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 6
          },
          end: {
            line: 446,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "34": {
        loc: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 451,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 451,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "35": {
        loc: {
          start: {
            line: 454,
            column: 4
          },
          end: {
            line: 457,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 4
          },
          end: {
            line: 457,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "36": {
        loc: {
          start: {
            line: 472,
            column: 0
          },
          end: {
            line: 474,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 0
          },
          end: {
            line: 474,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "37": {
        loc: {
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 472,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 472,
            column: 33
          }
        }, {
          start: {
            line: 472,
            column: 37
          },
          end: {
            line: 472,
            column: 74
          }
        }],
        line: 472
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa32b1c7d0a91fad3ae298d94ea9b9f7332a2f7c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ppxhj1wxg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ppxhj1wxg();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classPrivateMethodInitSpec(e, a) { _checkPrivateRedeclaration(e, a), a.add(e); }
function _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError("Cannot initialize the same private elements twice on an object"); }
function _assertClassBrand(e, t, n) { if ("function" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError("Private element is not present on this object"); }
/* wasm-module-loader.js
 * Universal (ESM + CJS) progressive WASM loader.
 * Author: Bron refactor 2025‑07‑01
 */

import path from 'node:path';
import { promises as fs } from 'node:fs';
import { fileURLToPath, pathToFileURL } from 'node:url';
import { webcrypto as nodeCrypto } from 'node:crypto';

// ────────────────────────────────────────────────────────────────────────────────
// helpers ────────────────────────────────────────────────────────────────────────
const crypto =
/* istanbul ignore next */
(cov_2ppxhj1wxg().s[0]++, (_ref = (cov_2ppxhj1wxg().b[0][0]++, globalThis.crypto)) !== null && _ref !== void 0 ? _ref : (cov_2ppxhj1wxg().b[0][1]++, nodeCrypto)); // browser | Node
const __filename =
/* istanbul ignore next */
(cov_2ppxhj1wxg().s[1]++, fileURLToPath(import.meta.url));
const __dirname =
/* istanbul ignore next */
(cov_2ppxhj1wxg().s[2]++, path.dirname(__filename));

// ────────────────────────────────────────────────────────────────────────────────
/* istanbul ignore next */
var _WasmModuleLoader_brand = /*#__PURE__*/new WeakSet();
class WasmModuleLoader {
  constructor() {
    /* istanbul ignore next */
    /* ── internal ─────────────────────────────────────────────────────────────── */
    _classPrivateMethodInitSpec(this, _WasmModuleLoader_brand);
    cov_2ppxhj1wxg().f[0]++;
    cov_2ppxhj1wxg().s[3]++;
    this.modules = new Map();
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[4]++;
    this.loadingPromises = new Map();
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[5]++;
    this.loadingStrategy = 'on-demand'; // eager | on-demand | progressive
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[6]++;
    this.baseDir = __dirname; // one-liner dirname
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[7]++;
    this.wasmCache = new Map(); // Cache compiled WASM modules
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[8]++;
    this.cacheTimeout = 3600000; // 1 hour cache timeout
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[9]++;
    this.moduleManifest = {
      /* The only compiled artefact today. Others are historical → optional */
      core: {
        path: '../wasm/ruv_swarm_wasm_bg.wasm',
        jsBindings: '../wasm/ruv_swarm_wasm.js',
        size: 512 * 1024,
        priority: 'high',
        dependencies: [],
        exists: true,
        type: 'wasm-bindgen'
      },
      /* legacy / optional stubs */
      neural: {
        path: '../wasm/ruv-fann.wasm',
        size: 1024 * 1024,
        priority: 'medium',
        dependencies: ['core'],
        exists: false,
        optional: true
      },
      forecasting: {
        path: '../wasm/neuro-divergent.wasm',
        size: 1536 * 1024,
        priority: 'medium',
        dependencies: ['core'],
        exists: false,
        optional: true
      },
      swarm: {
        path: '../wasm/ruv-swarm-orchestration.wasm',
        size: 768 * 1024,
        priority: 'high',
        dependencies: ['core'],
        exists: false,
        optional: true
      },
      persistence: {
        path: '../wasm/ruv-swarm-persistence.wasm',
        size: 256 * 1024,
        priority: 'high',
        dependencies: ['core'],
        exists: false,
        optional: true
      }
    };
  }

  /* ── public API ───────────────────────────────────────────────────────────── */
  initialize() {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* (strategy =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().b[1][0]++, 'progressive')) {
      cov_2ppxhj1wxg().f[1]++;
      cov_2ppxhj1wxg().s[10]++;
      _this.loadingStrategy = strategy;
      cov_2ppxhj1wxg().s[11]++;
      if (strategy === 'eager') {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[2][0]++;
        cov_2ppxhj1wxg().s[12]++;
        return /* istanbul ignore next */ /* istanbul ignore next */_assertClassBrand(
        /* istanbul ignore next */
        _WasmModuleLoader_brand, _this, _loadAllModules).call(_this);
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[2][1]++;
      }
      cov_2ppxhj1wxg().s[13]++;
      if (strategy === 'progressive') {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[3][0]++;
        cov_2ppxhj1wxg().s[14]++;
        return /* istanbul ignore next */ /* istanbul ignore next */_assertClassBrand(
        /* istanbul ignore next */
        _WasmModuleLoader_brand, _this, _loadCoreOnly).call(_this);
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[3][1]++;
      }
      cov_2ppxhj1wxg().s[15]++;
      if (strategy === 'on-demand') {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[4][0]++;
        cov_2ppxhj1wxg().s[16]++;
        return /* istanbul ignore next */ /* istanbul ignore next */_assertClassBrand(
        /* istanbul ignore next */
        _WasmModuleLoader_brand, _this, _setupLazyProxies).call(_this);
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[4][1]++;
      }
      cov_2ppxhj1wxg().s[17]++;
      throw new Error(`Unknown loading strategy: ${strategy}`);
    }).apply(this, arguments);
  }
  loadModule(name) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_2ppxhj1wxg().f[2]++;
      cov_2ppxhj1wxg().s[18]++;
      if (_this2.modules.has(name)) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[5][0]++;
        cov_2ppxhj1wxg().s[19]++;
        return _this2.modules.get(name);
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[5][1]++;
      }
      cov_2ppxhj1wxg().s[20]++;
      if (_this2.loadingPromises.has(name)) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[6][0]++;
        cov_2ppxhj1wxg().s[21]++;
        return _this2.loadingPromises.get(name);
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[6][1]++;
      }
      const info =
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().s[22]++, _this2.moduleManifest[name]);
      cov_2ppxhj1wxg().s[23]++;
      if (!info) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[7][0]++;
        cov_2ppxhj1wxg().s[24]++;
        throw new Error(`Unknown module: ${name}`);
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[7][1]++;
      }

      /* optional module not built – silently alias to core when possible */
      cov_2ppxhj1wxg().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[9][0]++, !info.exists) &&
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[9][1]++, info.optional)) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[8][0]++;
        cov_2ppxhj1wxg().s[26]++;
        /* istanbul ignore next */
        yield _this2.loadModule('core');
        const coreMod =
        /* istanbul ignore next */
        (cov_2ppxhj1wxg().s[27]++, _this2.modules.get('core'));
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[28]++;
        _this2.modules.set(name, coreMod);
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[29]++;
        return coreMod;
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[8][1]++;
      }

      /* ensure deps first */
      cov_2ppxhj1wxg().s[30]++;
      /* istanbul ignore next */
      yield Promise.all(info.dependencies.map(dep => {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().f[3]++;
        cov_2ppxhj1wxg().s[31]++;
        return _this2.loadModule(dep);
      }));
      const p =
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().s[32]++, name === 'core' ?
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[10][0]++,
      /* istanbul ignore next */
      _assertClassBrand(
      /* istanbul ignore next */
      _WasmModuleLoader_brand, _this2, _loadCoreBindings).call(_this2)) :
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[10][1]++,
      /* istanbul ignore next */
      _assertClassBrand(
      /* istanbul ignore next */
      _WasmModuleLoader_brand, _this2, _instantiateRaw).call(_this2, name, info)));
      cov_2ppxhj1wxg().s[33]++;
      _this2.loadingPromises.set(name, p);
      cov_2ppxhj1wxg().s[34]++;
      try {
        const m =
        /* istanbul ignore next */
        (cov_2ppxhj1wxg().s[35]++, yield p);
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[36]++;
        _this2.modules.set(name, m);
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[37]++;
        console.log(`✅  Loaded WASM module: ${name} (${
        /* istanbul ignore next */
        /* istanbul ignore next */
        _assertClassBrand(
        /* istanbul ignore next */
        _WasmModuleLoader_brand, _this2, _fmt).call(_this2, info.size)})`);
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[38]++;
        return m;
      } finally {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[39]++;
        _this2.loadingPromises.delete(name);
      }
    })();
  }
  getModuleStatus() {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().f[4]++;
    const s =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[40]++, {});
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[41]++;
    for (const [n, i] of Object.entries(this.moduleManifest)) {
      /* istanbul ignore next */
      var _ref2, _this$modules$get;
      cov_2ppxhj1wxg().s[42]++;
      s[n] = {
        loaded: this.modules.has(n),
        loading: this.loadingPromises.has(n),
        placeholder:
        /* istanbul ignore next */
        (_ref2 = (cov_2ppxhj1wxg().b[11][0]++, (_this$modules$get = this.modules.get(n)) === null || _this$modules$get === void 0 ? void 0 :
        /* istanbul ignore next */
        _this$modules$get.isPlaceholder)) !== null && _ref2 !== void 0 ? _ref2 : (cov_2ppxhj1wxg().b[11][1]++, false),
        size: i.size,
        priority: i.priority,
        deps: i.dependencies
      };
    }
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[43]++;
    return s;
  }
  getTotalMemoryUsage() {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().f[27]++;
    let totalBytes =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[166]++, 0);
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[167]++;
    for (const [name, module] of this.modules.entries()) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[168]++;
      if (
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[32][0]++, module) &&
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[32][1]++, module.memory) &&
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[32][2]++, module.memory.buffer)) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[31][0]++;
        cov_2ppxhj1wxg().s[169]++;
        totalBytes += module.memory.buffer.byteLength;
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[31][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[170]++;
    return totalBytes;
  }
  clearCache() {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().f[28]++;
    const cacheSize =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[171]++, this.wasmCache.size);
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[172]++;
    this.wasmCache.clear();
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[173]++;
    console.log(`🧹 Cleared WASM cache (${cacheSize} modules)`);
  }
  optimizeMemory() {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().f[29]++;
    // Clear expired cache entries
    const now =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[174]++, Date.now());
    let expired =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[175]++, 0);
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[176]++;
    for (const [key, cached] of this.wasmCache.entries()) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[177]++;
      if (now - cached.timestamp > this.cacheTimeout) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[33][0]++;
        cov_2ppxhj1wxg().s[178]++;
        this.wasmCache.delete(key);
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[179]++;
        expired++;
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[33][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[180]++;
    if (expired > 0) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[34][0]++;
      cov_2ppxhj1wxg().s[181]++;
      console.log(`🧹 Removed ${expired} expired WASM cache entries`);
    } else
    /* istanbul ignore next */
    {
      cov_2ppxhj1wxg().b[34][1]++;
    }

    // Force garbage collection if available
    cov_2ppxhj1wxg().s[182]++;
    if (global.gc) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[35][0]++;
      cov_2ppxhj1wxg().s[183]++;
      global.gc();
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[184]++;
      console.log('🧹 Triggered garbage collection');
    } else
    /* istanbul ignore next */
    {
      cov_2ppxhj1wxg().b[35][1]++;
    }
    cov_2ppxhj1wxg().s[185]++;
    return {
      cacheSize: this.wasmCache.size,
      memoryUsage: this.getTotalMemoryUsage(),
      expiredEntries: expired
    };
  }
}

// ────────────────────────────────────────────────────────────────────────────────
/* istanbul ignore next */
function _instantiateRaw(_x, _x2) {
  return _instantiateRaw2.apply(this, arguments);
}
function _instantiateRaw2() {
  _instantiateRaw2 = _asyncToGenerator(function* (name, info) {
    const wasmPath =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[44]++, path.join(this.baseDir, info.path));
    const cacheKey =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[45]++, `${name}-${info.path}`);

    // Check cache first
    const cached =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[46]++, this.wasmCache.get(cacheKey));
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[47]++;
    if (
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().b[13][0]++, cached) &&
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().b[13][1]++, Date.now() - cached.timestamp < this.cacheTimeout)) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[12][0]++;
      cov_2ppxhj1wxg().s[48]++;
      console.log(`✨ Using cached WASM module: ${name}`);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[49]++;
      return cached.module;
    } else
    /* istanbul ignore next */
    {
      cov_2ppxhj1wxg().b[12][1]++;
    }
    let buffer;
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[50]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[14][0]++;
      // browser
      const resp =
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().s[51]++, yield fetch(wasmPath));
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[52]++;
      if (!resp.ok) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[15][0]++;
        cov_2ppxhj1wxg().s[53]++;
        throw new Error(`fetch failed: ${resp.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[15][1]++;
      }
      cov_2ppxhj1wxg().s[54]++;
      buffer =
      /* istanbul ignore next */
      yield resp.arrayBuffer();
    } else {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[14][1]++;
      cov_2ppxhj1wxg().s[55]++;
      // Node
      buffer =
      /* istanbul ignore next */
      yield fs.readFile(wasmPath).catch(() => {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().f[5]++;
        cov_2ppxhj1wxg().s[56]++;
        return null;
      });
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[57]++;
      if (!buffer) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().b[16][0]++;
        cov_2ppxhj1wxg().s[58]++;
        return /* istanbul ignore next */ /* istanbul ignore next */_assertClassBrand(
        /* istanbul ignore next */
        _WasmModuleLoader_brand, this, _placeholder).call(this, name);
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[16][1]++;
      }
    }
    const imports =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[59]++,
    /* istanbul ignore next */
    _assertClassBrand(
    /* istanbul ignore next */
    _WasmModuleLoader_brand, this, _importsFor).call(this, name));
    const {
      instance,
      module
    } =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[60]++, yield WebAssembly.instantiate(buffer, imports));
    const result =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[61]++, {
      instance,
      module,
      exports: instance.exports,
      memory: instance.exports.memory
    });

    // Cache the compiled module
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[62]++;
    this.wasmCache.set(cacheKey, {
      module: result,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[63]++;
    return result;
  });
  return _instantiateRaw2.apply(this, arguments);
}
/* istanbul ignore next */
function _loadCoreBindings() {
  return _loadCoreBindings2.apply(this, arguments);
}
function _loadCoreBindings2() {
  _loadCoreBindings2 = _asyncToGenerator(function* () {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[64]++;
    /* Enhanced WASM loader with context-aware path resolution */
    try {
      // Try multiple path resolution strategies
      const pathCandidates =
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().s[65]++,
      /* istanbul ignore next */
      _assertClassBrand(
      /* istanbul ignore next */
      _WasmModuleLoader_brand, this, _getWasmPathCandidates).call(this));
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[66]++;
      for (const pathCandidate of pathCandidates) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[67]++;
        try {
          /* istanbul ignore next */
          cov_2ppxhj1wxg().s[68]++;
          /* istanbul ignore next */
          yield /* istanbul ignore next */_assertClassBrand(
          /* istanbul ignore next */
          _WasmModuleLoader_brand, this, _tryLoadFromPath).call(this, pathCandidate);
          /* istanbul ignore next */
          cov_2ppxhj1wxg().s[69]++;
          console.log(`✅ Successfully loaded WASM from: ${pathCandidate.description}`);
          /* istanbul ignore next */
          cov_2ppxhj1wxg().s[70]++;
          return {
            instance: {
              exports:
              /* istanbul ignore next */
              /* istanbul ignore next */
              _assertClassBrand(
              /* istanbul ignore next */
              _WasmModuleLoader_brand, this, _createBindingsApi).call(this)
            },
            module: null,
            exports:
            /* istanbul ignore next */
            /* istanbul ignore next */
            _assertClassBrand(
            /* istanbul ignore next */
            _WasmModuleLoader_brand, this, _createBindingsApi).call(this),
            memory: new WebAssembly.Memory({
              initial: 256,
              maximum: 4096
            }),
            getTotalMemoryUsage: () => {
              /* istanbul ignore next */
              cov_2ppxhj1wxg().f[6]++;
              cov_2ppxhj1wxg().s[71]++;
              return 256 * 65536;
            } // 256 pages * 64KB
          };
        } catch (pathError) {
          /* istanbul ignore next */
          cov_2ppxhj1wxg().s[72]++;
          console.debug(`❌ Failed to load from ${pathCandidate.description}:`, pathError.message);
          /* istanbul ignore next */
          cov_2ppxhj1wxg().s[73]++;
          continue;
        }
      }
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[74]++;
      throw new Error('All WASM loading strategies failed');
    } catch (error) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[75]++;
      console.error('Failed to load core module via bindings loader:', error);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[76]++;
      console.warn('⚠️ Falling back to placeholder WASM functionality');

      // Log specific import errors for debugging
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[77]++;
      if (
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[18][0]++, error.message) &&
      /* istanbul ignore next */
      (cov_2ppxhj1wxg().b[18][1]++, error.message.includes('import'))) {
        /* istanbul ignore next */
        var _error$stack;
        cov_2ppxhj1wxg().b[17][0]++;
        cov_2ppxhj1wxg().s[78]++;
        console.error('WASM import error details:', {
          message: error.message,
          stack:
          /* istanbul ignore next */
          (_error$stack = error.stack) === null || _error$stack === void 0 ? void 0 :
          /* istanbul ignore next */
          _error$stack.split('\n').slice(0, 5).join('\n')
        });
      } else
      /* istanbul ignore next */
      {
        cov_2ppxhj1wxg().b[17][1]++;
      }
      cov_2ppxhj1wxg().s[79]++;
      return /* istanbul ignore next */ /* istanbul ignore next */_assertClassBrand(
      /* istanbul ignore next */
      _WasmModuleLoader_brand, this, _placeholder).call(this, 'core');
    }
  });
  return _loadCoreBindings2.apply(this, arguments);
}
/* istanbul ignore next */
function _importsFor(name) {
  const base =
  /* istanbul ignore next */
  (cov_2ppxhj1wxg().s[80]++, {
    env: {
      memory: new WebAssembly.Memory({
        initial: 256,
        maximum: 4096
      })
    },
    wasi_snapshot_preview1: {
      proc_exit: c => {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().f[7]++;
        cov_2ppxhj1wxg().s[81]++;
        throw new Error(`WASI exit ${c}`);
      },
      fd_write: () => {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().f[8]++;
        cov_2ppxhj1wxg().s[82]++;
        return 0;
      },
      /* …minimal stubs… */
      random_get: (ptr, len) => {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().f[9]++;
        const view =
        /* istanbul ignore next */
        (cov_2ppxhj1wxg().s[83]++, new Uint8Array(base.env.memory.buffer, ptr, len));
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[84]++;
        crypto.getRandomValues(view);
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[85]++;
        return 0;
      }
    }
  });
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[86]++;
  if (name === 'neural') {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().b[19][0]++;
    cov_2ppxhj1wxg().s[87]++;
    base.neural = {
      log_training_progress: (e, l) => {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().f[10]++;
        cov_2ppxhj1wxg().s[88]++;
        return console.log(`Epoch ${e} → loss ${l}`);
      }
    };
  } else {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().b[19][1]++;
    cov_2ppxhj1wxg().s[89]++;
    if (name === 'forecasting') {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[20][0]++;
      cov_2ppxhj1wxg().s[90]++;
      base.forecasting = {
        log_forecast: (m, h) => {
          /* istanbul ignore next */
          cov_2ppxhj1wxg().f[11]++;
          cov_2ppxhj1wxg().s[91]++;
          return console.log(`Forecast ${m}, horizon ${h}`);
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_2ppxhj1wxg().b[20][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[92]++;
  return base;
}
/* istanbul ignore next */
function _placeholder(name) {
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[93]++;
  console.warn(`⚠️  Using placeholder for missing module '${name}'`);
  const mem =
  /* istanbul ignore next */
  (cov_2ppxhj1wxg().s[94]++, new WebAssembly.Memory({
    initial: 1,
    maximum: 10
  }));
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[95]++;
  return {
    instance: {
      exports: {
        memory: mem
      }
    },
    module: null,
    exports: {
      memory: mem
    },
    memory: mem,
    isPlaceholder: true
  };
}
/* istanbul ignore next */
function _loadCoreOnly() {
  return _loadCoreOnly2.apply(this, arguments);
}
function _loadCoreOnly2() {
  _loadCoreOnly2 = _asyncToGenerator(function* () {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[96]++;
    /* istanbul ignore next */
    yield this.loadModule('core');
  });
  return _loadCoreOnly2.apply(this, arguments);
}
/* istanbul ignore next */
function _loadAllModules() {
  return _loadAllModules2.apply(this, arguments);
}
function _loadAllModules2() {
  _loadAllModules2 = _asyncToGenerator(function* () {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[97]++;
    return Promise.all(Object.keys(this.moduleManifest).map(n => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[12]++;
      cov_2ppxhj1wxg().s[98]++;
      return this.loadModule(n);
    }));
  });
  return _loadAllModules2.apply(this, arguments);
}
/* istanbul ignore next */
function _setupLazyProxies() {
  const proxyBag =
  /* istanbul ignore next */
  (cov_2ppxhj1wxg().s[99]++, {});
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[100]++;
  for (const n of Object.keys(this.moduleManifest)) {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[101]++;
    proxyBag[n] = new Proxy({}, {
      get: (_, p) => {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().f[13]++;
        cov_2ppxhj1wxg().s[102]++;
        if (!this.modules.has(n)) {
          /* istanbul ignore next */
          cov_2ppxhj1wxg().b[21][0]++;
          cov_2ppxhj1wxg().s[103]++;
          throw new Error(`Module '${n}' not yet loaded; await loader.loadModule('${n}') first`);
        } else
        /* istanbul ignore next */
        {
          cov_2ppxhj1wxg().b[21][1]++;
        }
        cov_2ppxhj1wxg().s[104]++;
        return this.modules.get(n).exports[p];
      }
    });
  }
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[105]++;
  return proxyBag;
}
/* istanbul ignore next */
function _getWasmPathCandidates() {
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[106]++;
  return [{
    description: 'Local development (relative to src/)',
    wasmDir: path.join(this.baseDir, '..', 'wasm'),
    loaderPath: path.join(this.baseDir, '..', 'wasm', 'wasm-bindings-loader.mjs'),
    wasmBinary: path.join(this.baseDir, '..', 'wasm', 'ruv_swarm_wasm_bg.wasm'),
    jsBindings: path.join(this.baseDir, '..', 'wasm', 'ruv_swarm_wasm.js')
  }, {
    description: 'NPM package installation (adjacent to src/)',
    wasmDir: path.join(this.baseDir, '..', '..', 'wasm'),
    loaderPath: path.join(this.baseDir, '..', '..', 'wasm', 'wasm-bindings-loader.mjs'),
    wasmBinary: path.join(this.baseDir, '..', '..', 'wasm', 'ruv_swarm_wasm_bg.wasm'),
    jsBindings: path.join(this.baseDir, '..', '..', 'wasm', 'ruv_swarm_wasm.js')
  }, {
    description: 'Global npm installation',
    wasmDir: path.join(path.dirname(require.resolve('ruv-swarm/package.json')), 'wasm'),
    get loaderPath() {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[14]++;
      cov_2ppxhj1wxg().s[107]++;
      return path.join(this.wasmDir, 'wasm-bindings-loader.mjs');
    },
    get wasmBinary() {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[15]++;
      cov_2ppxhj1wxg().s[108]++;
      return path.join(this.wasmDir, 'ruv_swarm_wasm_bg.wasm');
    },
    get jsBindings() {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[16]++;
      cov_2ppxhj1wxg().s[109]++;
      return path.join(this.wasmDir, 'ruv_swarm_wasm.js');
    }
  }, {
    description: 'Bundled WASM (inline)',
    wasmDir: null,
    loaderPath: null,
    wasmBinary: null,
    jsBindings: null,
    inline: true
  }].filter(candidate => {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().f[17]++;
    cov_2ppxhj1wxg().s[110]++;
    if (candidate.inline) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[22][0]++;
      cov_2ppxhj1wxg().s[111]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2ppxhj1wxg().b[22][1]++;
    }
    cov_2ppxhj1wxg().s[112]++;
    try {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[113]++;
      // Check if the wasm directory exists
      return require('fs').existsSync(candidate.wasmDir);
    } catch {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[114]++;
      return false;
    }
  });
}
/* istanbul ignore next */
function _tryLoadFromPath(_x3) {
  return _tryLoadFromPath2.apply(this, arguments);
}
function _tryLoadFromPath2() {
  _tryLoadFromPath2 = _asyncToGenerator(function* (pathCandidate) {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[115]++;
    if (pathCandidate.inline) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[23][0]++;
      cov_2ppxhj1wxg().s[116]++;
      // Use inline/bundled WASM approach
      return /* istanbul ignore next */ /* istanbul ignore next */_assertClassBrand(
      /* istanbul ignore next */
      _WasmModuleLoader_brand, this, _loadInlineWasm).call(this);
    } else
    /* istanbul ignore next */
    {
      cov_2ppxhj1wxg().b[23][1]++;
    }
    const {
      promises: fs
    } =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[117]++, require('fs'));

    // Check if required files exist
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[118]++;
    /* istanbul ignore next */
    yield fs.access(pathCandidate.wasmBinary);

    // Try to load the wasm-bindings-loader if it exists
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[119]++;
    if (pathCandidate.loaderPath) {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().b[24][0]++;
      cov_2ppxhj1wxg().s[120]++;
      try {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[121]++;
        /* istanbul ignore next */
        yield fs.access(pathCandidate.loaderPath);
        const loaderURL =
        /* istanbul ignore next */
        (cov_2ppxhj1wxg().s[122]++, pathToFileURL(pathCandidate.loaderPath).href);
        const loaderModule =
        /* istanbul ignore next */
        (cov_2ppxhj1wxg().s[123]++, yield import(loaderURL));
        const bindingsLoader =
        /* istanbul ignore next */
        (cov_2ppxhj1wxg().s[124]++, loaderModule.default);
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[125]++;
        /* istanbul ignore next */
        yield bindingsLoader.initialize();
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[126]++;
        this.loadedBindings = bindingsLoader;
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[127]++;
        return bindingsLoader;
      } catch (loaderError) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().s[128]++;
        console.debug('Loader not available, falling back to direct WASM loading');
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ppxhj1wxg().b[24][1]++;
    }

    // Fallback to direct WASM loading
    cov_2ppxhj1wxg().s[129]++;
    return /* istanbul ignore next */ /* istanbul ignore next */_assertClassBrand(
    /* istanbul ignore next */
    _WasmModuleLoader_brand, this, _loadDirectWasm).call(this, pathCandidate.wasmBinary);
  });
  return _tryLoadFromPath2.apply(this, arguments);
}
/* istanbul ignore next */
function _loadInlineWasm() {
  return _loadInlineWasm2.apply(this, arguments);
}
function _loadInlineWasm2() {
  _loadInlineWasm2 = _asyncToGenerator(function* () {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[130]++;
    // Placeholder for inline WASM - could be base64 encoded or bundled
    console.log('Using inline WASM placeholder');
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[131]++;
    throw new Error('Inline WASM not implemented yet');
  });
  return _loadInlineWasm2.apply(this, arguments);
}
/* istanbul ignore next */
function _loadDirectWasm(_x4) {
  return _loadDirectWasm2.apply(this, arguments);
}
function _loadDirectWasm2() {
  _loadDirectWasm2 = _asyncToGenerator(function* (wasmPath) {
    const {
      promises: fs
    } =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[132]++, require('fs'));
    const wasmBuffer =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[133]++, yield fs.readFile(wasmPath));
    const imports =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[134]++,
    /* istanbul ignore next */
    _assertClassBrand(
    /* istanbul ignore next */
    _WasmModuleLoader_brand, this, _importsFor).call(this, 'core'));
    const {
      instance,
      module
    } =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[135]++, yield WebAssembly.instantiate(wasmBuffer, imports));
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[136]++;
    this.loadedWasm = {
      instance,
      module
    };
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[137]++;
    return {
      instance,
      module,
      exports: instance.exports
    };
  });
  return _loadDirectWasm2.apply(this, arguments);
}
/* istanbul ignore next */
function _createBindingsApi() {
  // Create a minimal API that matches what the bindings would provide
  const api =
  /* istanbul ignore next */
  (cov_2ppxhj1wxg().s[138]++, {
    memory: new WebAssembly.Memory({
      initial: 256,
      maximum: 4096
    }),
    // Neural network functions
    create_neural_network: (layers, neurons_per_layer) => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[18]++;
      cov_2ppxhj1wxg().s[139]++;
      console.log(`Creating neural network with ${layers} layers and ${neurons_per_layer} neurons per layer`);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[140]++;
      return 1;
    },
    train_network: (network_id, data, epochs) => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[19]++;
      cov_2ppxhj1wxg().s[141]++;
      console.log(`Training network ${network_id} for ${epochs} epochs`);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[142]++;
      return true;
    },
    forward_pass: (network_id, input) => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[20]++;
      cov_2ppxhj1wxg().s[143]++;
      console.log(`Forward pass on network ${network_id}`);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[144]++;
      return new Float32Array([0.5, 0.5, 0.5]);
    },
    // Forecasting functions
    create_forecasting_model: type => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[21]++;
      cov_2ppxhj1wxg().s[145]++;
      console.log(`Creating forecasting model of type ${type}`);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[146]++;
      return 1;
    },
    forecast: (model_id, data, horizon) => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[22]++;
      cov_2ppxhj1wxg().s[147]++;
      console.log(`Forecasting with model ${model_id} for horizon ${horizon}`);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[148]++;
      return new Float32Array([0.1, 0.2, 0.3]);
    },
    // Swarm functions
    create_swarm: (topology, max_agents) => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[23]++;
      cov_2ppxhj1wxg().s[149]++;
      console.log(`Creating swarm with ${topology} topology and ${max_agents} max agents`);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[150]++;
      return 1;
    },
    spawn_agent: (swarm_id, agent_type) => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[24]++;
      cov_2ppxhj1wxg().s[151]++;
      console.log(`Spawning ${agent_type} agent in swarm ${swarm_id}`);
      /* istanbul ignore next */
      cov_2ppxhj1wxg().s[152]++;
      return 1;
    },
    // Memory management
    getTotalMemoryUsage: () => {
      /* istanbul ignore next */
      cov_2ppxhj1wxg().f[25]++;
      cov_2ppxhj1wxg().s[153]++;
      return 256 * 65536; // 256 pages * 64KB
    }
  });

  // If we have actual WASM loaded, proxy to it
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[154]++;
  if (
  /* istanbul ignore next */
  (cov_2ppxhj1wxg().b[26][0]++, this.loadedWasm) ||
  /* istanbul ignore next */
  (cov_2ppxhj1wxg().b[26][1]++, this.loadedBindings)) {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().b[25][0]++;
    const target =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[155]++,
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().b[27][0]++, this.loadedBindings) ||
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().b[27][1]++, this.loadedWasm.exports));
    /* istanbul ignore next */
    cov_2ppxhj1wxg().s[156]++;
    return new Proxy(api, {
      get(obj, prop) {
        /* istanbul ignore next */
        cov_2ppxhj1wxg().f[26]++;
        cov_2ppxhj1wxg().s[157]++;
        if (
        /* istanbul ignore next */
        (cov_2ppxhj1wxg().b[29][0]++, target) &&
        /* istanbul ignore next */
        (cov_2ppxhj1wxg().b[29][1]++, typeof target[prop] !== 'undefined')) {
          /* istanbul ignore next */
          cov_2ppxhj1wxg().b[28][0]++;
          cov_2ppxhj1wxg().s[158]++;
          return target[prop];
        } else
        /* istanbul ignore next */
        {
          cov_2ppxhj1wxg().b[28][1]++;
        }
        cov_2ppxhj1wxg().s[159]++;
        return obj[prop];
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_2ppxhj1wxg().b[25][1]++;
  }
  cov_2ppxhj1wxg().s[160]++;
  return api;
}
/* istanbul ignore next */
function _fmt(b) {
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[161]++;
  if (!b) {
    /* istanbul ignore next */
    cov_2ppxhj1wxg().b[30][0]++;
    cov_2ppxhj1wxg().s[162]++;
    return '0 B';
  } else
  /* istanbul ignore next */
  {
    cov_2ppxhj1wxg().b[30][1]++;
  }
  const k =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[163]++, 1024),
    i =
    /* istanbul ignore next */
    (cov_2ppxhj1wxg().s[164]++, Math.floor(Math.log(b) / Math.log(k)));
  /* istanbul ignore next */
  cov_2ppxhj1wxg().s[165]++;
  return `${(b / k ** i).toFixed(1)} ${['B', 'KB', 'MB', 'GB'][i]}`;
}
export { WasmModuleLoader };
export default WasmModuleLoader; // ESM default

/* CJS interop --------------------------------------------------------------- */
/* istanbul ignore next */
cov_2ppxhj1wxg().s[186]++;
if (
/* istanbul ignore next */
(cov_2ppxhj1wxg().b[37][0]++, typeof module !== 'undefined') &&
/* istanbul ignore next */
(cov_2ppxhj1wxg().b[37][1]++, typeof module.exports !== 'undefined')) {
  /* istanbul ignore next */
  cov_2ppxhj1wxg().b[36][0]++;
  cov_2ppxhj1wxg().s[187]++;
  module.exports = WasmModuleLoader; // require('./wasm-module-loader')
} else
/* istanbul ignore next */
{
  cov_2ppxhj1wxg().b[36][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,