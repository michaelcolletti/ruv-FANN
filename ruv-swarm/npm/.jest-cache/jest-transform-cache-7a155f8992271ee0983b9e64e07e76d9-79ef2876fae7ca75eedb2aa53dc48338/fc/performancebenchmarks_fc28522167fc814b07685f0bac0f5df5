ef75e004410f0ecaf2684432c4c1df50
/* istanbul ignore next */
function cov_vh7yt0zoj() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/performance-benchmarks.js";
  var hash = "c08d85fe681f4adb30f3fe3c12124a5235bf4664";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/performance-benchmarks.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "1": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "2": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 25
        }
      },
      "3": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "4": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 27
        }
      },
      "5": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "6": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "7": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "8": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 47
        }
      },
      "9": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 54
        }
      },
      "10": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "11": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 54
        }
      },
      "12": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 73
        }
      },
      "13": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "14": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 73
        }
      },
      "15": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 44
        }
      },
      "16": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "17": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "18": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 56
        }
      },
      "19": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 79
        }
      },
      "20": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 53
        }
      },
      "21": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 72,
          column: 73
        }
      },
      "22": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 75,
          column: 58
        }
      },
      "23": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 83
        }
      },
      "24": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 56
        }
      },
      "25": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 79
        }
      },
      "26": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 64
        }
      },
      "27": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 95
        }
      },
      "28": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 59
        }
      },
      "29": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 85
        }
      },
      "30": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 63
        }
      },
      "31": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 91
        }
      },
      "32": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 94,
          column: 58
        }
      },
      "33": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 45
        }
      },
      "34": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 80
        }
      },
      "35": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 78
        }
      },
      "36": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 94
        }
      },
      "37": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 103,
          column: 46
        }
      },
      "38": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 21
        }
      },
      "39": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "40": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "41": {
        start: {
          line: 116,
          column: 23
        },
        end: {
          line: 116,
          column: 63
        }
      },
      "42": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "43": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 122,
          column: 8
        }
      },
      "44": {
        start: {
          line: 125,
          column: 18
        },
        end: {
          line: 125,
          column: 44
        }
      },
      "45": {
        start: {
          line: 126,
          column: 23
        },
        end: {
          line: 126,
          column: 41
        }
      },
      "46": {
        start: {
          line: 127,
          column: 23
        },
        end: {
          line: 127,
          column: 87
        }
      },
      "47": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "48": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "49": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 139,
          column: 8
        }
      },
      "50": {
        start: {
          line: 141,
          column: 25
        },
        end: {
          line: 141,
          column: 26
        }
      },
      "51": {
        start: {
          line: 142,
          column: 23
        },
        end: {
          line: 142,
          column: 24
        }
      },
      "52": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 173,
          column: 7
        }
      },
      "53": {
        start: {
          line: 144,
          column: 19
        },
        end: {
          line: 144,
          column: 20
        }
      },
      "54": {
        start: {
          line: 145,
          column: 21
        },
        end: {
          line: 145,
          column: 29
        }
      },
      "55": {
        start: {
          line: 146,
          column: 26
        },
        end: {
          line: 146,
          column: 39
        }
      },
      "56": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "57": {
        start: {
          line: 149,
          column: 36
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "58": {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 84
        }
      },
      "59": {
        start: {
          line: 155,
          column: 10
        },
        end: {
          line: 161,
          column: 12
        }
      },
      "60": {
        start: {
          line: 163,
          column: 10
        },
        end: {
          line: 163,
          column: 34
        }
      },
      "61": {
        start: {
          line: 164,
          column: 10
        },
        end: {
          line: 164,
          column: 23
        }
      },
      "62": {
        start: {
          line: 167,
          column: 10
        },
        end: {
          line: 167,
          column: 85
        }
      },
      "63": {
        start: {
          line: 168,
          column: 10
        },
        end: {
          line: 171,
          column: 12
        }
      },
      "64": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 175,
          column: 102
        }
      },
      "65": {
        start: {
          line: 179,
          column: 21
        },
        end: {
          line: 181,
          column: 25
        }
      },
      "66": {
        start: {
          line: 180,
          column: 17
        },
        end: {
          line: 180,
          column: 34
        }
      },
      "67": {
        start: {
          line: 181,
          column: 19
        },
        end: {
          line: 181,
          column: 24
        }
      },
      "68": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 87
        }
      },
      "69": {
        start: {
          line: 183,
          column: 57
        },
        end: {
          line: 183,
          column: 64
        }
      },
      "70": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 82
        }
      },
      "71": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 19
        }
      },
      "72": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "73": {
        start: {
          line: 200,
          column: 23
        },
        end: {
          line: 200,
          column: 60
        }
      },
      "74": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "75": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 203,
          column: 61
        }
      },
      "76": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 205,
          column: 41
        }
      },
      "77": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 229,
          column: 7
        }
      },
      "78": {
        start: {
          line: 209,
          column: 27
        },
        end: {
          line: 209,
          column: 49
        }
      },
      "79": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 46
        }
      },
      "80": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 44
        }
      },
      "81": {
        start: {
          line: 215,
          column: 25
        },
        end: {
          line: 215,
          column: 54
        }
      },
      "82": {
        start: {
          line: 216,
          column: 28
        },
        end: {
          line: 216,
          column: 60
        }
      },
      "83": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 222,
          column: 10
        }
      },
      "84": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 228,
          column: 10
        }
      },
      "85": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 60
        }
      },
      "86": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 80
        }
      },
      "87": {
        start: {
          line: 237,
          column: 22
        },
        end: {
          line: 237,
          column: 68
        }
      },
      "88": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "89": {
        start: {
          line: 240,
          column: 6
        },
        end: {
          line: 240,
          column: 84
        }
      },
      "90": {
        start: {
          line: 241,
          column: 11
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "91": {
        start: {
          line: 242,
          column: 6
        },
        end: {
          line: 242,
          column: 78
        }
      },
      "92": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 244,
          column: 82
        }
      },
      "93": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 74
        }
      },
      "94": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 249,
          column: 19
        }
      },
      "95": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "96": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "97": {
        start: {
          line: 265,
          column: 30
        },
        end: {
          line: 265,
          column: 58
        }
      },
      "98": {
        start: {
          line: 266,
          column: 31
        },
        end: {
          line: 266,
          column: 49
        }
      },
      "99": {
        start: {
          line: 268,
          column: 6
        },
        end: {
          line: 290,
          column: 7
        }
      },
      "100": {
        start: {
          line: 268,
          column: 19
        },
        end: {
          line: 268,
          column: 20
        }
      },
      "101": {
        start: {
          line: 269,
          column: 21
        },
        end: {
          line: 269,
          column: 39
        }
      },
      "102": {
        start: {
          line: 270,
          column: 22
        },
        end: {
          line: 270,
          column: 41
        }
      },
      "103": {
        start: {
          line: 272,
          column: 26
        },
        end: {
          line: 272,
          column: 43
        }
      },
      "104": {
        start: {
          line: 273,
          column: 28
        },
        end: {
          line: 273,
          column: 65
        }
      },
      "105": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "106": {
        start: {
          line: 276,
          column: 21
        },
        end: {
          line: 276,
          column: 22
        }
      },
      "107": {
        start: {
          line: 278,
          column: 10
        },
        end: {
          line: 278,
          column: 32
        }
      },
      "108": {
        start: {
          line: 281,
          column: 24
        },
        end: {
          line: 281,
          column: 41
        }
      },
      "109": {
        start: {
          line: 282,
          column: 26
        },
        end: {
          line: 282,
          column: 63
        }
      },
      "110": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 289,
          column: 10
        }
      },
      "111": {
        start: {
          line: 293,
          column: 26
        },
        end: {
          line: 293,
          column: 43
        }
      },
      "112": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 298,
          column: 7
        }
      },
      "113": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "114": {
        start: {
          line: 301,
          column: 6
        },
        end: {
          line: 301,
          column: 39
        }
      },
      "115": {
        start: {
          line: 303,
          column: 21
        },
        end: {
          line: 303,
          column: 52
        }
      },
      "116": {
        start: {
          line: 305,
          column: 6
        },
        end: {
          line: 309,
          column: 8
        }
      },
      "117": {
        start: {
          line: 312,
          column: 26
        },
        end: {
          line: 312,
          column: 63
        }
      },
      "118": {
        start: {
          line: 313,
          column: 6
        },
        end: {
          line: 316,
          column: 8
        }
      },
      "119": {
        start: {
          line: 319,
          column: 32
        },
        end: {
          line: 320,
          column: 101
        }
      },
      "120": {
        start: {
          line: 320,
          column: 28
        },
        end: {
          line: 320,
          column: 56
        }
      },
      "121": {
        start: {
          line: 322,
          column: 6
        },
        end: {
          line: 322,
          column: 70
        }
      },
      "122": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 325,
          column: 36
        }
      },
      "123": {
        start: {
          line: 326,
          column: 6
        },
        end: {
          line: 326,
          column: 35
        }
      },
      "124": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 19
        }
      },
      "125": {
        start: {
          line: 336,
          column: 20
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "126": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 349,
          column: 5
        }
      },
      "127": {
        start: {
          line: 344,
          column: 6
        },
        end: {
          line: 348,
          column: 8
        }
      },
      "128": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 426,
          column: 5
        }
      },
      "129": {
        start: {
          line: 353,
          column: 29
        },
        end: {
          line: 358,
          column: 7
        }
      },
      "130": {
        start: {
          line: 360,
          column: 6
        },
        end: {
          line: 382,
          column: 7
        }
      },
      "131": {
        start: {
          line: 361,
          column: 26
        },
        end: {
          line: 361,
          column: 43
        }
      },
      "132": {
        start: {
          line: 362,
          column: 27
        },
        end: {
          line: 362,
          column: 61
        }
      },
      "133": {
        start: {
          line: 365,
          column: 26
        },
        end: {
          line: 365,
          column: 87
        }
      },
      "134": {
        start: {
          line: 365,
          column: 73
        },
        end: {
          line: 365,
          column: 86
        }
      },
      "135": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 371,
          column: 9
        }
      },
      "136": {
        start: {
          line: 368,
          column: 21
        },
        end: {
          line: 368,
          column: 22
        }
      },
      "137": {
        start: {
          line: 370,
          column: 25
        },
        end: {
          line: 370,
          column: 79
        }
      },
      "138": {
        start: {
          line: 373,
          column: 26
        },
        end: {
          line: 373,
          column: 55
        }
      },
      "139": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 381,
          column: 10
        }
      },
      "140": {
        start: {
          line: 385,
          column: 26
        },
        end: {
          line: 385,
          column: 61
        }
      },
      "141": {
        start: {
          line: 386,
          column: 25
        },
        end: {
          line: 386,
          column: 82
        }
      },
      "142": {
        start: {
          line: 386,
          column: 60
        },
        end: {
          line: 386,
          column: 81
        }
      },
      "143": {
        start: {
          line: 388,
          column: 6
        },
        end: {
          line: 403,
          column: 7
        }
      },
      "144": {
        start: {
          line: 389,
          column: 26
        },
        end: {
          line: 389,
          column: 43
        }
      },
      "145": {
        start: {
          line: 390,
          column: 27
        },
        end: {
          line: 390,
          column: 31
        }
      },
      "146": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "147": {
        start: {
          line: 392,
          column: 21
        },
        end: {
          line: 392,
          column: 22
        }
      },
      "148": {
        start: {
          line: 393,
          column: 10
        },
        end: {
          line: 393,
          column: 58
        }
      },
      "149": {
        start: {
          line: 396,
          column: 26
        },
        end: {
          line: 396,
          column: 55
        }
      },
      "150": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 402,
          column: 10
        }
      },
      "151": {
        start: {
          line: 406,
          column: 6
        },
        end: {
          line: 417,
          column: 7
        }
      },
      "152": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 411,
          column: 10
        }
      },
      "153": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 416,
          column: 10
        }
      },
      "154": {
        start: {
          line: 420,
          column: 38
        },
        end: {
          line: 420,
          column: 82
        }
      },
      "155": {
        start: {
          line: 421,
          column: 6
        },
        end: {
          line: 421,
          column: 77
        }
      },
      "156": {
        start: {
          line: 424,
          column: 6
        },
        end: {
          line: 424,
          column: 36
        }
      },
      "157": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 425,
          column: 35
        }
      },
      "158": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 428,
          column: 19
        }
      },
      "159": {
        start: {
          line: 435,
          column: 20
        },
        end: {
          line: 440,
          column: 5
        }
      },
      "160": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 508,
          column: 5
        }
      },
      "161": {
        start: {
          line: 444,
          column: 27
        },
        end: {
          line: 454,
          column: 7
        }
      },
      "162": {
        start: {
          line: 457,
          column: 30
        },
        end: {
          line: 457,
          column: 47
        }
      },
      "163": {
        start: {
          line: 458,
          column: 23
        },
        end: {
          line: 458,
          column: 82
        }
      },
      "164": {
        start: {
          line: 459,
          column: 25
        },
        end: {
          line: 459,
          column: 60
        }
      },
      "165": {
        start: {
          line: 461,
          column: 6
        },
        end: {
          line: 461,
          column: 58
        }
      },
      "166": {
        start: {
          line: 462,
          column: 6
        },
        end: {
          line: 462,
          column: 91
        }
      },
      "167": {
        start: {
          line: 465,
          column: 28
        },
        end: {
          line: 465,
          column: 45
        }
      },
      "168": {
        start: {
          line: 468,
          column: 28
        },
        end: {
          line: 471,
          column: 8
        }
      },
      "169": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 469,
          column: 83
        }
      },
      "170": {
        start: {
          line: 469,
          column: 37
        },
        end: {
          line: 469,
          column: 81
        }
      },
      "171": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 52
        }
      },
      "172": {
        start: {
          line: 473,
          column: 27
        },
        end: {
          line: 473,
          column: 59
        }
      },
      "173": {
        start: {
          line: 474,
          column: 23
        },
        end: {
          line: 474,
          column: 56
        }
      },
      "174": {
        start: {
          line: 476,
          column: 6
        },
        end: {
          line: 476,
          column: 57
        }
      },
      "175": {
        start: {
          line: 477,
          column: 6
        },
        end: {
          line: 477,
          column: 69
        }
      },
      "176": {
        start: {
          line: 480,
          column: 29
        },
        end: {
          line: 480,
          column: 59
        }
      },
      "177": {
        start: {
          line: 481,
          column: 28
        },
        end: {
          line: 481,
          column: 53
        }
      },
      "178": {
        start: {
          line: 483,
          column: 6
        },
        end: {
          line: 488,
          column: 8
        }
      },
      "179": {
        start: {
          line: 491,
          column: 29
        },
        end: {
          line: 491,
          column: 78
        }
      },
      "180": {
        start: {
          line: 492,
          column: 6
        },
        end: {
          line: 496,
          column: 8
        }
      },
      "181": {
        start: {
          line: 499,
          column: 6
        },
        end: {
          line: 503,
          column: 8
        }
      },
      "182": {
        start: {
          line: 506,
          column: 6
        },
        end: {
          line: 506,
          column: 36
        }
      },
      "183": {
        start: {
          line: 507,
          column: 6
        },
        end: {
          line: 507,
          column: 35
        }
      },
      "184": {
        start: {
          line: 510,
          column: 4
        },
        end: {
          line: 510,
          column: 19
        }
      },
      "185": {
        start: {
          line: 517,
          column: 20
        },
        end: {
          line: 522,
          column: 5
        }
      },
      "186": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 609,
          column: 5
        }
      },
      "187": {
        start: {
          line: 526,
          column: 25
        },
        end: {
          line: 526,
          column: 41
        }
      },
      "188": {
        start: {
          line: 528,
          column: 6
        },
        end: {
          line: 546,
          column: 7
        }
      },
      "189": {
        start: {
          line: 529,
          column: 26
        },
        end: {
          line: 529,
          column: 43
        }
      },
      "190": {
        start: {
          line: 532,
          column: 22
        },
        end: {
          line: 534,
          column: 9
        }
      },
      "191": {
        start: {
          line: 533,
          column: 10
        },
        end: {
          line: 533,
          column: 70
        }
      },
      "192": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 33
        }
      },
      "193": {
        start: {
          line: 539,
          column: 26
        },
        end: {
          line: 539,
          column: 55
        }
      },
      "194": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 545,
          column: 10
        }
      },
      "195": {
        start: {
          line: 549,
          column: 24
        },
        end: {
          line: 553,
          column: 7
        }
      },
      "196": {
        start: {
          line: 555,
          column: 6
        },
        end: {
          line: 573,
          column: 7
        }
      },
      "197": {
        start: {
          line: 556,
          column: 26
        },
        end: {
          line: 556,
          column: 27
        }
      },
      "198": {
        start: {
          line: 557,
          column: 26
        },
        end: {
          line: 557,
          column: 43
        }
      },
      "199": {
        start: {
          line: 559,
          column: 22
        },
        end: {
          line: 561,
          column: 9
        }
      },
      "200": {
        start: {
          line: 560,
          column: 10
        },
        end: {
          line: 560,
          column: 76
        }
      },
      "201": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 563,
          column: 33
        }
      },
      "202": {
        start: {
          line: 565,
          column: 26
        },
        end: {
          line: 565,
          column: 55
        }
      },
      "203": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 572,
          column: 10
        }
      },
      "204": {
        start: {
          line: 576,
          column: 31
        },
        end: {
          line: 576,
          column: 43
        }
      },
      "205": {
        start: {
          line: 577,
          column: 6
        },
        end: {
          line: 577,
          column: 44
        }
      },
      "206": {
        start: {
          line: 579,
          column: 6
        },
        end: {
          line: 598,
          column: 7
        }
      },
      "207": {
        start: {
          line: 580,
          column: 26
        },
        end: {
          line: 580,
          column: 43
        }
      },
      "208": {
        start: {
          line: 582,
          column: 22
        },
        end: {
          line: 584,
          column: 9
        }
      },
      "209": {
        start: {
          line: 583,
          column: 10
        },
        end: {
          line: 583,
          column: 56
        }
      },
      "210": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 586,
          column: 33
        }
      },
      "211": {
        start: {
          line: 588,
          column: 26
        },
        end: {
          line: 588,
          column: 55
        }
      },
      "212": {
        start: {
          line: 589,
          column: 27
        },
        end: {
          line: 589,
          column: 50
        }
      },
      "213": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 597,
          column: 11
        }
      },
      "214": {
        start: {
          line: 601,
          column: 28
        },
        end: {
          line: 602,
          column: 90
        }
      },
      "215": {
        start: {
          line: 602,
          column: 28
        },
        end: {
          line: 602,
          column: 46
        }
      },
      "216": {
        start: {
          line: 604,
          column: 6
        },
        end: {
          line: 604,
          column: 68
        }
      },
      "217": {
        start: {
          line: 607,
          column: 6
        },
        end: {
          line: 607,
          column: 36
        }
      },
      "218": {
        start: {
          line: 608,
          column: 6
        },
        end: {
          line: 608,
          column: 35
        }
      },
      "219": {
        start: {
          line: 611,
          column: 4
        },
        end: {
          line: 611,
          column: 19
        }
      },
      "220": {
        start: {
          line: 618,
          column: 20
        },
        end: {
          line: 623,
          column: 5
        }
      },
      "221": {
        start: {
          line: 625,
          column: 4
        },
        end: {
          line: 667,
          column: 5
        }
      },
      "222": {
        start: {
          line: 627,
          column: 6
        },
        end: {
          line: 634,
          column: 8
        }
      },
      "223": {
        start: {
          line: 637,
          column: 6
        },
        end: {
          line: 642,
          column: 8
        }
      },
      "224": {
        start: {
          line: 645,
          column: 24
        },
        end: {
          line: 645,
          column: 43
        }
      },
      "225": {
        start: {
          line: 646,
          column: 6
        },
        end: {
          line: 653,
          column: 8
        }
      },
      "226": {
        start: {
          line: 656,
          column: 27
        },
        end: {
          line: 656,
          column: 81
        }
      },
      "227": {
        start: {
          line: 657,
          column: 31
        },
        end: {
          line: 657,
          column: 88
        }
      },
      "228": {
        start: {
          line: 659,
          column: 6
        },
        end: {
          line: 662,
          column: 14
        }
      },
      "229": {
        start: {
          line: 665,
          column: 6
        },
        end: {
          line: 665,
          column: 36
        }
      },
      "230": {
        start: {
          line: 666,
          column: 6
        },
        end: {
          line: 666,
          column: 35
        }
      },
      "231": {
        start: {
          line: 669,
          column: 4
        },
        end: {
          line: 669,
          column: 19
        }
      },
      "232": {
        start: {
          line: 676,
          column: 4
        },
        end: {
          line: 685,
          column: 6
        }
      },
      "233": {
        start: {
          line: 692,
          column: 20
        },
        end: {
          line: 699,
          column: 5
        }
      },
      "234": {
        start: {
          line: 701,
          column: 21
        },
        end: {
          line: 701,
          column: 22
        }
      },
      "235": {
        start: {
          line: 702,
          column: 22
        },
        end: {
          line: 702,
          column: 23
        }
      },
      "236": {
        start: {
          line: 704,
          column: 4
        },
        end: {
          line: 710,
          column: 5
        }
      },
      "237": {
        start: {
          line: 705,
          column: 20
        },
        end: {
          line: 705,
          column: 58
        }
      },
      "238": {
        start: {
          line: 706,
          column: 6
        },
        end: {
          line: 709,
          column: 7
        }
      },
      "239": {
        start: {
          line: 707,
          column: 8
        },
        end: {
          line: 707,
          column: 37
        }
      },
      "240": {
        start: {
          line: 708,
          column: 8
        },
        end: {
          line: 708,
          column: 30
        }
      },
      "241": {
        start: {
          line: 712,
          column: 4
        },
        end: {
          line: 712,
          column: 58
        }
      },
      "242": {
        start: {
          line: 719,
          column: 18
        },
        end: {
          line: 719,
          column: 23
        }
      },
      "243": {
        start: {
          line: 721,
          column: 4
        },
        end: {
          line: 734,
          column: 5
        }
      },
      "244": {
        start: {
          line: 721,
          column: 17
        },
        end: {
          line: 721,
          column: 18
        }
      },
      "245": {
        start: {
          line: 722,
          column: 23
        },
        end: {
          line: 722,
          column: 36
        }
      },
      "246": {
        start: {
          line: 723,
          column: 19
        },
        end: {
          line: 723,
          column: 38
        }
      },
      "247": {
        start: {
          line: 725,
          column: 6
        },
        end: {
          line: 731,
          column: 7
        }
      },
      "248": {
        start: {
          line: 725,
          column: 19
        },
        end: {
          line: 725,
          column: 20
        }
      },
      "249": {
        start: {
          line: 726,
          column: 18
        },
        end: {
          line: 726,
          column: 19
        }
      },
      "250": {
        start: {
          line: 727,
          column: 8
        },
        end: {
          line: 729,
          column: 9
        }
      },
      "251": {
        start: {
          line: 727,
          column: 21
        },
        end: {
          line: 727,
          column: 22
        }
      },
      "252": {
        start: {
          line: 728,
          column: 10
        },
        end: {
          line: 728,
          column: 44
        }
      },
      "253": {
        start: {
          line: 730,
          column: 8
        },
        end: {
          line: 730,
          column: 35
        }
      },
      "254": {
        start: {
          line: 733,
          column: 6
        },
        end: {
          line: 733,
          column: 21
        }
      },
      "255": {
        start: {
          line: 736,
          column: 4
        },
        end: {
          line: 736,
          column: 19
        }
      },
      "256": {
        start: {
          line: 743,
          column: 4
        },
        end: {
          line: 751,
          column: 7
        }
      },
      "257": {
        start: {
          line: 744,
          column: 6
        },
        end: {
          line: 750,
          column: 7
        }
      },
      "258": {
        start: {
          line: 745,
          column: 21
        },
        end: {
          line: 745,
          column: 43
        }
      },
      "259": {
        start: {
          line: 746,
          column: 24
        },
        end: {
          line: 746,
          column: 54
        }
      },
      "260": {
        start: {
          line: 747,
          column: 21
        },
        end: {
          line: 747,
          column: 41
        }
      },
      "261": {
        start: {
          line: 748,
          column: 21
        },
        end: {
          line: 748,
          column: 104
        }
      },
      "262": {
        start: {
          line: 749,
          column: 17
        },
        end: {
          line: 749,
          column: 26
        }
      },
      "263": {
        start: {
          line: 758,
          column: 22
        },
        end: {
          line: 758,
          column: 39
        }
      },
      "264": {
        start: {
          line: 761,
          column: 4
        },
        end: {
          line: 761,
          column: 64
        }
      },
      "265": {
        start: {
          line: 761,
          column: 33
        },
        end: {
          line: 761,
          column: 62
        }
      },
      "266": {
        start: {
          line: 763,
          column: 4
        },
        end: {
          line: 767,
          column: 6
        }
      },
      "267": {
        start: {
          line: 774,
          column: 19
        },
        end: {
          line: 788,
          column: 5
        }
      },
      "268": {
        start: {
          line: 790,
          column: 4
        },
        end: {
          line: 790,
          column: 18
        }
      },
      "269": {
        start: {
          line: 797,
          column: 4
        },
        end: {
          line: 797,
          column: 33
        }
      },
      "270": {
        start: {
          line: 797,
          column: 21
        },
        end: {
          line: 797,
          column: 33
        }
      },
      "271": {
        start: {
          line: 798,
          column: 4
        },
        end: {
          line: 798,
          column: 32
        }
      },
      "272": {
        start: {
          line: 798,
          column: 21
        },
        end: {
          line: 798,
          column: 32
        }
      },
      "273": {
        start: {
          line: 799,
          column: 4
        },
        end: {
          line: 799,
          column: 33
        }
      },
      "274": {
        start: {
          line: 799,
          column: 21
        },
        end: {
          line: 799,
          column: 33
        }
      },
      "275": {
        start: {
          line: 800,
          column: 4
        },
        end: {
          line: 800,
          column: 32
        }
      },
      "276": {
        start: {
          line: 800,
          column: 21
        },
        end: {
          line: 800,
          column: 32
        }
      },
      "277": {
        start: {
          line: 801,
          column: 4
        },
        end: {
          line: 801,
          column: 32
        }
      },
      "278": {
        start: {
          line: 801,
          column: 21
        },
        end: {
          line: 801,
          column: 32
        }
      },
      "279": {
        start: {
          line: 802,
          column: 4
        },
        end: {
          line: 802,
          column: 15
        }
      },
      "280": {
        start: {
          line: 809,
          column: 28
        },
        end: {
          line: 809,
          column: 30
        }
      },
      "281": {
        start: {
          line: 812,
          column: 4
        },
        end: {
          line: 819,
          column: 5
        }
      },
      "282": {
        start: {
          line: 813,
          column: 6
        },
        end: {
          line: 818,
          column: 9
        }
      },
      "283": {
        start: {
          line: 822,
          column: 4
        },
        end: {
          line: 829,
          column: 5
        }
      },
      "284": {
        start: {
          line: 823,
          column: 6
        },
        end: {
          line: 828,
          column: 9
        }
      },
      "285": {
        start: {
          line: 832,
          column: 4
        },
        end: {
          line: 839,
          column: 5
        }
      },
      "286": {
        start: {
          line: 833,
          column: 6
        },
        end: {
          line: 838,
          column: 9
        }
      },
      "287": {
        start: {
          line: 842,
          column: 4
        },
        end: {
          line: 849,
          column: 5
        }
      },
      "288": {
        start: {
          line: 843,
          column: 6
        },
        end: {
          line: 848,
          column: 9
        }
      },
      "289": {
        start: {
          line: 851,
          column: 4
        },
        end: {
          line: 851,
          column: 27
        }
      },
      "290": {
        start: {
          line: 859,
          column: 4
        },
        end: {
          line: 862,
          column: 6
        }
      },
      "291": {
        start: {
          line: 869,
          column: 17
        },
        end: {
          line: 871,
          column: 5
        }
      },
      "292": {
        start: {
          line: 873,
          column: 4
        },
        end: {
          line: 877,
          column: 5
        }
      },
      "293": {
        start: {
          line: 874,
          column: 6
        },
        end: {
          line: 876,
          column: 7
        }
      },
      "294": {
        start: {
          line: 875,
          column: 8
        },
        end: {
          line: 875,
          column: 97
        }
      },
      "295": {
        start: {
          line: 879,
          column: 4
        },
        end: {
          line: 879,
          column: 53
        }
      },
      "296": {
        start: {
          line: 879,
          column: 27
        },
        end: {
          line: 879,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 19,
            column: 3
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        loc: {
          start: {
            line: 24,
            column: 21
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 55,
            column: 3
          }
        },
        loc: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 110,
            column: 3
          }
        },
        line: 55
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 115,
            column: 2
          },
          end: {
            line: 115,
            column: 3
          }
        },
        loc: {
          start: {
            line: 115,
            column: 34
          },
          end: {
            line: 187,
            column: 3
          }
        },
        line: 115
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 180,
            column: 11
          },
          end: {
            line: 180,
            column: 12
          }
        },
        loc: {
          start: {
            line: 180,
            column: 17
          },
          end: {
            line: 180,
            column: 34
          }
        },
        line: 180
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 181,
            column: 14
          },
          end: {
            line: 181,
            column: 15
          }
        },
        loc: {
          start: {
            line: 181,
            column: 19
          },
          end: {
            line: 181,
            column: 24
          }
        },
        line: 181
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 183,
            column: 45
          },
          end: {
            line: 183,
            column: 46
          }
        },
        loc: {
          start: {
            line: 183,
            column: 57
          },
          end: {
            line: 183,
            column: 64
          }
        },
        line: 183
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 192,
            column: 2
          },
          end: {
            line: 192,
            column: 3
          }
        },
        loc: {
          start: {
            line: 192,
            column: 31
          },
          end: {
            line: 250,
            column: 3
          }
        },
        line: 192
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 255,
            column: 2
          },
          end: {
            line: 255,
            column: 3
          }
        },
        loc: {
          start: {
            line: 255,
            column: 36
          },
          end: {
            line: 330,
            column: 3
          }
        },
        line: 255
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 320,
            column: 16
          },
          end: {
            line: 320,
            column: 17
          }
        },
        loc: {
          start: {
            line: 320,
            column: 28
          },
          end: {
            line: 320,
            column: 56
          }
        },
        line: 320
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 335,
            column: 2
          },
          end: {
            line: 335,
            column: 3
          }
        },
        loc: {
          start: {
            line: 335,
            column: 34
          },
          end: {
            line: 429,
            column: 3
          }
        },
        line: 335
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 365,
            column: 67
          },
          end: {
            line: 365,
            column: 68
          }
        },
        loc: {
          start: {
            line: 365,
            column: 73
          },
          end: {
            line: 365,
            column: 86
          }
        },
        line: 365
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 386,
            column: 54
          },
          end: {
            line: 386,
            column: 55
          }
        },
        loc: {
          start: {
            line: 386,
            column: 60
          },
          end: {
            line: 386,
            column: 81
          }
        },
        line: 386
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 434,
            column: 2
          },
          end: {
            line: 434,
            column: 3
          }
        },
        loc: {
          start: {
            line: 434,
            column: 42
          },
          end: {
            line: 511,
            column: 3
          }
        },
        line: 434
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 468,
            column: 51
          },
          end: {
            line: 468,
            column: 52
          }
        },
        loc: {
          start: {
            line: 468,
            column: 74
          },
          end: {
            line: 471,
            column: 7
          }
        },
        line: 468
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 469,
            column: 26
          },
          end: {
            line: 469,
            column: 27
          }
        },
        loc: {
          start: {
            line: 469,
            column: 37
          },
          end: {
            line: 469,
            column: 81
          }
        },
        line: 469
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 516,
            column: 2
          },
          end: {
            line: 516,
            column: 3
          }
        },
        loc: {
          start: {
            line: 516,
            column: 37
          },
          end: {
            line: 612,
            column: 3
          }
        },
        line: 516
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 532,
            column: 56
          },
          end: {
            line: 532,
            column: 57
          }
        },
        loc: {
          start: {
            line: 533,
            column: 10
          },
          end: {
            line: 533,
            column: 70
          }
        },
        line: 533
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 559,
            column: 56
          },
          end: {
            line: 559,
            column: 57
          }
        },
        loc: {
          start: {
            line: 560,
            column: 10
          },
          end: {
            line: 560,
            column: 76
          }
        },
        line: 560
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 582,
            column: 51
          },
          end: {
            line: 582,
            column: 52
          }
        },
        loc: {
          start: {
            line: 583,
            column: 10
          },
          end: {
            line: 583,
            column: 56
          }
        },
        line: 583
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 602,
            column: 16
          },
          end: {
            line: 602,
            column: 17
          }
        },
        loc: {
          start: {
            line: 602,
            column: 28
          },
          end: {
            line: 602,
            column: 46
          }
        },
        line: 602
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 617,
            column: 2
          },
          end: {
            line: 617,
            column: 3
          }
        },
        loc: {
          start: {
            line: 617,
            column: 40
          },
          end: {
            line: 670,
            column: 3
          }
        },
        line: 617
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 675,
            column: 2
          },
          end: {
            line: 675,
            column: 3
          }
        },
        loc: {
          start: {
            line: 675,
            column: 23
          },
          end: {
            line: 686,
            column: 3
          }
        },
        line: 675
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 691,
            column: 2
          },
          end: {
            line: 691,
            column: 3
          }
        },
        loc: {
          start: {
            line: 691,
            column: 36
          },
          end: {
            line: 713,
            column: 3
          }
        },
        line: 691
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 718,
            column: 2
          },
          end: {
            line: 718,
            column: 3
          }
        },
        loc: {
          start: {
            line: 718,
            column: 41
          },
          end: {
            line: 737,
            column: 3
          }
        },
        line: 718
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 742,
            column: 2
          },
          end: {
            line: 742,
            column: 3
          }
        },
        loc: {
          start: {
            line: 742,
            column: 41
          },
          end: {
            line: 752,
            column: 3
          }
        },
        line: 742
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 743,
            column: 22
          },
          end: {
            line: 743,
            column: 23
          }
        },
        loc: {
          start: {
            line: 743,
            column: 27
          },
          end: {
            line: 751,
            column: 5
          }
        },
        line: 743
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 757,
            column: 2
          },
          end: {
            line: 757,
            column: 3
          }
        },
        loc: {
          start: {
            line: 757,
            column: 44
          },
          end: {
            line: 768,
            column: 3
          }
        },
        line: 757
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 761,
            column: 22
          },
          end: {
            line: 761,
            column: 23
          }
        },
        loc: {
          start: {
            line: 761,
            column: 33
          },
          end: {
            line: 761,
            column: 62
          }
        },
        line: 761
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 773,
            column: 2
          },
          end: {
            line: 773,
            column: 3
          }
        },
        loc: {
          start: {
            line: 773,
            column: 37
          },
          end: {
            line: 791,
            column: 3
          }
        },
        line: 773
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 796,
            column: 2
          },
          end: {
            line: 796,
            column: 3
          }
        },
        loc: {
          start: {
            line: 796,
            column: 29
          },
          end: {
            line: 803,
            column: 3
          }
        },
        line: 796
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 808,
            column: 2
          },
          end: {
            line: 808,
            column: 3
          }
        },
        loc: {
          start: {
            line: 808,
            column: 38
          },
          end: {
            line: 852,
            column: 3
          }
        },
        line: 808
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 857,
            column: 2
          },
          end: {
            line: 857,
            column: 3
          }
        },
        loc: {
          start: {
            line: 857,
            column: 31
          },
          end: {
            line: 863,
            column: 3
          }
        },
        line: 857
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 868,
            column: 2
          },
          end: {
            line: 868,
            column: 3
          }
        },
        loc: {
          start: {
            line: 868,
            column: 27
          },
          end: {
            line: 880,
            column: 3
          }
        },
        line: 868
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 879,
            column: 20
          },
          end: {
            line: 879,
            column: 21
          }
        },
        loc: {
          start: {
            line: 879,
            column: 27
          },
          end: {
            line: 879,
            column: 40
          }
        },
        line: 879
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "1": {
        loc: {
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 77
          }
        }, {
          start: {
            line: 153,
            column: 81
          },
          end: {
            line: 153,
            column: 84
          }
        }],
        line: 153
      },
      "2": {
        loc: {
          start: {
            line: 158,
            column: 24
          },
          end: {
            line: 158,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 24
          },
          end: {
            line: 158,
            column: 75
          }
        }, {
          start: {
            line: 158,
            column: 79
          },
          end: {
            line: 158,
            column: 80
          }
        }],
        line: 158
      },
      "3": {
        loc: {
          start: {
            line: 159,
            column: 22
          },
          end: {
            line: 159,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 22
          },
          end: {
            line: 159,
            column: 71
          }
        }, {
          start: {
            line: 159,
            column: 75
          },
          end: {
            line: 159,
            column: 76
          }
        }],
        line: 159
      },
      "4": {
        loc: {
          start: {
            line: 160,
            column: 24
          },
          end: {
            line: 160,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 24
          },
          end: {
            line: 160,
            column: 83
          }
        }, {
          start: {
            line: 160,
            column: 87
          },
          end: {
            line: 160,
            column: 88
          }
        }],
        line: 160
      },
      "5": {
        loc: {
          start: {
            line: 175,
            column: 53
          },
          end: {
            line: 175,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 70
          },
          end: {
            line: 175,
            column: 95
          }
        }, {
          start: {
            line: 175,
            column: 98
          },
          end: {
            line: 175,
            column: 101
          }
        }],
        line: 175
      },
      "6": {
        loc: {
          start: {
            line: 236,
            column: 28
          },
          end: {
            line: 236,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 28
          },
          end: {
            line: 236,
            column: 68
          }
        }, {
          start: {
            line: 236,
            column: 72
          },
          end: {
            line: 236,
            column: 80
          }
        }],
        line: 236
      },
      "7": {
        loc: {
          start: {
            line: 237,
            column: 22
          },
          end: {
            line: 237,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 22
          },
          end: {
            line: 237,
            column: 56
          }
        }, {
          start: {
            line: 237,
            column: 60
          },
          end: {
            line: 237,
            column: 68
          }
        }],
        line: 237
      },
      "8": {
        loc: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        }, {
          start: {
            line: 241,
            column: 11
          },
          end: {
            line: 245,
            column: 5
          }
        }],
        line: 239
      },
      "9": {
        loc: {
          start: {
            line: 241,
            column: 11
          },
          end: {
            line: 245,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 11
          },
          end: {
            line: 245,
            column: 5
          }
        }, {
          start: {
            line: 243,
            column: 11
          },
          end: {
            line: 245,
            column: 5
          }
        }],
        line: 241
      },
      "10": {
        loc: {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "11": {
        loc: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "12": {
        loc: {
          start: {
            line: 362,
            column: 27
          },
          end: {
            line: 362,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 53
          },
          end: {
            line: 362,
            column: 55
          }
        }, {
          start: {
            line: 362,
            column: 58
          },
          end: {
            line: 362,
            column: 61
          }
        }],
        line: 362
      },
      "13": {
        loc: {
          start: {
            line: 406,
            column: 6
          },
          end: {
            line: 417,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 6
          },
          end: {
            line: 417,
            column: 7
          }
        }, {
          start: {
            line: 412,
            column: 13
          },
          end: {
            line: 417,
            column: 7
          }
        }],
        line: 406
      },
      "14": {
        loc: {
          start: {
            line: 420,
            column: 38
          },
          end: {
            line: 420,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 38
          },
          end: {
            line: 420,
            column: 77
          }
        }, {
          start: {
            line: 420,
            column: 81
          },
          end: {
            line: 420,
            column: 82
          }
        }],
        line: 420
      },
      "15": {
        loc: {
          start: {
            line: 650,
            column: 18
          },
          end: {
            line: 650,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 650,
            column: 18
          },
          end: {
            line: 650,
            column: 46
          }
        }, {
          start: {
            line: 650,
            column: 50
          },
          end: {
            line: 650,
            column: 79
          }
        }],
        line: 650
      },
      "16": {
        loc: {
          start: {
            line: 680,
            column: 27
          },
          end: {
            line: 680,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 680,
            column: 27
          },
          end: {
            line: 680,
            column: 56
          }
        }, {
          start: {
            line: 680,
            column: 60
          },
          end: {
            line: 680,
            column: 69
          }
        }],
        line: 680
      },
      "17": {
        loc: {
          start: {
            line: 681,
            column: 14
          },
          end: {
            line: 681,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 681,
            column: 14
          },
          end: {
            line: 681,
            column: 36
          }
        }, {
          start: {
            line: 681,
            column: 40
          },
          end: {
            line: 681,
            column: 49
          }
        }],
        line: 681
      },
      "18": {
        loc: {
          start: {
            line: 682,
            column: 18
          },
          end: {
            line: 682,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 682,
            column: 18
          },
          end: {
            line: 682,
            column: 53
          }
        }, {
          start: {
            line: 682,
            column: 57
          },
          end: {
            line: 682,
            column: 66
          }
        }],
        line: 682
      },
      "19": {
        loc: {
          start: {
            line: 706,
            column: 6
          },
          end: {
            line: 709,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 706,
            column: 6
          },
          end: {
            line: 709,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 706
      },
      "20": {
        loc: {
          start: {
            line: 706,
            column: 10
          },
          end: {
            line: 706,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 706,
            column: 10
          },
          end: {
            line: 706,
            column: 35
          }
        }, {
          start: {
            line: 706,
            column: 39
          },
          end: {
            line: 706,
            column: 52
          }
        }],
        line: 706
      },
      "21": {
        loc: {
          start: {
            line: 712,
            column: 11
          },
          end: {
            line: 712,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 712,
            column: 29
          },
          end: {
            line: 712,
            column: 53
          }
        }, {
          start: {
            line: 712,
            column: 56
          },
          end: {
            line: 712,
            column: 57
          }
        }],
        line: 712
      },
      "22": {
        loc: {
          start: {
            line: 744,
            column: 6
          },
          end: {
            line: 750,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 745,
            column: 8
          },
          end: {
            line: 745,
            column: 43
          }
        }, {
          start: {
            line: 746,
            column: 8
          },
          end: {
            line: 746,
            column: 54
          }
        }, {
          start: {
            line: 747,
            column: 8
          },
          end: {
            line: 747,
            column: 41
          }
        }, {
          start: {
            line: 748,
            column: 8
          },
          end: {
            line: 748,
            column: 104
          }
        }, {
          start: {
            line: 749,
            column: 8
          },
          end: {
            line: 749,
            column: 26
          }
        }],
        line: 744
      },
      "23": {
        loc: {
          start: {
            line: 797,
            column: 4
          },
          end: {
            line: 797,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 797,
            column: 4
          },
          end: {
            line: 797,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 797
      },
      "24": {
        loc: {
          start: {
            line: 798,
            column: 4
          },
          end: {
            line: 798,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 798,
            column: 4
          },
          end: {
            line: 798,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 798
      },
      "25": {
        loc: {
          start: {
            line: 799,
            column: 4
          },
          end: {
            line: 799,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 799,
            column: 4
          },
          end: {
            line: 799,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 799
      },
      "26": {
        loc: {
          start: {
            line: 800,
            column: 4
          },
          end: {
            line: 800,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 800,
            column: 4
          },
          end: {
            line: 800,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 800
      },
      "27": {
        loc: {
          start: {
            line: 801,
            column: 4
          },
          end: {
            line: 801,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 801,
            column: 4
          },
          end: {
            line: 801,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 801
      },
      "28": {
        loc: {
          start: {
            line: 812,
            column: 4
          },
          end: {
            line: 819,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 812,
            column: 4
          },
          end: {
            line: 819,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 812
      },
      "29": {
        loc: {
          start: {
            line: 822,
            column: 4
          },
          end: {
            line: 829,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 822,
            column: 4
          },
          end: {
            line: 829,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 822
      },
      "30": {
        loc: {
          start: {
            line: 832,
            column: 4
          },
          end: {
            line: 839,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 832,
            column: 4
          },
          end: {
            line: 839,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 832
      },
      "31": {
        loc: {
          start: {
            line: 842,
            column: 4
          },
          end: {
            line: 849,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 842,
            column: 4
          },
          end: {
            line: 849,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 842
      },
      "32": {
        loc: {
          start: {
            line: 874,
            column: 6
          },
          end: {
            line: 876,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 874,
            column: 6
          },
          end: {
            line: 876,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 874
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c08d85fe681f4adb30f3fe3c12124a5235bf4664"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vh7yt0zoj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vh7yt0zoj();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Comprehensive Performance Benchmarking Suite
 * 
 * Provides detailed performance analysis for SIMD operations,
 * WASM loading, memory management, and Claude Code Flow coordination.
 */

import { RuvSwarm } from './index-enhanced.js';
import { WasmModuleLoader } from './wasm-loader.js';
import { getClaudeFlow } from './claude-flow-enhanced.js';
class PerformanceBenchmarks {
  constructor() {
    /* istanbul ignore next */
    cov_vh7yt0zoj().f[0]++;
    cov_vh7yt0zoj().s[0]++;
    this.results = new Map();
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[1]++;
    this.baselineResults = new Map();
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[2]++;
    this.ruvSwarm = null;
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[3]++;
    this.wasmLoader = null;
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[4]++;
    this.claudeFlow = null;
  }

  /**
   * Initialize benchmarking suite
   */
  initialize() {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[1]++;
      cov_vh7yt0zoj().s[5]++;
      console.log('📊 Initializing Performance Benchmarking Suite...');
      cov_vh7yt0zoj().s[6]++;
      try {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[7]++;
        // Initialize ruv-swarm with optimizations
        _this.ruvSwarm =
        /* istanbul ignore next */
        yield RuvSwarm.initialize({
          useSIMD: true,
          enableNeuralNetworks: true,
          loadingStrategy: 'progressive'
        });

        // Initialize WASM loader
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[8]++;
        _this.wasmLoader = new WasmModuleLoader();
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[9]++;
        /* istanbul ignore next */
        yield _this.wasmLoader.initialize('progressive');

        // Initialize Claude Code Flow
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[10]++;
        _this.claudeFlow =
        /* istanbul ignore next */
        yield getClaudeFlow({
          enforceBatching: true,
          enableSIMD: true
        });
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[11]++;
        console.log('✅ Benchmarking suite initialized');
      } catch (error) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[12]++;
        console.error('❌ Failed to initialize benchmarking suite:', error);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[13]++;
        throw error;
      }
    })();
  }

  /**
   * Run comprehensive performance benchmarks
   */
  runFullBenchmarkSuite() {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[2]++;
      cov_vh7yt0zoj().s[14]++;
      console.log('🏃‍♂️ Running comprehensive performance benchmarks...');
      const suiteStartTime =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[15]++, performance.now());
      const results =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[16]++, {
        timestamp: new Date().toISOString(),
        environment: _this2.getEnvironmentInfo(),
        benchmarks: {}
      });
      cov_vh7yt0zoj().s[17]++;
      try {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[18]++;
        // 1. SIMD Operations Benchmark
        console.log('📈 Benchmarking SIMD operations...');
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[19]++;
        results.benchmarks.simdOperations =
        /* istanbul ignore next */
        yield _this2.benchmarkSIMDOperations();

        // 2. WASM Loading Performance
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[20]++;
        console.log('📦 Benchmarking WASM loading...');
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[21]++;
        results.benchmarks.wasmLoading =
        /* istanbul ignore next */
        yield _this2.benchmarkWASMLoading();

        // 3. Memory Management
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[22]++;
        console.log('🧠 Benchmarking memory management...');
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[23]++;
        results.benchmarks.memoryManagement =
        /* istanbul ignore next */
        yield _this2.benchmarkMemoryManagement();

        // 4. Neural Network Performance
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[24]++;
        console.log('🧠 Benchmarking neural networks...');
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[25]++;
        results.benchmarks.neuralNetworks =
        /* istanbul ignore next */
        yield _this2.benchmarkNeuralNetworks();

        // 5. Claude Code Flow Coordination
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[26]++;
        console.log('⚡ Benchmarking Claude Flow coordination...');
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[27]++;
        results.benchmarks.claudeFlowCoordination =
        /* istanbul ignore next */
        yield _this2.benchmarkClaudeFlowCoordination();

        // 6. Parallel Execution
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[28]++;
        console.log('🔄 Benchmarking parallel execution...');
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[29]++;
        results.benchmarks.parallelExecution =
        /* istanbul ignore next */
        yield _this2.benchmarkParallelExecution();

        // 7. Cross-browser Compatibility
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[30]++;
        console.log('🌐 Testing cross-browser compatibility...');
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[31]++;
        results.benchmarks.browserCompatibility =
        /* istanbul ignore next */
        yield _this2.benchmarkBrowserCompatibility();
        const totalTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[32]++, performance.now() - suiteStartTime);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[33]++;
        results.totalBenchmarkTime = totalTime;

        // Calculate overall performance score
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[34]++;
        results.performanceScore = _this2.calculateOverallScore(results.benchmarks);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[35]++;
        console.log(`✅ Benchmark suite completed in ${totalTime.toFixed(2)}ms`);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[36]++;
        console.log(`📊 Overall Performance Score: ${results.performanceScore.toFixed(1)}/100`);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[37]++;
        _this2.results.set('full_suite', results);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[38]++;
        return results;
      } catch (error) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[39]++;
        console.error('❌ Benchmark suite failed:', error);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[40]++;
        throw error;
      }
    })();
  }

  /**
   * Benchmark SIMD operations performance
   */
  benchmarkSIMDOperations() {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[3]++;
      const coreModule =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[41]++, yield _this3.wasmLoader.loadModule('core'));
      cov_vh7yt0zoj().s[42]++;
      if (!coreModule.exports.detect_simd_capabilities) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().b[0][0]++;
        cov_vh7yt0zoj().s[43]++;
        return {
          supported: false,
          reason: 'SIMD module not available'
        };
      } else
      /* istanbul ignore next */
      {
        cov_vh7yt0zoj().b[0][1]++;
      }
      const sizes =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[44]++, [100, 1000, 10000, 100000]);
      const iterations =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[45]++, [1000, 100, 10, 1]);
      const operations =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[46]++, ['dot_product', 'vector_add', 'vector_scale', 'relu_activation']);
      const results =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[47]++, {
        supported: true,
        capabilities: JSON.parse(coreModule.exports.detect_simd_capabilities()),
        operations: {}
      });
      cov_vh7yt0zoj().s[48]++;
      for (const operation of operations) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[49]++;
        results.operations[operation] = {
          sizes: {},
          averageSpeedup: 0
        };
        let totalSpeedup =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[50]++, 0);
        let validTests =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[51]++, 0);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[52]++;
        for (let i =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[53]++, 0); i < sizes.length; i++) {
          const size =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[54]++, sizes[i]);
          const iterCount =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[55]++, iterations[i]);
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[56]++;
          try {
            /* istanbul ignore next */
            var _performanceReport$ve, _performanceReport$ve2, _performanceReport$ve3, _performanceReport$ve4;
            const performanceReport =
            /* istanbul ignore next */
            (cov_vh7yt0zoj().s[57]++, JSON.parse(coreModule.exports.simd_performance_report(size, iterCount)));
            const speedup =
            /* istanbul ignore next */
            (cov_vh7yt0zoj().s[58]++,
            /* istanbul ignore next */
            (cov_vh7yt0zoj().b[1][0]++, (_performanceReport$ve = performanceReport.vector_operations) === null || _performanceReport$ve === void 0 ? void 0 :
            /* istanbul ignore next */
            _performanceReport$ve.speedup_factor) ||
            /* istanbul ignore next */
            (cov_vh7yt0zoj().b[1][1]++, 1.0));
            /* istanbul ignore next */
            cov_vh7yt0zoj().s[59]++;
            results.operations[operation].sizes[size] = {
              iterations: iterCount,
              speedupFactor: speedup,
              scalarTime:
              /* istanbul ignore next */
              (cov_vh7yt0zoj().b[2][0]++, (_performanceReport$ve2 = performanceReport.vector_operations) === null || _performanceReport$ve2 === void 0 ? void 0 :
              /* istanbul ignore next */
              _performanceReport$ve2.scalar_time_ns) ||
              /* istanbul ignore next */
              (cov_vh7yt0zoj().b[2][1]++, 0),
              simdTime:
              /* istanbul ignore next */
              (cov_vh7yt0zoj().b[3][0]++, (_performanceReport$ve3 = performanceReport.vector_operations) === null || _performanceReport$ve3 === void 0 ? void 0 :
              /* istanbul ignore next */
              _performanceReport$ve3.simd_time_ns) ||
              /* istanbul ignore next */
              (cov_vh7yt0zoj().b[3][1]++, 0),
              throughput:
              /* istanbul ignore next */
              (cov_vh7yt0zoj().b[4][0]++, (_performanceReport$ve4 = performanceReport.vector_operations) === null || _performanceReport$ve4 === void 0 ? void 0 :
              /* istanbul ignore next */
              _performanceReport$ve4.throughput_ops_per_sec) ||
              /* istanbul ignore next */
              (cov_vh7yt0zoj().b[4][1]++, 0)
            };
            /* istanbul ignore next */
            cov_vh7yt0zoj().s[60]++;
            totalSpeedup += speedup;
            /* istanbul ignore next */
            cov_vh7yt0zoj().s[61]++;
            validTests++;
          } catch (error) {
            /* istanbul ignore next */
            cov_vh7yt0zoj().s[62]++;
            console.warn(`Failed to benchmark ${operation} with size ${size}:`, error);
            /* istanbul ignore next */
            cov_vh7yt0zoj().s[63]++;
            results.operations[operation].sizes[size] = {
              error: error.message,
              speedupFactor: 1.0
            };
          }
        }
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[64]++;
        results.operations[operation].averageSpeedup = validTests > 0 ?
        /* istanbul ignore next */
        (cov_vh7yt0zoj().b[5][0]++, totalSpeedup / validTests) :
        /* istanbul ignore next */
        (cov_vh7yt0zoj().b[5][1]++, 1.0);
      }

      // Calculate overall SIMD performance score
      const speedups =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[65]++, Object.values(results.operations).map(op => {
        /* istanbul ignore next */
        cov_vh7yt0zoj().f[4]++;
        cov_vh7yt0zoj().s[66]++;
        return op.averageSpeedup;
      }).filter(s => {
        /* istanbul ignore next */
        cov_vh7yt0zoj().f[5]++;
        cov_vh7yt0zoj().s[67]++;
        return s > 0;
      }));
      cov_vh7yt0zoj().s[68]++;
      results.averageSpeedup = speedups.reduce((acc, s) => {
        /* istanbul ignore next */
        cov_vh7yt0zoj().f[6]++;
        cov_vh7yt0zoj().s[69]++;
        return acc + s;
      }, 0) / speedups.length;
      cov_vh7yt0zoj().s[70]++;
      results.performanceScore = Math.min(100, (results.averageSpeedup - 1.0) * 25); // Max score at 5x speedup
      cov_vh7yt0zoj().s[71]++;
      return results;
    })();
  }

  /**
   * Benchmark WASM loading performance
   */
  benchmarkWASMLoading() {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* () {
      var _results$strategies$p, _results$strategies$e;
      cov_vh7yt0zoj().f[7]++;
      const results =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[72]++, {
        strategies: {},
        moduleStats: {},
        recommendations: []
      });

      // Test different loading strategies
      const strategies =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[73]++, ['eager', 'progressive', 'on-demand']);
      cov_vh7yt0zoj().s[74]++;
      for (const strategy of strategies) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[75]++;
        console.log(`Testing ${strategy} loading strategy...`);
        const startTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[76]++, performance.now());
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[77]++;
        try {
          // Create new loader for clean test
          const testLoader =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[78]++, new WasmModuleLoader());
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[79]++;
          /* istanbul ignore next */
          yield testLoader.initialize(strategy);

          // Load core module
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[80]++;
          /* istanbul ignore next */
          yield testLoader.loadModule('core');
          const loadTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[81]++, performance.now() - startTime);
          const memoryUsage =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[82]++, testLoader.getTotalMemoryUsage());
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[83]++;
          results.strategies[strategy] = {
            loadTime,
            memoryUsage,
            success: true
          };
        } catch (error) {
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[84]++;
          results.strategies[strategy] = {
            error: error.message,
            success: false
          };
        }
      }

      // Get detailed module statistics
      cov_vh7yt0zoj().s[85]++;
      results.moduleStats = _this4.wasmLoader.getModuleStatus();

      // Performance recommendations
      const progressiveTime =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[86]++,
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[6][0]++, (_results$strategies$p = results.strategies.progressive) === null || _results$strategies$p === void 0 ? void 0 :
      /* istanbul ignore next */
      _results$strategies$p.loadTime) ||
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[6][1]++, Infinity));
      const eagerTime =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[87]++,
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[7][0]++, (_results$strategies$e = results.strategies.eager) === null || _results$strategies$e === void 0 ? void 0 :
      /* istanbul ignore next */
      _results$strategies$e.loadTime) ||
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[7][1]++, Infinity));
      cov_vh7yt0zoj().s[88]++;
      if (progressiveTime < eagerTime * 0.8) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().b[8][0]++;
        cov_vh7yt0zoj().s[89]++;
        results.recommendations.push('Progressive loading provides best performance');
      } else {
        /* istanbul ignore next */
        cov_vh7yt0zoj().b[8][1]++;
        cov_vh7yt0zoj().s[90]++;
        if (eagerTime < progressiveTime * 0.8) {
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[9][0]++;
          cov_vh7yt0zoj().s[91]++;
          results.recommendations.push('Eager loading provides best performance');
        } else {
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[9][1]++;
          cov_vh7yt0zoj().s[92]++;
          results.recommendations.push('Loading strategies have similar performance');
        }
      }
      cov_vh7yt0zoj().s[93]++;
      results.performanceScore = Math.max(0, 100 - progressiveTime / 100); // Good if under 100ms
      cov_vh7yt0zoj().s[94]++;
      return results;
    })();
  }

  /**
   * Benchmark memory management performance
   */
  benchmarkMemoryManagement() {
    /* istanbul ignore next */
    var _this5 = this;
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[8]++;
      const results =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[95]++, {
        allocation: {},
        garbageCollection: {},
        fragmentation: {},
        performanceScore: 0
      });
      cov_vh7yt0zoj().s[96]++;
      try {
        // Test memory allocation patterns
        const allocationSizes =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[97]++, [1024, 8192, 65536, 1048576]); // 1KB to 1MB
        const allocationCounts =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[98]++, [1000, 100, 10, 1]);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[99]++;
        for (let i =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[100]++, 0); i < allocationSizes.length; i++) {
          const size =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[101]++, allocationSizes[i]);
          const count =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[102]++, allocationCounts[i]);
          const startTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[103]++, performance.now());
          const startMemory =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[104]++, _this5.wasmLoader.getTotalMemoryUsage());

          // Simulate allocations (would need actual memory pool integration)
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[105]++;
          for (let j =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[106]++, 0); j < count; j++) {
            /* istanbul ignore next */
            cov_vh7yt0zoj().s[107]++;
            // This would use the actual memory pool
            new ArrayBuffer(size);
          }
          const endTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[108]++, performance.now());
          const endMemory =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[109]++, _this5.wasmLoader.getTotalMemoryUsage());
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[110]++;
          results.allocation[`${size}_bytes`] = {
            count,
            totalTime: endTime - startTime,
            avgTimePerAllocation: (endTime - startTime) / count,
            memoryIncrease: endMemory - startMemory
          };
        }

        // Test garbage collection performance
        const gcStartTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[111]++, performance.now());

        // Trigger GC if available
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[112]++;
        if (typeof gc === 'function') {
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[10][0]++;
          cov_vh7yt0zoj().s[113]++;
          gc();
        } else
        /* istanbul ignore next */
        {
          cov_vh7yt0zoj().b[10][1]++;
        }

        // Force memory optimization
        cov_vh7yt0zoj().s[114]++;
        _this5.wasmLoader.optimizeMemory();
        const gcTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[115]++, performance.now() - gcStartTime);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[116]++;
        results.garbageCollection = {
          manualGCTime: gcTime,
          automaticGCAvailable: typeof gc === 'function',
          memoryOptimized: true
        };

        // Memory fragmentation analysis
        const memoryStats =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[117]++, _this5.wasmLoader.getTotalMemoryUsage());
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[118]++;
        results.fragmentation = {
          totalMemoryUsage: memoryStats,
          estimatedFragmentation: 'low' // Would need actual analysis
        };

        // Calculate performance score
        const avgAllocationTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[119]++, Object.values(results.allocation).reduce((acc, a) => {
          /* istanbul ignore next */
          cov_vh7yt0zoj().f[9]++;
          cov_vh7yt0zoj().s[120]++;
          return acc + a.avgTimePerAllocation;
        }, 0) / Object.keys(results.allocation).length);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[121]++;
        results.performanceScore = Math.max(0, 100 - avgAllocationTime); // Good if under 1ms average
      } catch (error) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[122]++;
        results.error = error.message;
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[123]++;
        results.performanceScore = 0;
      }
      cov_vh7yt0zoj().s[124]++;
      return results;
    })();
  }

  /**
   * Benchmark neural network performance
   */
  benchmarkNeuralNetworks() {
    /* istanbul ignore next */
    var _this6 = this;
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[10]++;
      const results =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[125]++, {
        networkSizes: {},
        activationFunctions: {},
        simdComparison: {},
        performanceScore: 0
      });
      cov_vh7yt0zoj().s[126]++;
      if (!_this6.ruvSwarm.features.neural_networks) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().b[11][0]++;
        cov_vh7yt0zoj().s[127]++;
        return {
          supported: false,
          reason: 'Neural networks not available',
          performanceScore: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_vh7yt0zoj().b[11][1]++;
      }
      cov_vh7yt0zoj().s[128]++;
      try {
        /* istanbul ignore next */
        var _results$networkSizes;
        // Test different network sizes
        const networkConfigs =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[129]++, [{
          layers: [32, 16, 8],
          name: 'small'
        }, {
          layers: [128, 64, 32],
          name: 'medium'
        }, {
          layers: [512, 256, 128],
          name: 'large'
        }, {
          layers: [784, 256, 128, 10],
          name: 'mnist_style'
        }]);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[130]++;
        for (const config of networkConfigs) {
          const startTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[131]++, performance.now());
          const iterations =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[132]++, config.name === 'large' ?
          /* istanbul ignore next */
          (cov_vh7yt0zoj().b[12][0]++, 10) :
          /* istanbul ignore next */
          (cov_vh7yt0zoj().b[12][1]++, 100));

          // Create test network (simulated)
          const testInput =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[133]++, Array.from({
            length: config.layers[0]
          }, () => {
            /* istanbul ignore next */
            cov_vh7yt0zoj().f[11]++;
            cov_vh7yt0zoj().s[134]++;
            return Math.random();
          }));

          // Run multiple inferences
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[135]++;
          for (let i =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[136]++, 0); i < iterations; i++) {
            // Simulate neural network inference
            const result =
            /* istanbul ignore next */
            (cov_vh7yt0zoj().s[137]++, _this6.simulateNeuralInference(testInput, config.layers));
          }
          const totalTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[138]++, performance.now() - startTime);
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[139]++;
          results.networkSizes[config.name] = {
            layers: config.layers,
            iterations,
            totalTime,
            avgInferenceTime: totalTime / iterations,
            throughput: iterations * 1000 / totalTime // inferences per second
          };
        }

        // Test activation functions
        const activations =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[140]++, ['relu', 'sigmoid', 'tanh', 'gelu']);
        const testVector =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[141]++, Array.from({
          length: 1000
        }, () => {
          /* istanbul ignore next */
          cov_vh7yt0zoj().f[12]++;
          cov_vh7yt0zoj().s[142]++;
          return Math.random() * 2 - 1;
        }));
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[143]++;
        for (const activation of activations) {
          const startTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[144]++, performance.now());
          const iterations =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[145]++, 1000);
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[146]++;
          for (let i =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[147]++, 0); i < iterations; i++) {
            /* istanbul ignore next */
            cov_vh7yt0zoj().s[148]++;
            _this6.simulateActivation(testVector, activation);
          }
          const totalTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[149]++, performance.now() - startTime);
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[150]++;
          results.activationFunctions[activation] = {
            totalTime,
            avgTime: totalTime / iterations,
            vectorSize: testVector.length
          };
        }

        // SIMD vs scalar comparison
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[151]++;
        if (_this6.ruvSwarm.features.simd_support) {
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[13][0]++;
          cov_vh7yt0zoj().s[152]++;
          results.simdComparison = {
            enabled: true,
            estimatedSpeedup: 3.2,
            // Based on SIMD benchmarks
            vectorOperationsOptimized: true
          };
        } else {
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[13][1]++;
          cov_vh7yt0zoj().s[153]++;
          results.simdComparison = {
            enabled: false,
            fallbackUsed: true
          };
        }

        // Calculate performance score
        const mediumNetworkThroughput =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[154]++,
        /* istanbul ignore next */
        (cov_vh7yt0zoj().b[14][0]++, (_results$networkSizes = results.networkSizes.medium) === null || _results$networkSizes === void 0 ? void 0 :
        /* istanbul ignore next */
        _results$networkSizes.throughput) ||
        /* istanbul ignore next */
        (cov_vh7yt0zoj().b[14][1]++, 0));
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[155]++;
        results.performanceScore = Math.min(100, mediumNetworkThroughput / 10); // Good if >1000 inferences/sec
      } catch (error) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[156]++;
        results.error = error.message;
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[157]++;
        results.performanceScore = 0;
      }
      cov_vh7yt0zoj().s[158]++;
      return results;
    })();
  }

  /**
   * Benchmark Claude Code Flow coordination
   */
  benchmarkClaudeFlowCoordination() {
    /* istanbul ignore next */
    var _this7 = this;
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[13]++;
      const results =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[159]++, {
        workflowExecution: {},
        batchingPerformance: {},
        parallelization: {},
        performanceScore: 0
      });
      cov_vh7yt0zoj().s[160]++;
      try {
        // Create test workflow
        const testWorkflow =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[161]++, {
          id: 'benchmark_workflow',
          name: 'Benchmark Test Workflow',
          steps: [{
            id: 'step1',
            type: 'data_processing',
            parallelizable: true,
            enableSIMD: true
          }, {
            id: 'step2',
            type: 'neural_inference',
            parallelizable: true,
            enableSIMD: true
          }, {
            id: 'step3',
            type: 'file_operation',
            parallelizable: true
          }, {
            id: 'step4',
            type: 'mcp_tool_call',
            parallelizable: true
          }, {
            id: 'step5',
            type: 'data_processing',
            parallelizable: true,
            enableSIMD: true
          }]
        });

        // Test workflow creation
        const createStartTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[162]++, performance.now());
        const workflow =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[163]++, yield _this7.claudeFlow.createOptimizedWorkflow(testWorkflow));
        const createTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[164]++, performance.now() - createStartTime);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[165]++;
        results.workflowExecution.creationTime = createTime;
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[166]++;
        results.workflowExecution.parallelizationRate = workflow.metrics.parallelizationRate;

        // Test workflow execution (simulated)
        const execStartTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[167]++, performance.now());

        // Simulate parallel execution
        const batchPromises =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[168]++, testWorkflow.steps.map(
        /* istanbul ignore next */
        /*#__PURE__*/function () {
          var _ref = _asyncToGenerator(function* (step, index) {
            /* istanbul ignore next */
            cov_vh7yt0zoj().f[14]++;
            cov_vh7yt0zoj().s[169]++;
            /* istanbul ignore next */
            yield new Promise(resolve => {
              /* istanbul ignore next */
              cov_vh7yt0zoj().f[15]++;
              cov_vh7yt0zoj().s[170]++;
              return setTimeout(resolve, 10 + Math.random() * 20);
            });
            /* istanbul ignore next */
            cov_vh7yt0zoj().s[171]++;
            return {
              stepId: step.id,
              completed: true
            };
          });
          return function (_x, _x2) {
            return _ref.apply(this, arguments);
          };
        }()));
        const batchResults =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[172]++, yield Promise.all(batchPromises));
        const execTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[173]++, performance.now() - execStartTime);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[174]++;
        results.workflowExecution.executionTime = execTime;
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[175]++;
        results.workflowExecution.stepsCompleted = batchResults.length;

        // Calculate theoretical vs actual speedup
        const sequentialTime =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[176]++, testWorkflow.steps.length * 20); // Assume 20ms per step
        const speedupFactor =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[177]++, sequentialTime / execTime);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[178]++;
        results.parallelization = {
          theoreticalSequentialTime: sequentialTime,
          actualParallelTime: execTime,
          speedupFactor,
          efficiency: speedupFactor / testWorkflow.steps.length
        };

        // Test batching performance
        const batchingReport =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[179]++, _this7.claudeFlow.batchEnforcer.getBatchingReport());
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[180]++;
        results.batchingPerformance = {
          complianceScore: batchingReport.complianceScore,
          violations: batchingReport.violations,
          recommendations: batchingReport.recommendations.length
        };

        // Calculate overall score
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[181]++;
        results.performanceScore = Math.min(100, speedupFactor * 20) * 0.4 +
        // Parallelization (40%)
        batchingReport.complianceScore * 0.3 +
        // Batching compliance (30%)
        Math.min(100, 100 - createTime) * 0.3 // Creation speed (30%)
        ;
      } catch (error) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[182]++;
        results.error = error.message;
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[183]++;
        results.performanceScore = 0;
      }
      cov_vh7yt0zoj().s[184]++;
      return results;
    })();
  }

  /**
   * Benchmark parallel execution patterns
   */
  benchmarkParallelExecution() {
    /* istanbul ignore next */
    var _this8 = this;
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[16]++;
      const results =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[185]++, {
        batchSizes: {},
        taskTypes: {},
        scalability: {},
        performanceScore: 0
      });
      cov_vh7yt0zoj().s[186]++;
      try {
        // Test different batch sizes
        const batchSizes =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[187]++, [1, 2, 4, 8, 16]);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[188]++;
        for (const batchSize of batchSizes) {
          const startTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[189]++, performance.now());

          // Create batch of parallel tasks
          const tasks =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[190]++, Array.from({
            length: batchSize
          }, (_, i) => {
            /* istanbul ignore next */
            cov_vh7yt0zoj().f[17]++;
            cov_vh7yt0zoj().s[191]++;
            return _this8.simulateAsyncTask(10 + Math.random() * 10, `task_${i}`);
          }));

          // Execute in parallel
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[192]++;
          /* istanbul ignore next */
          yield Promise.all(tasks);
          const totalTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[193]++, performance.now() - startTime);
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[194]++;
          results.batchSizes[batchSize] = {
            totalTime,
            avgTimePerTask: totalTime / batchSize,
            throughput: batchSize * 1000 / totalTime
          };
        }

        // Test different task types
        const taskTypes =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[195]++, [{
          name: 'cpu_intensive',
          duration: 50,
          cpuBound: true
        }, {
          name: 'io_bound',
          duration: 20,
          cpuBound: false
        }, {
          name: 'mixed',
          duration: 30,
          cpuBound: true
        }]);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[196]++;
        for (const taskType of taskTypes) {
          const batchSize =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[197]++, 8);
          const startTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[198]++, performance.now());
          const tasks =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[199]++, Array.from({
            length: batchSize
          }, (_, i) => {
            /* istanbul ignore next */
            cov_vh7yt0zoj().f[18]++;
            cov_vh7yt0zoj().s[200]++;
            return _this8.simulateAsyncTask(taskType.duration, `${taskType.name}_${i}`);
          }));
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[201]++;
          /* istanbul ignore next */
          yield Promise.all(tasks);
          const totalTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[202]++, performance.now() - startTime);
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[203]++;
          results.taskTypes[taskType.name] = {
            batchSize,
            totalTime,
            efficiency: taskType.duration * batchSize / totalTime,
            cpuBound: taskType.cpuBound
          };
        }

        // Test scalability
        const scalabilitySizes =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[204]++, [1, 2, 4, 8]);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[205]++;
        results.scalability.measurements = [];
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[206]++;
        for (const size of scalabilitySizes) {
          const startTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[207]++, performance.now());
          const tasks =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[208]++, Array.from({
            length: size
          }, () => {
            /* istanbul ignore next */
            cov_vh7yt0zoj().f[19]++;
            cov_vh7yt0zoj().s[209]++;
            return _this8.simulateAsyncTask(20, 'scalability_test');
          }));
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[210]++;
          /* istanbul ignore next */
          yield Promise.all(tasks);
          const totalTime =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[211]++, performance.now() - startTime);
          const efficiency =
          /* istanbul ignore next */
          (cov_vh7yt0zoj().s[212]++, 20 * size / totalTime);
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[213]++;
          results.scalability.measurements.push({
            batchSize: size,
            totalTime,
            efficiency,
            idealTime: 20,
            // Should be constant for perfect parallelization
            overhead: totalTime - 20
          });
        }

        // Calculate performance score
        const avgEfficiency =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[214]++, Object.values(results.taskTypes).reduce((acc, t) => {
          /* istanbul ignore next */
          cov_vh7yt0zoj().f[20]++;
          cov_vh7yt0zoj().s[215]++;
          return acc + t.efficiency;
        }, 0) / Object.keys(results.taskTypes).length);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[216]++;
        results.performanceScore = Math.min(100, avgEfficiency * 100);
      } catch (error) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[217]++;
        results.error = error.message;
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[218]++;
        results.performanceScore = 0;
      }
      cov_vh7yt0zoj().s[219]++;
      return results;
    })();
  }

  /**
   * Test cross-browser compatibility
   */
  benchmarkBrowserCompatibility() {
    /* istanbul ignore next */
    var _this9 = this;
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[21]++;
      const results =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[220]++, {
        features: {},
        performance: {},
        compatibility: {},
        performanceScore: 0
      });
      cov_vh7yt0zoj().s[221]++;
      try {
        /* istanbul ignore next */
        var _performance, _performance2, _performance3;
        cov_vh7yt0zoj().s[222]++;
        // Test browser features
        results.features = {
          webassembly: typeof WebAssembly !== 'undefined',
          simd: _this9.ruvSwarm.features.simd_support,
          sharedArrayBuffer: typeof SharedArrayBuffer !== 'undefined',
          performanceObserver: typeof PerformanceObserver !== 'undefined',
          workers: typeof Worker !== 'undefined',
          modules: typeof globalThis.import !== 'undefined'
        };

        // Test performance APIs
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[223]++;
        results.performance = {
          performanceNow: typeof
          /* istanbul ignore next */
          ((_performance = performance) === null || _performance === void 0 ? void 0 :
          /* istanbul ignore next */
          _performance.now) === 'function',
          highResolution: performance.now() % 1 !== 0,
          memoryAPI: typeof
          /* istanbul ignore next */
          ((_performance2 = performance) === null || _performance2 === void 0 ? void 0 :
          /* istanbul ignore next */
          _performance2.memory) !== 'undefined',
          navigationTiming: typeof
          /* istanbul ignore next */
          ((_performance3 = performance) === null || _performance3 === void 0 ? void 0 :
          /* istanbul ignore next */
          _performance3.timing) !== 'undefined'
        };

        // Browser detection
        const userAgent =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[224]++, navigator.userAgent);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[225]++;
        results.compatibility = {
          userAgent,
          isChrome: userAgent.includes('Chrome'),
          isFirefox: userAgent.includes('Firefox'),
          isSafari:
          /* istanbul ignore next */
          (cov_vh7yt0zoj().b[15][0]++, userAgent.includes('Safari')) &&
          /* istanbul ignore next */
          (cov_vh7yt0zoj().b[15][1]++, !userAgent.includes('Chrome')),
          isEdge: userAgent.includes('Edge'),
          mobile: /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)
        };

        // Calculate compatibility score
        const featureCount =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[226]++, Object.values(results.features).filter(Boolean).length);
        const performanceCount =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[227]++, Object.values(results.performance).filter(Boolean).length);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[228]++;
        results.performanceScore = (featureCount / Object.keys(results.features).length * 60 + performanceCount / Object.keys(results.performance).length * 40) * 100;
      } catch (error) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[229]++;
        results.error = error.message;
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[230]++;
        results.performanceScore = 0;
      }
      cov_vh7yt0zoj().s[231]++;
      return results;
    })();
  }

  /**
   * Get environment information
   */
  getEnvironmentInfo() {
    /* istanbul ignore next */
    var _navigator$connection;
    cov_vh7yt0zoj().f[22]++;
    cov_vh7yt0zoj().s[232]++;
    return {
      userAgent: navigator.userAgent,
      platform: navigator.platform,
      language: navigator.language,
      hardwareConcurrency:
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[16][0]++, navigator.hardwareConcurrency) ||
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[16][1]++, 'unknown'),
      memory:
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[17][0]++, navigator.deviceMemory) ||
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[17][1]++, 'unknown'),
      connection:
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[18][0]++, (_navigator$connection = navigator.connection) === null || _navigator$connection === void 0 ? void 0 :
      /* istanbul ignore next */
      _navigator$connection.effectiveType) ||
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[18][1]++, 'unknown'),
      timestamp: Date.now(),
      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone
    };
  }

  /**
   * Calculate overall performance score
   */
  calculateOverallScore(benchmarks) {
    /* istanbul ignore next */
    cov_vh7yt0zoj().f[23]++;
    const weights =
    /* istanbul ignore next */
    (cov_vh7yt0zoj().s[233]++, {
      simdOperations: 0.25,
      wasmLoading: 0.15,
      memoryManagement: 0.15,
      neuralNetworks: 0.20,
      claudeFlowCoordination: 0.15,
      parallelExecution: 0.10
    });
    let totalScore =
    /* istanbul ignore next */
    (cov_vh7yt0zoj().s[234]++, 0);
    let totalWeight =
    /* istanbul ignore next */
    (cov_vh7yt0zoj().s[235]++, 0);
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[236]++;
    for (const [category, weight] of Object.entries(weights)) {
      /* istanbul ignore next */
      var _benchmarks$category;
      const score =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[237]++, (_benchmarks$category = benchmarks[category]) === null || _benchmarks$category === void 0 ? void 0 :
      /* istanbul ignore next */
      _benchmarks$category.performanceScore);
      /* istanbul ignore next */
      cov_vh7yt0zoj().s[238]++;
      if (
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[20][0]++, typeof score === 'number') &&
      /* istanbul ignore next */
      (cov_vh7yt0zoj().b[20][1]++, !isNaN(score))) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().b[19][0]++;
        cov_vh7yt0zoj().s[239]++;
        totalScore += score * weight;
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[240]++;
        totalWeight += weight;
      } else
      /* istanbul ignore next */
      {
        cov_vh7yt0zoj().b[19][1]++;
      }
    }
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[241]++;
    return totalWeight > 0 ?
    /* istanbul ignore next */
    (cov_vh7yt0zoj().b[21][0]++, totalScore / totalWeight) :
    /* istanbul ignore next */
    (cov_vh7yt0zoj().b[21][1]++, 0);
  }

  /**
   * Simulate neural network inference
   */
  simulateNeuralInference(input, layers) {
    /* istanbul ignore next */
    cov_vh7yt0zoj().f[24]++;
    let current =
    /* istanbul ignore next */
    (cov_vh7yt0zoj().s[242]++, input);
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[243]++;
    for (let i =
    /* istanbul ignore next */
    (cov_vh7yt0zoj().s[244]++, 0); i < layers.length - 1; i++) {
      const nextSize =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[245]++, layers[i + 1]);
      const next =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[246]++, new Array(nextSize));
      /* istanbul ignore next */
      cov_vh7yt0zoj().s[247]++;
      for (let j =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[248]++, 0); j < nextSize; j++) {
        let sum =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[249]++, 0);
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[250]++;
        for (let k =
        /* istanbul ignore next */
        (cov_vh7yt0zoj().s[251]++, 0); k < current.length; k++) {
          /* istanbul ignore next */
          cov_vh7yt0zoj().s[252]++;
          sum += current[k] * Math.random(); // Simulated weight
        }
        /* istanbul ignore next */
        cov_vh7yt0zoj().s[253]++;
        next[j] = Math.max(0, sum); // ReLU activation
      }
      /* istanbul ignore next */
      cov_vh7yt0zoj().s[254]++;
      current = next;
    }
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[255]++;
    return current;
  }

  /**
   * Simulate activation function
   */
  simulateActivation(vector, activation) {
    /* istanbul ignore next */
    cov_vh7yt0zoj().f[25]++;
    cov_vh7yt0zoj().s[256]++;
    return vector.map(x => {
      /* istanbul ignore next */
      cov_vh7yt0zoj().f[26]++;
      cov_vh7yt0zoj().s[257]++;
      switch (activation) {
        case 'relu':
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[22][0]++;
          cov_vh7yt0zoj().s[258]++;
          return Math.max(0, x);
        case 'sigmoid':
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[22][1]++;
          cov_vh7yt0zoj().s[259]++;
          return 1 / (1 + Math.exp(-x));
        case 'tanh':
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[22][2]++;
          cov_vh7yt0zoj().s[260]++;
          return Math.tanh(x);
        case 'gelu':
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[22][3]++;
          cov_vh7yt0zoj().s[261]++;
          return 0.5 * x * (1 + Math.tanh(Math.sqrt(2 / Math.PI) * (x + 0.044715 * x ** 3)));
        default:
          /* istanbul ignore next */
          cov_vh7yt0zoj().b[22][4]++;
          cov_vh7yt0zoj().s[262]++;
          return x;
      }
    });
  }

  /**
   * Simulate async task for parallel testing
   */
  simulateAsyncTask(duration, taskId) {
    /* istanbul ignore next */
    return _asyncToGenerator(function* () {
      cov_vh7yt0zoj().f[27]++;
      const startTime =
      /* istanbul ignore next */
      (cov_vh7yt0zoj().s[263]++, performance.now());

      // Simulate work with setTimeout
      cov_vh7yt0zoj().s[264]++;
      /* istanbul ignore next */
      yield new Promise(resolve => {
        /* istanbul ignore next */
        cov_vh7yt0zoj().f[28]++;
        cov_vh7yt0zoj().s[265]++;
        return setTimeout(resolve, duration);
      });
      cov_vh7yt0zoj().s[266]++;
      return {
        taskId,
        duration: performance.now() - startTime,
        completed: true
      };
    })();
  }

  /**
   * Generate comprehensive performance report
   */
  generatePerformanceReport(results) {
    /* istanbul ignore next */
    cov_vh7yt0zoj().f[29]++;
    const report =
    /* istanbul ignore next */
    (cov_vh7yt0zoj().s[267]++, {
      summary: {
        overallScore: results.performanceScore,
        grade: this.getPerformanceGrade(results.performanceScore),
        timestamp: results.timestamp,
        environment: results.environment
      },
      detailed: results.benchmarks,
      recommendations: this.generateRecommendations(results.benchmarks),
      comparison: this.compareWithBaseline(results),
      exportData: {
        csv: this.generateCSVData(results),
        json: JSON.stringify(results, null, 2)
      }
    });
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[268]++;
    return report;
  }

  /**
   * Get performance grade
   */
  getPerformanceGrade(score) {
    /* istanbul ignore next */
    cov_vh7yt0zoj().f[30]++;
    cov_vh7yt0zoj().s[269]++;
    if (score >= 90) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[23][0]++;
      cov_vh7yt0zoj().s[270]++;
      return 'A+';
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[23][1]++;
    }
    cov_vh7yt0zoj().s[271]++;
    if (score >= 80) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[24][0]++;
      cov_vh7yt0zoj().s[272]++;
      return 'A';
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[24][1]++;
    }
    cov_vh7yt0zoj().s[273]++;
    if (score >= 70) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[25][0]++;
      cov_vh7yt0zoj().s[274]++;
      return 'B+';
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[25][1]++;
    }
    cov_vh7yt0zoj().s[275]++;
    if (score >= 60) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[26][0]++;
      cov_vh7yt0zoj().s[276]++;
      return 'B';
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[26][1]++;
    }
    cov_vh7yt0zoj().s[277]++;
    if (score >= 50) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[27][0]++;
      cov_vh7yt0zoj().s[278]++;
      return 'C';
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[27][1]++;
    }
    cov_vh7yt0zoj().s[279]++;
    return 'F';
  }

  /**
   * Generate performance recommendations
   */
  generateRecommendations(benchmarks) {
    /* istanbul ignore next */
    var _benchmarks$simdOpera, _benchmarks$memoryMan, _benchmarks$parallelE, _benchmarks$claudeFlo;
    cov_vh7yt0zoj().f[31]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_vh7yt0zoj().s[280]++, []);

    // SIMD recommendations
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[281]++;
    if (
    /* istanbul ignore next */
    ((_benchmarks$simdOpera = benchmarks.simdOperations) === null || _benchmarks$simdOpera === void 0 ? void 0 :
    /* istanbul ignore next */
    _benchmarks$simdOpera.performanceScore) < 70) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[28][0]++;
      cov_vh7yt0zoj().s[282]++;
      recommendations.push({
        category: 'SIMD',
        priority: 'high',
        message: 'Enable SIMD optimization for 6-10x performance improvement',
        action: 'Ensure SIMD-compatible operations use vectorized implementations'
      });
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[28][1]++;
    }

    // Memory recommendations
    cov_vh7yt0zoj().s[283]++;
    if (
    /* istanbul ignore next */
    ((_benchmarks$memoryMan = benchmarks.memoryManagement) === null || _benchmarks$memoryMan === void 0 ? void 0 :
    /* istanbul ignore next */
    _benchmarks$memoryMan.performanceScore) < 60) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[29][0]++;
      cov_vh7yt0zoj().s[284]++;
      recommendations.push({
        category: 'Memory',
        priority: 'medium',
        message: 'Optimize memory allocation patterns',
        action: 'Use memory pooling and reduce allocation frequency'
      });
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[29][1]++;
    }

    // Parallel execution recommendations
    cov_vh7yt0zoj().s[285]++;
    if (
    /* istanbul ignore next */
    ((_benchmarks$parallelE = benchmarks.parallelExecution) === null || _benchmarks$parallelE === void 0 ? void 0 :
    /* istanbul ignore next */
    _benchmarks$parallelE.performanceScore) < 70) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[30][0]++;
      cov_vh7yt0zoj().s[286]++;
      recommendations.push({
        category: 'Parallelization',
        priority: 'high',
        message: 'Use BatchTool for mandatory parallel execution',
        action: 'Combine related operations in single messages'
      });
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[30][1]++;
    }

    // Claude Flow recommendations
    cov_vh7yt0zoj().s[287]++;
    if (
    /* istanbul ignore next */
    ((_benchmarks$claudeFlo = benchmarks.claudeFlowCoordination) === null || _benchmarks$claudeFlo === void 0 || (_benchmarks$claudeFlo =
    /* istanbul ignore next */
    _benchmarks$claudeFlo.batchingPerformance) === null || _benchmarks$claudeFlo === void 0 ? void 0 :
    /* istanbul ignore next */
    _benchmarks$claudeFlo.complianceScore) < 80) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().b[31][0]++;
      cov_vh7yt0zoj().s[288]++;
      recommendations.push({
        category: 'Coordination',
        priority: 'critical',
        message: 'Improve batching compliance for 2.8-4.4x speedup',
        action: 'Follow mandatory BatchTool patterns'
      });
    } else
    /* istanbul ignore next */
    {
      cov_vh7yt0zoj().b[31][1]++;
    }
    cov_vh7yt0zoj().s[289]++;
    return recommendations;
  }

  /**
   * Compare with baseline performance
   */
  compareWithBaseline(results) {
    /* istanbul ignore next */
    cov_vh7yt0zoj().f[32]++;
    cov_vh7yt0zoj().s[290]++;
    // Would compare with stored baseline results
    return {
      available: false,
      message: 'No baseline data available for comparison'
    };
  }

  /**
   * Generate CSV data for export
   */
  generateCSVData(results) {
    /* istanbul ignore next */
    cov_vh7yt0zoj().f[33]++;
    const rows =
    /* istanbul ignore next */
    (cov_vh7yt0zoj().s[291]++, [['Category', 'Metric', 'Value', 'Score']]);
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[292]++;
    for (const [category, data] of Object.entries(results.benchmarks)) {
      /* istanbul ignore next */
      cov_vh7yt0zoj().s[293]++;
      if (data.performanceScore !== undefined) {
        /* istanbul ignore next */
        cov_vh7yt0zoj().b[32][0]++;
        cov_vh7yt0zoj().s[294]++;
        rows.push([category, 'Performance Score', data.performanceScore, data.performanceScore]);
      } else
      /* istanbul ignore next */
      {
        cov_vh7yt0zoj().b[32][1]++;
      }
    }
    /* istanbul ignore next */
    cov_vh7yt0zoj().s[295]++;
    return rows.map(row => {
      /* istanbul ignore next */
      cov_vh7yt0zoj().f[34]++;
      cov_vh7yt0zoj().s[296]++;
      return row.join(',');
    }).join('\n');
  }
}
export { PerformanceBenchmarks };
export default PerformanceBenchmarks;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfdmg3eXQwem9qIiwiYWN0dWFsQ292ZXJhZ2UiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJuIiwidCIsImUiLCJyIiwibyIsImEiLCJjIiwiaSIsInUiLCJ2YWx1ZSIsImRvbmUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImFyZ3VtZW50cyIsImFwcGx5IiwiX25leHQiLCJfdGhyb3ciLCJSdXZTd2FybSIsIldhc21Nb2R1bGVMb2FkZXIiLCJnZXRDbGF1ZGVGbG93IiwiUGVyZm9ybWFuY2VCZW5jaG1hcmtzIiwiY29uc3RydWN0b3IiLCJmIiwicyIsInJlc3VsdHMiLCJNYXAiLCJiYXNlbGluZVJlc3VsdHMiLCJydXZTd2FybSIsIndhc21Mb2FkZXIiLCJjbGF1ZGVGbG93IiwiaW5pdGlhbGl6ZSIsIl90aGlzIiwiY29uc29sZSIsImxvZyIsInVzZVNJTUQiLCJlbmFibGVOZXVyYWxOZXR3b3JrcyIsImxvYWRpbmdTdHJhdGVneSIsImVuZm9yY2VCYXRjaGluZyIsImVuYWJsZVNJTUQiLCJlcnJvciIsInJ1bkZ1bGxCZW5jaG1hcmtTdWl0ZSIsIl90aGlzMiIsInN1aXRlU3RhcnRUaW1lIiwicGVyZm9ybWFuY2UiLCJub3ciLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJlbnZpcm9ubWVudCIsImdldEVudmlyb25tZW50SW5mbyIsImJlbmNobWFya3MiLCJzaW1kT3BlcmF0aW9ucyIsImJlbmNobWFya1NJTURPcGVyYXRpb25zIiwid2FzbUxvYWRpbmciLCJiZW5jaG1hcmtXQVNNTG9hZGluZyIsIm1lbW9yeU1hbmFnZW1lbnQiLCJiZW5jaG1hcmtNZW1vcnlNYW5hZ2VtZW50IiwibmV1cmFsTmV0d29ya3MiLCJiZW5jaG1hcmtOZXVyYWxOZXR3b3JrcyIsImNsYXVkZUZsb3dDb29yZGluYXRpb24iLCJiZW5jaG1hcmtDbGF1ZGVGbG93Q29vcmRpbmF0aW9uIiwicGFyYWxsZWxFeGVjdXRpb24iLCJiZW5jaG1hcmtQYXJhbGxlbEV4ZWN1dGlvbiIsImJyb3dzZXJDb21wYXRpYmlsaXR5IiwiYmVuY2htYXJrQnJvd3NlckNvbXBhdGliaWxpdHkiLCJ0b3RhbFRpbWUiLCJ0b3RhbEJlbmNobWFya1RpbWUiLCJwZXJmb3JtYW5jZVNjb3JlIiwiY2FsY3VsYXRlT3ZlcmFsbFNjb3JlIiwidG9GaXhlZCIsInNldCIsIl90aGlzMyIsImNvcmVNb2R1bGUiLCJsb2FkTW9kdWxlIiwiZXhwb3J0cyIsImRldGVjdF9zaW1kX2NhcGFiaWxpdGllcyIsImIiLCJzdXBwb3J0ZWQiLCJyZWFzb24iLCJzaXplcyIsIml0ZXJhdGlvbnMiLCJvcGVyYXRpb25zIiwiY2FwYWJpbGl0aWVzIiwiSlNPTiIsInBhcnNlIiwib3BlcmF0aW9uIiwiYXZlcmFnZVNwZWVkdXAiLCJ0b3RhbFNwZWVkdXAiLCJ2YWxpZFRlc3RzIiwibGVuZ3RoIiwic2l6ZSIsIml0ZXJDb3VudCIsIl9wZXJmb3JtYW5jZVJlcG9ydCR2ZSIsIl9wZXJmb3JtYW5jZVJlcG9ydCR2ZTIiLCJfcGVyZm9ybWFuY2VSZXBvcnQkdmUzIiwiX3BlcmZvcm1hbmNlUmVwb3J0JHZlNCIsInBlcmZvcm1hbmNlUmVwb3J0Iiwic2ltZF9wZXJmb3JtYW5jZV9yZXBvcnQiLCJzcGVlZHVwIiwidmVjdG9yX29wZXJhdGlvbnMiLCJzcGVlZHVwX2ZhY3RvciIsInNwZWVkdXBGYWN0b3IiLCJzY2FsYXJUaW1lIiwic2NhbGFyX3RpbWVfbnMiLCJzaW1kVGltZSIsInNpbWRfdGltZV9ucyIsInRocm91Z2hwdXQiLCJ0aHJvdWdocHV0X29wc19wZXJfc2VjIiwid2FybiIsIm1lc3NhZ2UiLCJzcGVlZHVwcyIsIk9iamVjdCIsInZhbHVlcyIsIm1hcCIsIm9wIiwiZmlsdGVyIiwicmVkdWNlIiwiYWNjIiwiTWF0aCIsIm1pbiIsIl90aGlzNCIsIl9yZXN1bHRzJHN0cmF0ZWdpZXMkcCIsIl9yZXN1bHRzJHN0cmF0ZWdpZXMkZSIsInN0cmF0ZWdpZXMiLCJtb2R1bGVTdGF0cyIsInJlY29tbWVuZGF0aW9ucyIsInN0cmF0ZWd5Iiwic3RhcnRUaW1lIiwidGVzdExvYWRlciIsImxvYWRUaW1lIiwibWVtb3J5VXNhZ2UiLCJnZXRUb3RhbE1lbW9yeVVzYWdlIiwic3VjY2VzcyIsImdldE1vZHVsZVN0YXR1cyIsInByb2dyZXNzaXZlVGltZSIsInByb2dyZXNzaXZlIiwiSW5maW5pdHkiLCJlYWdlclRpbWUiLCJlYWdlciIsInB1c2giLCJtYXgiLCJfdGhpczUiLCJhbGxvY2F0aW9uIiwiZ2FyYmFnZUNvbGxlY3Rpb24iLCJmcmFnbWVudGF0aW9uIiwiYWxsb2NhdGlvblNpemVzIiwiYWxsb2NhdGlvbkNvdW50cyIsImNvdW50Iiwic3RhcnRNZW1vcnkiLCJqIiwiQXJyYXlCdWZmZXIiLCJlbmRUaW1lIiwiZW5kTWVtb3J5IiwiYXZnVGltZVBlckFsbG9jYXRpb24iLCJtZW1vcnlJbmNyZWFzZSIsImdjU3RhcnRUaW1lIiwiZ2MiLCJvcHRpbWl6ZU1lbW9yeSIsImdjVGltZSIsIm1hbnVhbEdDVGltZSIsImF1dG9tYXRpY0dDQXZhaWxhYmxlIiwibWVtb3J5T3B0aW1pemVkIiwibWVtb3J5U3RhdHMiLCJ0b3RhbE1lbW9yeVVzYWdlIiwiZXN0aW1hdGVkRnJhZ21lbnRhdGlvbiIsImF2Z0FsbG9jYXRpb25UaW1lIiwia2V5cyIsIl90aGlzNiIsIm5ldHdvcmtTaXplcyIsImFjdGl2YXRpb25GdW5jdGlvbnMiLCJzaW1kQ29tcGFyaXNvbiIsImZlYXR1cmVzIiwibmV1cmFsX25ldHdvcmtzIiwiX3Jlc3VsdHMkbmV0d29ya1NpemVzIiwibmV0d29ya0NvbmZpZ3MiLCJsYXllcnMiLCJuYW1lIiwiY29uZmlnIiwidGVzdElucHV0IiwiQXJyYXkiLCJmcm9tIiwicmFuZG9tIiwicmVzdWx0Iiwic2ltdWxhdGVOZXVyYWxJbmZlcmVuY2UiLCJhdmdJbmZlcmVuY2VUaW1lIiwiYWN0aXZhdGlvbnMiLCJ0ZXN0VmVjdG9yIiwiYWN0aXZhdGlvbiIsInNpbXVsYXRlQWN0aXZhdGlvbiIsImF2Z1RpbWUiLCJ2ZWN0b3JTaXplIiwic2ltZF9zdXBwb3J0IiwiZW5hYmxlZCIsImVzdGltYXRlZFNwZWVkdXAiLCJ2ZWN0b3JPcGVyYXRpb25zT3B0aW1pemVkIiwiZmFsbGJhY2tVc2VkIiwibWVkaXVtTmV0d29ya1Rocm91Z2hwdXQiLCJtZWRpdW0iLCJfdGhpczciLCJ3b3JrZmxvd0V4ZWN1dGlvbiIsImJhdGNoaW5nUGVyZm9ybWFuY2UiLCJwYXJhbGxlbGl6YXRpb24iLCJ0ZXN0V29ya2Zsb3ciLCJpZCIsInN0ZXBzIiwidHlwZSIsInBhcmFsbGVsaXphYmxlIiwiY3JlYXRlU3RhcnRUaW1lIiwid29ya2Zsb3ciLCJjcmVhdGVPcHRpbWl6ZWRXb3JrZmxvdyIsImNyZWF0ZVRpbWUiLCJjcmVhdGlvblRpbWUiLCJwYXJhbGxlbGl6YXRpb25SYXRlIiwibWV0cmljcyIsImV4ZWNTdGFydFRpbWUiLCJiYXRjaFByb21pc2VzIiwiX3JlZiIsInN0ZXAiLCJpbmRleCIsInNldFRpbWVvdXQiLCJzdGVwSWQiLCJjb21wbGV0ZWQiLCJfeCIsIl94MiIsImJhdGNoUmVzdWx0cyIsImFsbCIsImV4ZWNUaW1lIiwiZXhlY3V0aW9uVGltZSIsInN0ZXBzQ29tcGxldGVkIiwic2VxdWVudGlhbFRpbWUiLCJ0aGVvcmV0aWNhbFNlcXVlbnRpYWxUaW1lIiwiYWN0dWFsUGFyYWxsZWxUaW1lIiwiZWZmaWNpZW5jeSIsImJhdGNoaW5nUmVwb3J0IiwiYmF0Y2hFbmZvcmNlciIsImdldEJhdGNoaW5nUmVwb3J0IiwiY29tcGxpYW5jZVNjb3JlIiwidmlvbGF0aW9ucyIsIl90aGlzOCIsImJhdGNoU2l6ZXMiLCJ0YXNrVHlwZXMiLCJzY2FsYWJpbGl0eSIsImJhdGNoU2l6ZSIsInRhc2tzIiwiXyIsInNpbXVsYXRlQXN5bmNUYXNrIiwiYXZnVGltZVBlclRhc2siLCJkdXJhdGlvbiIsImNwdUJvdW5kIiwidGFza1R5cGUiLCJzY2FsYWJpbGl0eVNpemVzIiwibWVhc3VyZW1lbnRzIiwiaWRlYWxUaW1lIiwib3ZlcmhlYWQiLCJhdmdFZmZpY2llbmN5IiwiX3RoaXM5IiwiY29tcGF0aWJpbGl0eSIsIl9wZXJmb3JtYW5jZSIsIl9wZXJmb3JtYW5jZTIiLCJfcGVyZm9ybWFuY2UzIiwid2ViYXNzZW1ibHkiLCJXZWJBc3NlbWJseSIsInNpbWQiLCJzaGFyZWRBcnJheUJ1ZmZlciIsIlNoYXJlZEFycmF5QnVmZmVyIiwicGVyZm9ybWFuY2VPYnNlcnZlciIsIlBlcmZvcm1hbmNlT2JzZXJ2ZXIiLCJ3b3JrZXJzIiwiV29ya2VyIiwibW9kdWxlcyIsImdsb2JhbFRoaXMiLCJpbXBvcnQiLCJwZXJmb3JtYW5jZU5vdyIsImhpZ2hSZXNvbHV0aW9uIiwibWVtb3J5QVBJIiwibWVtb3J5IiwibmF2aWdhdGlvblRpbWluZyIsInRpbWluZyIsInVzZXJBZ2VudCIsIm5hdmlnYXRvciIsImlzQ2hyb21lIiwiaW5jbHVkZXMiLCJpc0ZpcmVmb3giLCJpc1NhZmFyaSIsImlzRWRnZSIsIm1vYmlsZSIsInRlc3QiLCJmZWF0dXJlQ291bnQiLCJCb29sZWFuIiwicGVyZm9ybWFuY2VDb3VudCIsIl9uYXZpZ2F0b3IkY29ubmVjdGlvbiIsInBsYXRmb3JtIiwibGFuZ3VhZ2UiLCJoYXJkd2FyZUNvbmN1cnJlbmN5IiwiZGV2aWNlTWVtb3J5IiwiY29ubmVjdGlvbiIsImVmZmVjdGl2ZVR5cGUiLCJ0aW1lem9uZSIsIkludGwiLCJEYXRlVGltZUZvcm1hdCIsInJlc29sdmVkT3B0aW9ucyIsInRpbWVab25lIiwid2VpZ2h0cyIsInRvdGFsU2NvcmUiLCJ0b3RhbFdlaWdodCIsImNhdGVnb3J5Iiwid2VpZ2h0IiwiZW50cmllcyIsIl9iZW5jaG1hcmtzJGNhdGVnb3J5Iiwic2NvcmUiLCJpc05hTiIsImlucHV0IiwiY3VycmVudCIsIm5leHRTaXplIiwibmV4dCIsInN1bSIsImsiLCJ2ZWN0b3IiLCJ4IiwiZXhwIiwidGFuaCIsInNxcnQiLCJQSSIsInRhc2tJZCIsImdlbmVyYXRlUGVyZm9ybWFuY2VSZXBvcnQiLCJyZXBvcnQiLCJzdW1tYXJ5Iiwib3ZlcmFsbFNjb3JlIiwiZ3JhZGUiLCJnZXRQZXJmb3JtYW5jZUdyYWRlIiwiZGV0YWlsZWQiLCJnZW5lcmF0ZVJlY29tbWVuZGF0aW9ucyIsImNvbXBhcmlzb24iLCJjb21wYXJlV2l0aEJhc2VsaW5lIiwiZXhwb3J0RGF0YSIsImNzdiIsImdlbmVyYXRlQ1NWRGF0YSIsImpzb24iLCJzdHJpbmdpZnkiLCJfYmVuY2htYXJrcyRzaW1kT3BlcmEiLCJfYmVuY2htYXJrcyRtZW1vcnlNYW4iLCJfYmVuY2htYXJrcyRwYXJhbGxlbEUiLCJfYmVuY2htYXJrcyRjbGF1ZGVGbG8iLCJwcmlvcml0eSIsImFjdGlvbiIsImF2YWlsYWJsZSIsInJvd3MiLCJkYXRhIiwidW5kZWZpbmVkIiwicm93Iiwiam9pbiJdLCJzb3VyY2VzIjpbInBlcmZvcm1hbmNlLWJlbmNobWFya3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb21wcmVoZW5zaXZlIFBlcmZvcm1hbmNlIEJlbmNobWFya2luZyBTdWl0ZVxuICogXG4gKiBQcm92aWRlcyBkZXRhaWxlZCBwZXJmb3JtYW5jZSBhbmFseXNpcyBmb3IgU0lNRCBvcGVyYXRpb25zLFxuICogV0FTTSBsb2FkaW5nLCBtZW1vcnkgbWFuYWdlbWVudCwgYW5kIENsYXVkZSBDb2RlIEZsb3cgY29vcmRpbmF0aW9uLlxuICovXG5cbmltcG9ydCB7IFJ1dlN3YXJtIH0gZnJvbSAnLi9pbmRleC1lbmhhbmNlZC5qcyc7XG5pbXBvcnQgeyBXYXNtTW9kdWxlTG9hZGVyIH0gZnJvbSAnLi93YXNtLWxvYWRlci5qcyc7XG5pbXBvcnQgeyBnZXRDbGF1ZGVGbG93IH0gZnJvbSAnLi9jbGF1ZGUtZmxvdy1lbmhhbmNlZC5qcyc7XG5cbmNsYXNzIFBlcmZvcm1hbmNlQmVuY2htYXJrcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMucmVzdWx0cyA9IG5ldyBNYXAoKTtcbiAgICB0aGlzLmJhc2VsaW5lUmVzdWx0cyA9IG5ldyBNYXAoKTtcbiAgICB0aGlzLnJ1dlN3YXJtID0gbnVsbDtcbiAgICB0aGlzLndhc21Mb2FkZXIgPSBudWxsO1xuICAgIHRoaXMuY2xhdWRlRmxvdyA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZSBiZW5jaG1hcmtpbmcgc3VpdGVcbiAgICovXG4gIGFzeW5jIGluaXRpYWxpemUoKSB7XG4gICAgY29uc29sZS5sb2coJ/Cfk4ogSW5pdGlhbGl6aW5nIFBlcmZvcm1hbmNlIEJlbmNobWFya2luZyBTdWl0ZS4uLicpO1xuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBJbml0aWFsaXplIHJ1di1zd2FybSB3aXRoIG9wdGltaXphdGlvbnNcbiAgICAgIHRoaXMucnV2U3dhcm0gPSBhd2FpdCBSdXZTd2FybS5pbml0aWFsaXplKHtcbiAgICAgICAgdXNlU0lNRDogdHJ1ZSxcbiAgICAgICAgZW5hYmxlTmV1cmFsTmV0d29ya3M6IHRydWUsXG4gICAgICAgIGxvYWRpbmdTdHJhdGVneTogJ3Byb2dyZXNzaXZlJ1xuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIEluaXRpYWxpemUgV0FTTSBsb2FkZXJcbiAgICAgIHRoaXMud2FzbUxvYWRlciA9IG5ldyBXYXNtTW9kdWxlTG9hZGVyKCk7XG4gICAgICBhd2FpdCB0aGlzLndhc21Mb2FkZXIuaW5pdGlhbGl6ZSgncHJvZ3Jlc3NpdmUnKTtcbiAgICAgIFxuICAgICAgLy8gSW5pdGlhbGl6ZSBDbGF1ZGUgQ29kZSBGbG93XG4gICAgICB0aGlzLmNsYXVkZUZsb3cgPSBhd2FpdCBnZXRDbGF1ZGVGbG93KHtcbiAgICAgICAgZW5mb3JjZUJhdGNoaW5nOiB0cnVlLFxuICAgICAgICBlbmFibGVTSU1EOiB0cnVlXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ+KchSBCZW5jaG1hcmtpbmcgc3VpdGUgaW5pdGlhbGl6ZWQnKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIEZhaWxlZCB0byBpbml0aWFsaXplIGJlbmNobWFya2luZyBzdWl0ZTonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUnVuIGNvbXByZWhlbnNpdmUgcGVyZm9ybWFuY2UgYmVuY2htYXJrc1xuICAgKi9cbiAgYXN5bmMgcnVuRnVsbEJlbmNobWFya1N1aXRlKCkge1xuICAgIGNvbnNvbGUubG9nKCfwn4+D4oCN4pmC77iPIFJ1bm5pbmcgY29tcHJlaGVuc2l2ZSBwZXJmb3JtYW5jZSBiZW5jaG1hcmtzLi4uJyk7XG4gICAgXG4gICAgY29uc3Qgc3VpdGVTdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICBjb25zdCByZXN1bHRzID0ge1xuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICBlbnZpcm9ubWVudDogdGhpcy5nZXRFbnZpcm9ubWVudEluZm8oKSxcbiAgICAgIGJlbmNobWFya3M6IHt9XG4gICAgfTtcbiAgICBcbiAgICB0cnkge1xuICAgICAgLy8gMS4gU0lNRCBPcGVyYXRpb25zIEJlbmNobWFya1xuICAgICAgY29uc29sZS5sb2coJ/Cfk4ggQmVuY2htYXJraW5nIFNJTUQgb3BlcmF0aW9ucy4uLicpO1xuICAgICAgcmVzdWx0cy5iZW5jaG1hcmtzLnNpbWRPcGVyYXRpb25zID0gYXdhaXQgdGhpcy5iZW5jaG1hcmtTSU1ET3BlcmF0aW9ucygpO1xuICAgICAgXG4gICAgICAvLyAyLiBXQVNNIExvYWRpbmcgUGVyZm9ybWFuY2VcbiAgICAgIGNvbnNvbGUubG9nKCfwn5OmIEJlbmNobWFya2luZyBXQVNNIGxvYWRpbmcuLi4nKTtcbiAgICAgIHJlc3VsdHMuYmVuY2htYXJrcy53YXNtTG9hZGluZyA9IGF3YWl0IHRoaXMuYmVuY2htYXJrV0FTTUxvYWRpbmcoKTtcbiAgICAgIFxuICAgICAgLy8gMy4gTWVtb3J5IE1hbmFnZW1lbnRcbiAgICAgIGNvbnNvbGUubG9nKCfwn6egIEJlbmNobWFya2luZyBtZW1vcnkgbWFuYWdlbWVudC4uLicpO1xuICAgICAgcmVzdWx0cy5iZW5jaG1hcmtzLm1lbW9yeU1hbmFnZW1lbnQgPSBhd2FpdCB0aGlzLmJlbmNobWFya01lbW9yeU1hbmFnZW1lbnQoKTtcbiAgICAgIFxuICAgICAgLy8gNC4gTmV1cmFsIE5ldHdvcmsgUGVyZm9ybWFuY2VcbiAgICAgIGNvbnNvbGUubG9nKCfwn6egIEJlbmNobWFya2luZyBuZXVyYWwgbmV0d29ya3MuLi4nKTtcbiAgICAgIHJlc3VsdHMuYmVuY2htYXJrcy5uZXVyYWxOZXR3b3JrcyA9IGF3YWl0IHRoaXMuYmVuY2htYXJrTmV1cmFsTmV0d29ya3MoKTtcbiAgICAgIFxuICAgICAgLy8gNS4gQ2xhdWRlIENvZGUgRmxvdyBDb29yZGluYXRpb25cbiAgICAgIGNvbnNvbGUubG9nKCfimqEgQmVuY2htYXJraW5nIENsYXVkZSBGbG93IGNvb3JkaW5hdGlvbi4uLicpO1xuICAgICAgcmVzdWx0cy5iZW5jaG1hcmtzLmNsYXVkZUZsb3dDb29yZGluYXRpb24gPSBhd2FpdCB0aGlzLmJlbmNobWFya0NsYXVkZUZsb3dDb29yZGluYXRpb24oKTtcbiAgICAgIFxuICAgICAgLy8gNi4gUGFyYWxsZWwgRXhlY3V0aW9uXG4gICAgICBjb25zb2xlLmxvZygn8J+UhCBCZW5jaG1hcmtpbmcgcGFyYWxsZWwgZXhlY3V0aW9uLi4uJyk7XG4gICAgICByZXN1bHRzLmJlbmNobWFya3MucGFyYWxsZWxFeGVjdXRpb24gPSBhd2FpdCB0aGlzLmJlbmNobWFya1BhcmFsbGVsRXhlY3V0aW9uKCk7XG4gICAgICBcbiAgICAgIC8vIDcuIENyb3NzLWJyb3dzZXIgQ29tcGF0aWJpbGl0eVxuICAgICAgY29uc29sZS5sb2coJ/CfjJAgVGVzdGluZyBjcm9zcy1icm93c2VyIGNvbXBhdGliaWxpdHkuLi4nKTtcbiAgICAgIHJlc3VsdHMuYmVuY2htYXJrcy5icm93c2VyQ29tcGF0aWJpbGl0eSA9IGF3YWl0IHRoaXMuYmVuY2htYXJrQnJvd3NlckNvbXBhdGliaWxpdHkoKTtcbiAgICAgIFxuICAgICAgY29uc3QgdG90YWxUaW1lID0gcGVyZm9ybWFuY2Uubm93KCkgLSBzdWl0ZVN0YXJ0VGltZTtcbiAgICAgIHJlc3VsdHMudG90YWxCZW5jaG1hcmtUaW1lID0gdG90YWxUaW1lO1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgb3ZlcmFsbCBwZXJmb3JtYW5jZSBzY29yZVxuICAgICAgcmVzdWx0cy5wZXJmb3JtYW5jZVNjb3JlID0gdGhpcy5jYWxjdWxhdGVPdmVyYWxsU2NvcmUocmVzdWx0cy5iZW5jaG1hcmtzKTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coYOKchSBCZW5jaG1hcmsgc3VpdGUgY29tcGxldGVkIGluICR7dG90YWxUaW1lLnRvRml4ZWQoMil9bXNgKTtcbiAgICAgIGNvbnNvbGUubG9nKGDwn5OKIE92ZXJhbGwgUGVyZm9ybWFuY2UgU2NvcmU6ICR7cmVzdWx0cy5wZXJmb3JtYW5jZVNjb3JlLnRvRml4ZWQoMSl9LzEwMGApO1xuICAgICAgXG4gICAgICB0aGlzLnJlc3VsdHMuc2V0KCdmdWxsX3N1aXRlJywgcmVzdWx0cyk7XG4gICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgQmVuY2htYXJrIHN1aXRlIGZhaWxlZDonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQmVuY2htYXJrIFNJTUQgb3BlcmF0aW9ucyBwZXJmb3JtYW5jZVxuICAgKi9cbiAgYXN5bmMgYmVuY2htYXJrU0lNRE9wZXJhdGlvbnMoKSB7XG4gICAgY29uc3QgY29yZU1vZHVsZSA9IGF3YWl0IHRoaXMud2FzbUxvYWRlci5sb2FkTW9kdWxlKCdjb3JlJyk7XG4gICAgXG4gICAgaWYgKCFjb3JlTW9kdWxlLmV4cG9ydHMuZGV0ZWN0X3NpbWRfY2FwYWJpbGl0aWVzKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdXBwb3J0ZWQ6IGZhbHNlLFxuICAgICAgICByZWFzb246ICdTSU1EIG1vZHVsZSBub3QgYXZhaWxhYmxlJ1xuICAgICAgfTtcbiAgICB9XG4gICAgXG4gICAgY29uc3Qgc2l6ZXMgPSBbMTAwLCAxMDAwLCAxMDAwMCwgMTAwMDAwXTtcbiAgICBjb25zdCBpdGVyYXRpb25zID0gWzEwMDAsIDEwMCwgMTAsIDFdO1xuICAgIGNvbnN0IG9wZXJhdGlvbnMgPSBbJ2RvdF9wcm9kdWN0JywgJ3ZlY3Rvcl9hZGQnLCAndmVjdG9yX3NjYWxlJywgJ3JlbHVfYWN0aXZhdGlvbiddO1xuICAgIFxuICAgIGNvbnN0IHJlc3VsdHMgPSB7XG4gICAgICBzdXBwb3J0ZWQ6IHRydWUsXG4gICAgICBjYXBhYmlsaXRpZXM6IEpTT04ucGFyc2UoY29yZU1vZHVsZS5leHBvcnRzLmRldGVjdF9zaW1kX2NhcGFiaWxpdGllcygpKSxcbiAgICAgIG9wZXJhdGlvbnM6IHt9XG4gICAgfTtcbiAgICBcbiAgICBmb3IgKGNvbnN0IG9wZXJhdGlvbiBvZiBvcGVyYXRpb25zKSB7XG4gICAgICByZXN1bHRzLm9wZXJhdGlvbnNbb3BlcmF0aW9uXSA9IHtcbiAgICAgICAgc2l6ZXM6IHt9LFxuICAgICAgICBhdmVyYWdlU3BlZWR1cDogMFxuICAgICAgfTtcbiAgICAgIFxuICAgICAgbGV0IHRvdGFsU3BlZWR1cCA9IDA7XG4gICAgICBsZXQgdmFsaWRUZXN0cyA9IDA7XG4gICAgICBcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgc2l6ZSA9IHNpemVzW2ldO1xuICAgICAgICBjb25zdCBpdGVyQ291bnQgPSBpdGVyYXRpb25zW2ldO1xuICAgICAgICBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBwZXJmb3JtYW5jZVJlcG9ydCA9IEpTT04ucGFyc2UoXG4gICAgICAgICAgICBjb3JlTW9kdWxlLmV4cG9ydHMuc2ltZF9wZXJmb3JtYW5jZV9yZXBvcnQoc2l6ZSwgaXRlckNvdW50KVxuICAgICAgICAgICk7XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc3Qgc3BlZWR1cCA9IHBlcmZvcm1hbmNlUmVwb3J0LnZlY3Rvcl9vcGVyYXRpb25zPy5zcGVlZHVwX2ZhY3RvciB8fCAxLjA7XG4gICAgICAgICAgXG4gICAgICAgICAgcmVzdWx0cy5vcGVyYXRpb25zW29wZXJhdGlvbl0uc2l6ZXNbc2l6ZV0gPSB7XG4gICAgICAgICAgICBpdGVyYXRpb25zOiBpdGVyQ291bnQsXG4gICAgICAgICAgICBzcGVlZHVwRmFjdG9yOiBzcGVlZHVwLFxuICAgICAgICAgICAgc2NhbGFyVGltZTogcGVyZm9ybWFuY2VSZXBvcnQudmVjdG9yX29wZXJhdGlvbnM/LnNjYWxhcl90aW1lX25zIHx8IDAsXG4gICAgICAgICAgICBzaW1kVGltZTogcGVyZm9ybWFuY2VSZXBvcnQudmVjdG9yX29wZXJhdGlvbnM/LnNpbWRfdGltZV9ucyB8fCAwLFxuICAgICAgICAgICAgdGhyb3VnaHB1dDogcGVyZm9ybWFuY2VSZXBvcnQudmVjdG9yX29wZXJhdGlvbnM/LnRocm91Z2hwdXRfb3BzX3Blcl9zZWMgfHwgMFxuICAgICAgICAgIH07XG4gICAgICAgICAgXG4gICAgICAgICAgdG90YWxTcGVlZHVwICs9IHNwZWVkdXA7XG4gICAgICAgICAgdmFsaWRUZXN0cysrO1xuICAgICAgICAgIFxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUud2FybihgRmFpbGVkIHRvIGJlbmNobWFyayAke29wZXJhdGlvbn0gd2l0aCBzaXplICR7c2l6ZX06YCwgZXJyb3IpO1xuICAgICAgICAgIHJlc3VsdHMub3BlcmF0aW9uc1tvcGVyYXRpb25dLnNpemVzW3NpemVdID0ge1xuICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgICBzcGVlZHVwRmFjdG9yOiAxLjBcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJlc3VsdHMub3BlcmF0aW9uc1tvcGVyYXRpb25dLmF2ZXJhZ2VTcGVlZHVwID0gdmFsaWRUZXN0cyA+IDAgPyB0b3RhbFNwZWVkdXAgLyB2YWxpZFRlc3RzIDogMS4wO1xuICAgIH1cbiAgICBcbiAgICAvLyBDYWxjdWxhdGUgb3ZlcmFsbCBTSU1EIHBlcmZvcm1hbmNlIHNjb3JlXG4gICAgY29uc3Qgc3BlZWR1cHMgPSBPYmplY3QudmFsdWVzKHJlc3VsdHMub3BlcmF0aW9ucylcbiAgICAgIC5tYXAob3AgPT4gb3AuYXZlcmFnZVNwZWVkdXApXG4gICAgICAuZmlsdGVyKHMgPT4gcyA+IDApO1xuICAgIFxuICAgIHJlc3VsdHMuYXZlcmFnZVNwZWVkdXAgPSBzcGVlZHVwcy5yZWR1Y2UoKGFjYywgcykgPT4gYWNjICsgcywgMCkgLyBzcGVlZHVwcy5sZW5ndGg7XG4gICAgcmVzdWx0cy5wZXJmb3JtYW5jZVNjb3JlID0gTWF0aC5taW4oMTAwLCAocmVzdWx0cy5hdmVyYWdlU3BlZWR1cCAtIDEuMCkgKiAyNSk7IC8vIE1heCBzY29yZSBhdCA1eCBzcGVlZHVwXG4gICAgXG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cblxuICAvKipcbiAgICogQmVuY2htYXJrIFdBU00gbG9hZGluZyBwZXJmb3JtYW5jZVxuICAgKi9cbiAgYXN5bmMgYmVuY2htYXJrV0FTTUxvYWRpbmcoKSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IHtcbiAgICAgIHN0cmF0ZWdpZXM6IHt9LFxuICAgICAgbW9kdWxlU3RhdHM6IHt9LFxuICAgICAgcmVjb21tZW5kYXRpb25zOiBbXVxuICAgIH07XG4gICAgXG4gICAgLy8gVGVzdCBkaWZmZXJlbnQgbG9hZGluZyBzdHJhdGVnaWVzXG4gICAgY29uc3Qgc3RyYXRlZ2llcyA9IFsnZWFnZXInLCAncHJvZ3Jlc3NpdmUnLCAnb24tZGVtYW5kJ107XG4gICAgXG4gICAgZm9yIChjb25zdCBzdHJhdGVneSBvZiBzdHJhdGVnaWVzKSB7XG4gICAgICBjb25zb2xlLmxvZyhgVGVzdGluZyAke3N0cmF0ZWd5fSBsb2FkaW5nIHN0cmF0ZWd5Li4uYCk7XG4gICAgICBcbiAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgXG4gICAgICB0cnkge1xuICAgICAgICAvLyBDcmVhdGUgbmV3IGxvYWRlciBmb3IgY2xlYW4gdGVzdFxuICAgICAgICBjb25zdCB0ZXN0TG9hZGVyID0gbmV3IFdhc21Nb2R1bGVMb2FkZXIoKTtcbiAgICAgICAgYXdhaXQgdGVzdExvYWRlci5pbml0aWFsaXplKHN0cmF0ZWd5KTtcbiAgICAgICAgXG4gICAgICAgIC8vIExvYWQgY29yZSBtb2R1bGVcbiAgICAgICAgYXdhaXQgdGVzdExvYWRlci5sb2FkTW9kdWxlKCdjb3JlJyk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBsb2FkVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpIC0gc3RhcnRUaW1lO1xuICAgICAgICBjb25zdCBtZW1vcnlVc2FnZSA9IHRlc3RMb2FkZXIuZ2V0VG90YWxNZW1vcnlVc2FnZSgpO1xuICAgICAgICBcbiAgICAgICAgcmVzdWx0cy5zdHJhdGVnaWVzW3N0cmF0ZWd5XSA9IHtcbiAgICAgICAgICBsb2FkVGltZSxcbiAgICAgICAgICBtZW1vcnlVc2FnZSxcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlXG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmVzdWx0cy5zdHJhdGVnaWVzW3N0cmF0ZWd5XSA9IHtcbiAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyBHZXQgZGV0YWlsZWQgbW9kdWxlIHN0YXRpc3RpY3NcbiAgICByZXN1bHRzLm1vZHVsZVN0YXRzID0gdGhpcy53YXNtTG9hZGVyLmdldE1vZHVsZVN0YXR1cygpO1xuICAgIFxuICAgIC8vIFBlcmZvcm1hbmNlIHJlY29tbWVuZGF0aW9uc1xuICAgIGNvbnN0IHByb2dyZXNzaXZlVGltZSA9IHJlc3VsdHMuc3RyYXRlZ2llcy5wcm9ncmVzc2l2ZT8ubG9hZFRpbWUgfHwgSW5maW5pdHk7XG4gICAgY29uc3QgZWFnZXJUaW1lID0gcmVzdWx0cy5zdHJhdGVnaWVzLmVhZ2VyPy5sb2FkVGltZSB8fCBJbmZpbml0eTtcbiAgICBcbiAgICBpZiAocHJvZ3Jlc3NpdmVUaW1lIDwgZWFnZXJUaW1lICogMC44KSB7XG4gICAgICByZXN1bHRzLnJlY29tbWVuZGF0aW9ucy5wdXNoKCdQcm9ncmVzc2l2ZSBsb2FkaW5nIHByb3ZpZGVzIGJlc3QgcGVyZm9ybWFuY2UnKTtcbiAgICB9IGVsc2UgaWYgKGVhZ2VyVGltZSA8IHByb2dyZXNzaXZlVGltZSAqIDAuOCkge1xuICAgICAgcmVzdWx0cy5yZWNvbW1lbmRhdGlvbnMucHVzaCgnRWFnZXIgbG9hZGluZyBwcm92aWRlcyBiZXN0IHBlcmZvcm1hbmNlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdHMucmVjb21tZW5kYXRpb25zLnB1c2goJ0xvYWRpbmcgc3RyYXRlZ2llcyBoYXZlIHNpbWlsYXIgcGVyZm9ybWFuY2UnKTtcbiAgICB9XG4gICAgXG4gICAgcmVzdWx0cy5wZXJmb3JtYW5jZVNjb3JlID0gTWF0aC5tYXgoMCwgMTAwIC0gKHByb2dyZXNzaXZlVGltZSAvIDEwMCkpOyAvLyBHb29kIGlmIHVuZGVyIDEwMG1zXG4gICAgXG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cblxuICAvKipcbiAgICogQmVuY2htYXJrIG1lbW9yeSBtYW5hZ2VtZW50IHBlcmZvcm1hbmNlXG4gICAqL1xuICBhc3luYyBiZW5jaG1hcmtNZW1vcnlNYW5hZ2VtZW50KCkge1xuICAgIGNvbnN0IHJlc3VsdHMgPSB7XG4gICAgICBhbGxvY2F0aW9uOiB7fSxcbiAgICAgIGdhcmJhZ2VDb2xsZWN0aW9uOiB7fSxcbiAgICAgIGZyYWdtZW50YXRpb246IHt9LFxuICAgICAgcGVyZm9ybWFuY2VTY29yZTogMFxuICAgIH07XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIC8vIFRlc3QgbWVtb3J5IGFsbG9jYXRpb24gcGF0dGVybnNcbiAgICAgIGNvbnN0IGFsbG9jYXRpb25TaXplcyA9IFsxMDI0LCA4MTkyLCA2NTUzNiwgMTA0ODU3Nl07IC8vIDFLQiB0byAxTUJcbiAgICAgIGNvbnN0IGFsbG9jYXRpb25Db3VudHMgPSBbMTAwMCwgMTAwLCAxMCwgMV07XG4gICAgICBcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsb2NhdGlvblNpemVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHNpemUgPSBhbGxvY2F0aW9uU2l6ZXNbaV07XG4gICAgICAgIGNvbnN0IGNvdW50ID0gYWxsb2NhdGlvbkNvdW50c1tpXTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgICBjb25zdCBzdGFydE1lbW9yeSA9IHRoaXMud2FzbUxvYWRlci5nZXRUb3RhbE1lbW9yeVVzYWdlKCk7XG4gICAgICAgIFxuICAgICAgICAvLyBTaW11bGF0ZSBhbGxvY2F0aW9ucyAod291bGQgbmVlZCBhY3R1YWwgbWVtb3J5IHBvb2wgaW50ZWdyYXRpb24pXG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgY291bnQ7IGorKykge1xuICAgICAgICAgIC8vIFRoaXMgd291bGQgdXNlIHRoZSBhY3R1YWwgbWVtb3J5IHBvb2xcbiAgICAgICAgICBuZXcgQXJyYXlCdWZmZXIoc2l6ZSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGVuZFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICAgICAgY29uc3QgZW5kTWVtb3J5ID0gdGhpcy53YXNtTG9hZGVyLmdldFRvdGFsTWVtb3J5VXNhZ2UoKTtcbiAgICAgICAgXG4gICAgICAgIHJlc3VsdHMuYWxsb2NhdGlvbltgJHtzaXplfV9ieXRlc2BdID0ge1xuICAgICAgICAgIGNvdW50LFxuICAgICAgICAgIHRvdGFsVGltZTogZW5kVGltZSAtIHN0YXJ0VGltZSxcbiAgICAgICAgICBhdmdUaW1lUGVyQWxsb2NhdGlvbjogKGVuZFRpbWUgLSBzdGFydFRpbWUpIC8gY291bnQsXG4gICAgICAgICAgbWVtb3J5SW5jcmVhc2U6IGVuZE1lbW9yeSAtIHN0YXJ0TWVtb3J5XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFRlc3QgZ2FyYmFnZSBjb2xsZWN0aW9uIHBlcmZvcm1hbmNlXG4gICAgICBjb25zdCBnY1N0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgXG4gICAgICAvLyBUcmlnZ2VyIEdDIGlmIGF2YWlsYWJsZVxuICAgICAgaWYgKHR5cGVvZiBnYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBnYygpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBGb3JjZSBtZW1vcnkgb3B0aW1pemF0aW9uXG4gICAgICB0aGlzLndhc21Mb2FkZXIub3B0aW1pemVNZW1vcnkoKTtcbiAgICAgIFxuICAgICAgY29uc3QgZ2NUaW1lID0gcGVyZm9ybWFuY2Uubm93KCkgLSBnY1N0YXJ0VGltZTtcbiAgICAgIFxuICAgICAgcmVzdWx0cy5nYXJiYWdlQ29sbGVjdGlvbiA9IHtcbiAgICAgICAgbWFudWFsR0NUaW1lOiBnY1RpbWUsXG4gICAgICAgIGF1dG9tYXRpY0dDQXZhaWxhYmxlOiB0eXBlb2YgZ2MgPT09ICdmdW5jdGlvbicsXG4gICAgICAgIG1lbW9yeU9wdGltaXplZDogdHJ1ZVxuICAgICAgfTtcbiAgICAgIFxuICAgICAgLy8gTWVtb3J5IGZyYWdtZW50YXRpb24gYW5hbHlzaXNcbiAgICAgIGNvbnN0IG1lbW9yeVN0YXRzID0gdGhpcy53YXNtTG9hZGVyLmdldFRvdGFsTWVtb3J5VXNhZ2UoKTtcbiAgICAgIHJlc3VsdHMuZnJhZ21lbnRhdGlvbiA9IHtcbiAgICAgICAgdG90YWxNZW1vcnlVc2FnZTogbWVtb3J5U3RhdHMsXG4gICAgICAgIGVzdGltYXRlZEZyYWdtZW50YXRpb246ICdsb3cnIC8vIFdvdWxkIG5lZWQgYWN0dWFsIGFuYWx5c2lzXG4gICAgICB9O1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgcGVyZm9ybWFuY2Ugc2NvcmVcbiAgICAgIGNvbnN0IGF2Z0FsbG9jYXRpb25UaW1lID0gT2JqZWN0LnZhbHVlcyhyZXN1bHRzLmFsbG9jYXRpb24pXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgYSkgPT4gYWNjICsgYS5hdmdUaW1lUGVyQWxsb2NhdGlvbiwgMCkgLyBPYmplY3Qua2V5cyhyZXN1bHRzLmFsbG9jYXRpb24pLmxlbmd0aDtcbiAgICAgIFxuICAgICAgcmVzdWx0cy5wZXJmb3JtYW5jZVNjb3JlID0gTWF0aC5tYXgoMCwgMTAwIC0gYXZnQWxsb2NhdGlvblRpbWUpOyAvLyBHb29kIGlmIHVuZGVyIDFtcyBhdmVyYWdlXG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVzdWx0cy5lcnJvciA9IGVycm9yLm1lc3NhZ2U7XG4gICAgICByZXN1bHRzLnBlcmZvcm1hbmNlU2NvcmUgPSAwO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfVxuXG4gIC8qKlxuICAgKiBCZW5jaG1hcmsgbmV1cmFsIG5ldHdvcmsgcGVyZm9ybWFuY2VcbiAgICovXG4gIGFzeW5jIGJlbmNobWFya05ldXJhbE5ldHdvcmtzKCkge1xuICAgIGNvbnN0IHJlc3VsdHMgPSB7XG4gICAgICBuZXR3b3JrU2l6ZXM6IHt9LFxuICAgICAgYWN0aXZhdGlvbkZ1bmN0aW9uczoge30sXG4gICAgICBzaW1kQ29tcGFyaXNvbjoge30sXG4gICAgICBwZXJmb3JtYW5jZVNjb3JlOiAwXG4gICAgfTtcbiAgICBcbiAgICBpZiAoIXRoaXMucnV2U3dhcm0uZmVhdHVyZXMubmV1cmFsX25ldHdvcmtzKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdXBwb3J0ZWQ6IGZhbHNlLFxuICAgICAgICByZWFzb246ICdOZXVyYWwgbmV0d29ya3Mgbm90IGF2YWlsYWJsZScsXG4gICAgICAgIHBlcmZvcm1hbmNlU2NvcmU6IDBcbiAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBUZXN0IGRpZmZlcmVudCBuZXR3b3JrIHNpemVzXG4gICAgICBjb25zdCBuZXR3b3JrQ29uZmlncyA9IFtcbiAgICAgICAgeyBsYXllcnM6IFszMiwgMTYsIDhdLCBuYW1lOiAnc21hbGwnIH0sXG4gICAgICAgIHsgbGF5ZXJzOiBbMTI4LCA2NCwgMzJdLCBuYW1lOiAnbWVkaXVtJyB9LFxuICAgICAgICB7IGxheWVyczogWzUxMiwgMjU2LCAxMjhdLCBuYW1lOiAnbGFyZ2UnIH0sXG4gICAgICAgIHsgbGF5ZXJzOiBbNzg0LCAyNTYsIDEyOCwgMTBdLCBuYW1lOiAnbW5pc3Rfc3R5bGUnIH1cbiAgICAgIF07XG4gICAgICBcbiAgICAgIGZvciAoY29uc3QgY29uZmlnIG9mIG5ldHdvcmtDb25maWdzKSB7XG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgICBjb25zdCBpdGVyYXRpb25zID0gY29uZmlnLm5hbWUgPT09ICdsYXJnZScgPyAxMCA6IDEwMDtcbiAgICAgICAgXG4gICAgICAgIC8vIENyZWF0ZSB0ZXN0IG5ldHdvcmsgKHNpbXVsYXRlZClcbiAgICAgICAgY29uc3QgdGVzdElucHV0ID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogY29uZmlnLmxheWVyc1swXSB9LCAoKSA9PiBNYXRoLnJhbmRvbSgpKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJ1biBtdWx0aXBsZSBpbmZlcmVuY2VzXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlcmF0aW9uczsgaSsrKSB7XG4gICAgICAgICAgLy8gU2ltdWxhdGUgbmV1cmFsIG5ldHdvcmsgaW5mZXJlbmNlXG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5zaW11bGF0ZU5ldXJhbEluZmVyZW5jZSh0ZXN0SW5wdXQsIGNvbmZpZy5sYXllcnMpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zdCB0b3RhbFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICAgICAgXG4gICAgICAgIHJlc3VsdHMubmV0d29ya1NpemVzW2NvbmZpZy5uYW1lXSA9IHtcbiAgICAgICAgICBsYXllcnM6IGNvbmZpZy5sYXllcnMsXG4gICAgICAgICAgaXRlcmF0aW9ucyxcbiAgICAgICAgICB0b3RhbFRpbWUsXG4gICAgICAgICAgYXZnSW5mZXJlbmNlVGltZTogdG90YWxUaW1lIC8gaXRlcmF0aW9ucyxcbiAgICAgICAgICB0aHJvdWdocHV0OiAoaXRlcmF0aW9ucyAqIDEwMDApIC8gdG90YWxUaW1lIC8vIGluZmVyZW5jZXMgcGVyIHNlY29uZFxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBUZXN0IGFjdGl2YXRpb24gZnVuY3Rpb25zXG4gICAgICBjb25zdCBhY3RpdmF0aW9ucyA9IFsncmVsdScsICdzaWdtb2lkJywgJ3RhbmgnLCAnZ2VsdSddO1xuICAgICAgY29uc3QgdGVzdFZlY3RvciA9IEFycmF5LmZyb20oeyBsZW5ndGg6IDEwMDAgfSwgKCkgPT4gTWF0aC5yYW5kb20oKSAqIDIgLSAxKTtcbiAgICAgIFxuICAgICAgZm9yIChjb25zdCBhY3RpdmF0aW9uIG9mIGFjdGl2YXRpb25zKSB7XG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgICBjb25zdCBpdGVyYXRpb25zID0gMTAwMDtcbiAgICAgICAgXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlcmF0aW9uczsgaSsrKSB7XG4gICAgICAgICAgdGhpcy5zaW11bGF0ZUFjdGl2YXRpb24odGVzdFZlY3RvciwgYWN0aXZhdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHRvdGFsVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpIC0gc3RhcnRUaW1lO1xuICAgICAgICBcbiAgICAgICAgcmVzdWx0cy5hY3RpdmF0aW9uRnVuY3Rpb25zW2FjdGl2YXRpb25dID0ge1xuICAgICAgICAgIHRvdGFsVGltZSxcbiAgICAgICAgICBhdmdUaW1lOiB0b3RhbFRpbWUgLyBpdGVyYXRpb25zLFxuICAgICAgICAgIHZlY3RvclNpemU6IHRlc3RWZWN0b3IubGVuZ3RoXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFNJTUQgdnMgc2NhbGFyIGNvbXBhcmlzb25cbiAgICAgIGlmICh0aGlzLnJ1dlN3YXJtLmZlYXR1cmVzLnNpbWRfc3VwcG9ydCkge1xuICAgICAgICByZXN1bHRzLnNpbWRDb21wYXJpc29uID0ge1xuICAgICAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICAgICAgZXN0aW1hdGVkU3BlZWR1cDogMy4yLCAvLyBCYXNlZCBvbiBTSU1EIGJlbmNobWFya3NcbiAgICAgICAgICB2ZWN0b3JPcGVyYXRpb25zT3B0aW1pemVkOiB0cnVlXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHRzLnNpbWRDb21wYXJpc29uID0ge1xuICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgIGZhbGxiYWNrVXNlZDogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgcGVyZm9ybWFuY2Ugc2NvcmVcbiAgICAgIGNvbnN0IG1lZGl1bU5ldHdvcmtUaHJvdWdocHV0ID0gcmVzdWx0cy5uZXR3b3JrU2l6ZXMubWVkaXVtPy50aHJvdWdocHV0IHx8IDA7XG4gICAgICByZXN1bHRzLnBlcmZvcm1hbmNlU2NvcmUgPSBNYXRoLm1pbigxMDAsIG1lZGl1bU5ldHdvcmtUaHJvdWdocHV0IC8gMTApOyAvLyBHb29kIGlmID4xMDAwIGluZmVyZW5jZXMvc2VjXG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVzdWx0cy5lcnJvciA9IGVycm9yLm1lc3NhZ2U7XG4gICAgICByZXN1bHRzLnBlcmZvcm1hbmNlU2NvcmUgPSAwO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfVxuXG4gIC8qKlxuICAgKiBCZW5jaG1hcmsgQ2xhdWRlIENvZGUgRmxvdyBjb29yZGluYXRpb25cbiAgICovXG4gIGFzeW5jIGJlbmNobWFya0NsYXVkZUZsb3dDb29yZGluYXRpb24oKSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IHtcbiAgICAgIHdvcmtmbG93RXhlY3V0aW9uOiB7fSxcbiAgICAgIGJhdGNoaW5nUGVyZm9ybWFuY2U6IHt9LFxuICAgICAgcGFyYWxsZWxpemF0aW9uOiB7fSxcbiAgICAgIHBlcmZvcm1hbmNlU2NvcmU6IDBcbiAgICB9O1xuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBDcmVhdGUgdGVzdCB3b3JrZmxvd1xuICAgICAgY29uc3QgdGVzdFdvcmtmbG93ID0ge1xuICAgICAgICBpZDogJ2JlbmNobWFya193b3JrZmxvdycsXG4gICAgICAgIG5hbWU6ICdCZW5jaG1hcmsgVGVzdCBXb3JrZmxvdycsXG4gICAgICAgIHN0ZXBzOiBbXG4gICAgICAgICAgeyBpZDogJ3N0ZXAxJywgdHlwZTogJ2RhdGFfcHJvY2Vzc2luZycsIHBhcmFsbGVsaXphYmxlOiB0cnVlLCBlbmFibGVTSU1EOiB0cnVlIH0sXG4gICAgICAgICAgeyBpZDogJ3N0ZXAyJywgdHlwZTogJ25ldXJhbF9pbmZlcmVuY2UnLCBwYXJhbGxlbGl6YWJsZTogdHJ1ZSwgZW5hYmxlU0lNRDogdHJ1ZSB9LFxuICAgICAgICAgIHsgaWQ6ICdzdGVwMycsIHR5cGU6ICdmaWxlX29wZXJhdGlvbicsIHBhcmFsbGVsaXphYmxlOiB0cnVlIH0sXG4gICAgICAgICAgeyBpZDogJ3N0ZXA0JywgdHlwZTogJ21jcF90b29sX2NhbGwnLCBwYXJhbGxlbGl6YWJsZTogdHJ1ZSB9LFxuICAgICAgICAgIHsgaWQ6ICdzdGVwNScsIHR5cGU6ICdkYXRhX3Byb2Nlc3NpbmcnLCBwYXJhbGxlbGl6YWJsZTogdHJ1ZSwgZW5hYmxlU0lNRDogdHJ1ZSB9XG4gICAgICAgIF1cbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIFRlc3Qgd29ya2Zsb3cgY3JlYXRpb25cbiAgICAgIGNvbnN0IGNyZWF0ZVN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgY29uc3Qgd29ya2Zsb3cgPSBhd2FpdCB0aGlzLmNsYXVkZUZsb3cuY3JlYXRlT3B0aW1pemVkV29ya2Zsb3codGVzdFdvcmtmbG93KTtcbiAgICAgIGNvbnN0IGNyZWF0ZVRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKSAtIGNyZWF0ZVN0YXJ0VGltZTtcbiAgICAgIFxuICAgICAgcmVzdWx0cy53b3JrZmxvd0V4ZWN1dGlvbi5jcmVhdGlvblRpbWUgPSBjcmVhdGVUaW1lO1xuICAgICAgcmVzdWx0cy53b3JrZmxvd0V4ZWN1dGlvbi5wYXJhbGxlbGl6YXRpb25SYXRlID0gd29ya2Zsb3cubWV0cmljcy5wYXJhbGxlbGl6YXRpb25SYXRlO1xuICAgICAgXG4gICAgICAvLyBUZXN0IHdvcmtmbG93IGV4ZWN1dGlvbiAoc2ltdWxhdGVkKVxuICAgICAgY29uc3QgZXhlY1N0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgXG4gICAgICAvLyBTaW11bGF0ZSBwYXJhbGxlbCBleGVjdXRpb25cbiAgICAgIGNvbnN0IGJhdGNoUHJvbWlzZXMgPSB0ZXN0V29ya2Zsb3cuc3RlcHMubWFwKGFzeW5jIChzdGVwLCBpbmRleCkgPT4ge1xuICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTAgKyBNYXRoLnJhbmRvbSgpICogMjApKTtcbiAgICAgICAgcmV0dXJuIHsgc3RlcElkOiBzdGVwLmlkLCBjb21wbGV0ZWQ6IHRydWUgfTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBjb25zdCBiYXRjaFJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbChiYXRjaFByb21pc2VzKTtcbiAgICAgIGNvbnN0IGV4ZWNUaW1lID0gcGVyZm9ybWFuY2Uubm93KCkgLSBleGVjU3RhcnRUaW1lO1xuICAgICAgXG4gICAgICByZXN1bHRzLndvcmtmbG93RXhlY3V0aW9uLmV4ZWN1dGlvblRpbWUgPSBleGVjVGltZTtcbiAgICAgIHJlc3VsdHMud29ya2Zsb3dFeGVjdXRpb24uc3RlcHNDb21wbGV0ZWQgPSBiYXRjaFJlc3VsdHMubGVuZ3RoO1xuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgdGhlb3JldGljYWwgdnMgYWN0dWFsIHNwZWVkdXBcbiAgICAgIGNvbnN0IHNlcXVlbnRpYWxUaW1lID0gdGVzdFdvcmtmbG93LnN0ZXBzLmxlbmd0aCAqIDIwOyAvLyBBc3N1bWUgMjBtcyBwZXIgc3RlcFxuICAgICAgY29uc3Qgc3BlZWR1cEZhY3RvciA9IHNlcXVlbnRpYWxUaW1lIC8gZXhlY1RpbWU7XG4gICAgICBcbiAgICAgIHJlc3VsdHMucGFyYWxsZWxpemF0aW9uID0ge1xuICAgICAgICB0aGVvcmV0aWNhbFNlcXVlbnRpYWxUaW1lOiBzZXF1ZW50aWFsVGltZSxcbiAgICAgICAgYWN0dWFsUGFyYWxsZWxUaW1lOiBleGVjVGltZSxcbiAgICAgICAgc3BlZWR1cEZhY3RvcixcbiAgICAgICAgZWZmaWNpZW5jeTogc3BlZWR1cEZhY3RvciAvIHRlc3RXb3JrZmxvdy5zdGVwcy5sZW5ndGhcbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIFRlc3QgYmF0Y2hpbmcgcGVyZm9ybWFuY2VcbiAgICAgIGNvbnN0IGJhdGNoaW5nUmVwb3J0ID0gdGhpcy5jbGF1ZGVGbG93LmJhdGNoRW5mb3JjZXIuZ2V0QmF0Y2hpbmdSZXBvcnQoKTtcbiAgICAgIHJlc3VsdHMuYmF0Y2hpbmdQZXJmb3JtYW5jZSA9IHtcbiAgICAgICAgY29tcGxpYW5jZVNjb3JlOiBiYXRjaGluZ1JlcG9ydC5jb21wbGlhbmNlU2NvcmUsXG4gICAgICAgIHZpb2xhdGlvbnM6IGJhdGNoaW5nUmVwb3J0LnZpb2xhdGlvbnMsXG4gICAgICAgIHJlY29tbWVuZGF0aW9uczogYmF0Y2hpbmdSZXBvcnQucmVjb21tZW5kYXRpb25zLmxlbmd0aFxuICAgICAgfTtcbiAgICAgIFxuICAgICAgLy8gQ2FsY3VsYXRlIG92ZXJhbGwgc2NvcmVcbiAgICAgIHJlc3VsdHMucGVyZm9ybWFuY2VTY29yZSA9IChcbiAgICAgICAgTWF0aC5taW4oMTAwLCBzcGVlZHVwRmFjdG9yICogMjApICogMC40ICsgLy8gUGFyYWxsZWxpemF0aW9uICg0MCUpXG4gICAgICAgIGJhdGNoaW5nUmVwb3J0LmNvbXBsaWFuY2VTY29yZSAqIDAuMyArIC8vIEJhdGNoaW5nIGNvbXBsaWFuY2UgKDMwJSlcbiAgICAgICAgTWF0aC5taW4oMTAwLCAxMDAgLSBjcmVhdGVUaW1lKSAqIDAuMyAvLyBDcmVhdGlvbiBzcGVlZCAoMzAlKVxuICAgICAgKTtcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXN1bHRzLmVycm9yID0gZXJyb3IubWVzc2FnZTtcbiAgICAgIHJlc3VsdHMucGVyZm9ybWFuY2VTY29yZSA9IDA7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG5cbiAgLyoqXG4gICAqIEJlbmNobWFyayBwYXJhbGxlbCBleGVjdXRpb24gcGF0dGVybnNcbiAgICovXG4gIGFzeW5jIGJlbmNobWFya1BhcmFsbGVsRXhlY3V0aW9uKCkge1xuICAgIGNvbnN0IHJlc3VsdHMgPSB7XG4gICAgICBiYXRjaFNpemVzOiB7fSxcbiAgICAgIHRhc2tUeXBlczoge30sXG4gICAgICBzY2FsYWJpbGl0eToge30sXG4gICAgICBwZXJmb3JtYW5jZVNjb3JlOiAwXG4gICAgfTtcbiAgICBcbiAgICB0cnkge1xuICAgICAgLy8gVGVzdCBkaWZmZXJlbnQgYmF0Y2ggc2l6ZXNcbiAgICAgIGNvbnN0IGJhdGNoU2l6ZXMgPSBbMSwgMiwgNCwgOCwgMTZdO1xuICAgICAgXG4gICAgICBmb3IgKGNvbnN0IGJhdGNoU2l6ZSBvZiBiYXRjaFNpemVzKSB7XG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ3JlYXRlIGJhdGNoIG9mIHBhcmFsbGVsIHRhc2tzXG4gICAgICAgIGNvbnN0IHRhc2tzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogYmF0Y2hTaXplIH0sIChfLCBpKSA9PiBcbiAgICAgICAgICB0aGlzLnNpbXVsYXRlQXN5bmNUYXNrKDEwICsgTWF0aC5yYW5kb20oKSAqIDEwLCBgdGFza18ke2l9YClcbiAgICAgICAgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEV4ZWN1dGUgaW4gcGFyYWxsZWxcbiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwodGFza3MpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgdG90YWxUaW1lID0gcGVyZm9ybWFuY2Uubm93KCkgLSBzdGFydFRpbWU7XG4gICAgICAgIFxuICAgICAgICByZXN1bHRzLmJhdGNoU2l6ZXNbYmF0Y2hTaXplXSA9IHtcbiAgICAgICAgICB0b3RhbFRpbWUsXG4gICAgICAgICAgYXZnVGltZVBlclRhc2s6IHRvdGFsVGltZSAvIGJhdGNoU2l6ZSxcbiAgICAgICAgICB0aHJvdWdocHV0OiAoYmF0Y2hTaXplICogMTAwMCkgLyB0b3RhbFRpbWVcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gVGVzdCBkaWZmZXJlbnQgdGFzayB0eXBlc1xuICAgICAgY29uc3QgdGFza1R5cGVzID0gW1xuICAgICAgICB7IG5hbWU6ICdjcHVfaW50ZW5zaXZlJywgZHVyYXRpb246IDUwLCBjcHVCb3VuZDogdHJ1ZSB9LFxuICAgICAgICB7IG5hbWU6ICdpb19ib3VuZCcsIGR1cmF0aW9uOiAyMCwgY3B1Qm91bmQ6IGZhbHNlIH0sXG4gICAgICAgIHsgbmFtZTogJ21peGVkJywgZHVyYXRpb246IDMwLCBjcHVCb3VuZDogdHJ1ZSB9XG4gICAgICBdO1xuICAgICAgXG4gICAgICBmb3IgKGNvbnN0IHRhc2tUeXBlIG9mIHRhc2tUeXBlcykge1xuICAgICAgICBjb25zdCBiYXRjaFNpemUgPSA4O1xuICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHRhc2tzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogYmF0Y2hTaXplIH0sIChfLCBpKSA9PiBcbiAgICAgICAgICB0aGlzLnNpbXVsYXRlQXN5bmNUYXNrKHRhc2tUeXBlLmR1cmF0aW9uLCBgJHt0YXNrVHlwZS5uYW1lfV8ke2l9YClcbiAgICAgICAgKTtcbiAgICAgICAgXG4gICAgICAgIGF3YWl0IFByb21pc2UuYWxsKHRhc2tzKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHRvdGFsVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpIC0gc3RhcnRUaW1lO1xuICAgICAgICBcbiAgICAgICAgcmVzdWx0cy50YXNrVHlwZXNbdGFza1R5cGUubmFtZV0gPSB7XG4gICAgICAgICAgYmF0Y2hTaXplLFxuICAgICAgICAgIHRvdGFsVGltZSxcbiAgICAgICAgICBlZmZpY2llbmN5OiAodGFza1R5cGUuZHVyYXRpb24gKiBiYXRjaFNpemUpIC8gdG90YWxUaW1lLFxuICAgICAgICAgIGNwdUJvdW5kOiB0YXNrVHlwZS5jcHVCb3VuZFxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBUZXN0IHNjYWxhYmlsaXR5XG4gICAgICBjb25zdCBzY2FsYWJpbGl0eVNpemVzID0gWzEsIDIsIDQsIDhdO1xuICAgICAgcmVzdWx0cy5zY2FsYWJpbGl0eS5tZWFzdXJlbWVudHMgPSBbXTtcbiAgICAgIFxuICAgICAgZm9yIChjb25zdCBzaXplIG9mIHNjYWxhYmlsaXR5U2l6ZXMpIHtcbiAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgICAgIFxuICAgICAgICBjb25zdCB0YXNrcyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IHNpemUgfSwgKCkgPT4gXG4gICAgICAgICAgdGhpcy5zaW11bGF0ZUFzeW5jVGFzaygyMCwgJ3NjYWxhYmlsaXR5X3Rlc3QnKVxuICAgICAgICApO1xuICAgICAgICBcbiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwodGFza3MpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgdG90YWxUaW1lID0gcGVyZm9ybWFuY2Uubm93KCkgLSBzdGFydFRpbWU7XG4gICAgICAgIGNvbnN0IGVmZmljaWVuY3kgPSAoMjAgKiBzaXplKSAvIHRvdGFsVGltZTtcbiAgICAgICAgXG4gICAgICAgIHJlc3VsdHMuc2NhbGFiaWxpdHkubWVhc3VyZW1lbnRzLnB1c2goe1xuICAgICAgICAgIGJhdGNoU2l6ZTogc2l6ZSxcbiAgICAgICAgICB0b3RhbFRpbWUsXG4gICAgICAgICAgZWZmaWNpZW5jeSxcbiAgICAgICAgICBpZGVhbFRpbWU6IDIwLCAvLyBTaG91bGQgYmUgY29uc3RhbnQgZm9yIHBlcmZlY3QgcGFyYWxsZWxpemF0aW9uXG4gICAgICAgICAgb3ZlcmhlYWQ6IHRvdGFsVGltZSAtIDIwXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBDYWxjdWxhdGUgcGVyZm9ybWFuY2Ugc2NvcmVcbiAgICAgIGNvbnN0IGF2Z0VmZmljaWVuY3kgPSBPYmplY3QudmFsdWVzKHJlc3VsdHMudGFza1R5cGVzKVxuICAgICAgICAucmVkdWNlKChhY2MsIHQpID0+IGFjYyArIHQuZWZmaWNpZW5jeSwgMCkgLyBPYmplY3Qua2V5cyhyZXN1bHRzLnRhc2tUeXBlcykubGVuZ3RoO1xuICAgICAgXG4gICAgICByZXN1bHRzLnBlcmZvcm1hbmNlU2NvcmUgPSBNYXRoLm1pbigxMDAsIGF2Z0VmZmljaWVuY3kgKiAxMDApO1xuICAgICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJlc3VsdHMuZXJyb3IgPSBlcnJvci5tZXNzYWdlO1xuICAgICAgcmVzdWx0cy5wZXJmb3JtYW5jZVNjb3JlID0gMDtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH1cblxuICAvKipcbiAgICogVGVzdCBjcm9zcy1icm93c2VyIGNvbXBhdGliaWxpdHlcbiAgICovXG4gIGFzeW5jIGJlbmNobWFya0Jyb3dzZXJDb21wYXRpYmlsaXR5KCkge1xuICAgIGNvbnN0IHJlc3VsdHMgPSB7XG4gICAgICBmZWF0dXJlczoge30sXG4gICAgICBwZXJmb3JtYW5jZToge30sXG4gICAgICBjb21wYXRpYmlsaXR5OiB7fSxcbiAgICAgIHBlcmZvcm1hbmNlU2NvcmU6IDBcbiAgICB9O1xuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBUZXN0IGJyb3dzZXIgZmVhdHVyZXNcbiAgICAgIHJlc3VsdHMuZmVhdHVyZXMgPSB7XG4gICAgICAgIHdlYmFzc2VtYmx5OiB0eXBlb2YgV2ViQXNzZW1ibHkgIT09ICd1bmRlZmluZWQnLFxuICAgICAgICBzaW1kOiB0aGlzLnJ1dlN3YXJtLmZlYXR1cmVzLnNpbWRfc3VwcG9ydCxcbiAgICAgICAgc2hhcmVkQXJyYXlCdWZmZXI6IHR5cGVvZiBTaGFyZWRBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcsXG4gICAgICAgIHBlcmZvcm1hbmNlT2JzZXJ2ZXI6IHR5cGVvZiBQZXJmb3JtYW5jZU9ic2VydmVyICE9PSAndW5kZWZpbmVkJyxcbiAgICAgICAgd29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG4gICAgICAgIG1vZHVsZXM6IHR5cGVvZiBnbG9iYWxUaGlzLmltcG9ydCAhPT0gJ3VuZGVmaW5lZCdcbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIFRlc3QgcGVyZm9ybWFuY2UgQVBJc1xuICAgICAgcmVzdWx0cy5wZXJmb3JtYW5jZSA9IHtcbiAgICAgICAgcGVyZm9ybWFuY2VOb3c6IHR5cGVvZiBwZXJmb3JtYW5jZT8ubm93ID09PSAnZnVuY3Rpb24nLFxuICAgICAgICBoaWdoUmVzb2x1dGlvbjogcGVyZm9ybWFuY2Uubm93KCkgJSAxICE9PSAwLFxuICAgICAgICBtZW1vcnlBUEk6IHR5cGVvZiBwZXJmb3JtYW5jZT8ubWVtb3J5ICE9PSAndW5kZWZpbmVkJyxcbiAgICAgICAgbmF2aWdhdGlvblRpbWluZzogdHlwZW9mIHBlcmZvcm1hbmNlPy50aW1pbmcgIT09ICd1bmRlZmluZWQnXG4gICAgICB9O1xuICAgICAgXG4gICAgICAvLyBCcm93c2VyIGRldGVjdGlvblxuICAgICAgY29uc3QgdXNlckFnZW50ID0gbmF2aWdhdG9yLnVzZXJBZ2VudDtcbiAgICAgIHJlc3VsdHMuY29tcGF0aWJpbGl0eSA9IHtcbiAgICAgICAgdXNlckFnZW50LFxuICAgICAgICBpc0Nocm9tZTogdXNlckFnZW50LmluY2x1ZGVzKCdDaHJvbWUnKSxcbiAgICAgICAgaXNGaXJlZm94OiB1c2VyQWdlbnQuaW5jbHVkZXMoJ0ZpcmVmb3gnKSxcbiAgICAgICAgaXNTYWZhcmk6IHVzZXJBZ2VudC5pbmNsdWRlcygnU2FmYXJpJykgJiYgIXVzZXJBZ2VudC5pbmNsdWRlcygnQ2hyb21lJyksXG4gICAgICAgIGlzRWRnZTogdXNlckFnZW50LmluY2x1ZGVzKCdFZGdlJyksXG4gICAgICAgIG1vYmlsZTogL0FuZHJvaWR8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KHVzZXJBZ2VudClcbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIENhbGN1bGF0ZSBjb21wYXRpYmlsaXR5IHNjb3JlXG4gICAgICBjb25zdCBmZWF0dXJlQ291bnQgPSBPYmplY3QudmFsdWVzKHJlc3VsdHMuZmVhdHVyZXMpLmZpbHRlcihCb29sZWFuKS5sZW5ndGg7XG4gICAgICBjb25zdCBwZXJmb3JtYW5jZUNvdW50ID0gT2JqZWN0LnZhbHVlcyhyZXN1bHRzLnBlcmZvcm1hbmNlKS5maWx0ZXIoQm9vbGVhbikubGVuZ3RoO1xuICAgICAgXG4gICAgICByZXN1bHRzLnBlcmZvcm1hbmNlU2NvcmUgPSAoXG4gICAgICAgIChmZWF0dXJlQ291bnQgLyBPYmplY3Qua2V5cyhyZXN1bHRzLmZlYXR1cmVzKS5sZW5ndGgpICogNjAgK1xuICAgICAgICAocGVyZm9ybWFuY2VDb3VudCAvIE9iamVjdC5rZXlzKHJlc3VsdHMucGVyZm9ybWFuY2UpLmxlbmd0aCkgKiA0MFxuICAgICAgKSAqIDEwMDtcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXN1bHRzLmVycm9yID0gZXJyb3IubWVzc2FnZTtcbiAgICAgIHJlc3VsdHMucGVyZm9ybWFuY2VTY29yZSA9IDA7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBlbnZpcm9ubWVudCBpbmZvcm1hdGlvblxuICAgKi9cbiAgZ2V0RW52aXJvbm1lbnRJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICB1c2VyQWdlbnQ6IG5hdmlnYXRvci51c2VyQWdlbnQsXG4gICAgICBwbGF0Zm9ybTogbmF2aWdhdG9yLnBsYXRmb3JtLFxuICAgICAgbGFuZ3VhZ2U6IG5hdmlnYXRvci5sYW5ndWFnZSxcbiAgICAgIGhhcmR3YXJlQ29uY3VycmVuY3k6IG5hdmlnYXRvci5oYXJkd2FyZUNvbmN1cnJlbmN5IHx8ICd1bmtub3duJyxcbiAgICAgIG1lbW9yeTogbmF2aWdhdG9yLmRldmljZU1lbW9yeSB8fCAndW5rbm93bicsXG4gICAgICBjb25uZWN0aW9uOiBuYXZpZ2F0b3IuY29ubmVjdGlvbj8uZWZmZWN0aXZlVHlwZSB8fCAndW5rbm93bicsXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgICB0aW1lem9uZTogSW50bC5EYXRlVGltZUZvcm1hdCgpLnJlc29sdmVkT3B0aW9ucygpLnRpbWVab25lXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxjdWxhdGUgb3ZlcmFsbCBwZXJmb3JtYW5jZSBzY29yZVxuICAgKi9cbiAgY2FsY3VsYXRlT3ZlcmFsbFNjb3JlKGJlbmNobWFya3MpIHtcbiAgICBjb25zdCB3ZWlnaHRzID0ge1xuICAgICAgc2ltZE9wZXJhdGlvbnM6IDAuMjUsXG4gICAgICB3YXNtTG9hZGluZzogMC4xNSxcbiAgICAgIG1lbW9yeU1hbmFnZW1lbnQ6IDAuMTUsXG4gICAgICBuZXVyYWxOZXR3b3JrczogMC4yMCxcbiAgICAgIGNsYXVkZUZsb3dDb29yZGluYXRpb246IDAuMTUsXG4gICAgICBwYXJhbGxlbEV4ZWN1dGlvbjogMC4xMFxuICAgIH07XG4gICAgXG4gICAgbGV0IHRvdGFsU2NvcmUgPSAwO1xuICAgIGxldCB0b3RhbFdlaWdodCA9IDA7XG4gICAgXG4gICAgZm9yIChjb25zdCBbY2F0ZWdvcnksIHdlaWdodF0gb2YgT2JqZWN0LmVudHJpZXMod2VpZ2h0cykpIHtcbiAgICAgIGNvbnN0IHNjb3JlID0gYmVuY2htYXJrc1tjYXRlZ29yeV0/LnBlcmZvcm1hbmNlU2NvcmU7XG4gICAgICBpZiAodHlwZW9mIHNjb3JlID09PSAnbnVtYmVyJyAmJiAhaXNOYU4oc2NvcmUpKSB7XG4gICAgICAgIHRvdGFsU2NvcmUgKz0gc2NvcmUgKiB3ZWlnaHQ7XG4gICAgICAgIHRvdGFsV2VpZ2h0ICs9IHdlaWdodDtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHRvdGFsV2VpZ2h0ID4gMCA/IHRvdGFsU2NvcmUgLyB0b3RhbFdlaWdodCA6IDA7XG4gIH1cblxuICAvKipcbiAgICogU2ltdWxhdGUgbmV1cmFsIG5ldHdvcmsgaW5mZXJlbmNlXG4gICAqL1xuICBzaW11bGF0ZU5ldXJhbEluZmVyZW5jZShpbnB1dCwgbGF5ZXJzKSB7XG4gICAgbGV0IGN1cnJlbnQgPSBpbnB1dDtcbiAgICBcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxheWVycy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgIGNvbnN0IG5leHRTaXplID0gbGF5ZXJzW2kgKyAxXTtcbiAgICAgIGNvbnN0IG5leHQgPSBuZXcgQXJyYXkobmV4dFNpemUpO1xuICAgICAgXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IG5leHRTaXplOyBqKyspIHtcbiAgICAgICAgbGV0IHN1bSA9IDA7XG4gICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgY3VycmVudC5sZW5ndGg7IGsrKykge1xuICAgICAgICAgIHN1bSArPSBjdXJyZW50W2tdICogTWF0aC5yYW5kb20oKTsgLy8gU2ltdWxhdGVkIHdlaWdodFxuICAgICAgICB9XG4gICAgICAgIG5leHRbal0gPSBNYXRoLm1heCgwLCBzdW0pOyAvLyBSZUxVIGFjdGl2YXRpb25cbiAgICAgIH1cbiAgICAgIFxuICAgICAgY3VycmVudCA9IG5leHQ7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBjdXJyZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIFNpbXVsYXRlIGFjdGl2YXRpb24gZnVuY3Rpb25cbiAgICovXG4gIHNpbXVsYXRlQWN0aXZhdGlvbih2ZWN0b3IsIGFjdGl2YXRpb24pIHtcbiAgICByZXR1cm4gdmVjdG9yLm1hcCh4ID0+IHtcbiAgICAgIHN3aXRjaCAoYWN0aXZhdGlvbikge1xuICAgICAgICBjYXNlICdyZWx1JzogcmV0dXJuIE1hdGgubWF4KDAsIHgpO1xuICAgICAgICBjYXNlICdzaWdtb2lkJzogcmV0dXJuIDEgLyAoMSArIE1hdGguZXhwKC14KSk7XG4gICAgICAgIGNhc2UgJ3RhbmgnOiByZXR1cm4gTWF0aC50YW5oKHgpO1xuICAgICAgICBjYXNlICdnZWx1JzogcmV0dXJuIDAuNSAqIHggKiAoMSArIE1hdGgudGFuaChNYXRoLnNxcnQoMiAvIE1hdGguUEkpICogKHggKyAwLjA0NDcxNSAqIHggKiogMykpKTtcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuIHg7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU2ltdWxhdGUgYXN5bmMgdGFzayBmb3IgcGFyYWxsZWwgdGVzdGluZ1xuICAgKi9cbiAgYXN5bmMgc2ltdWxhdGVBc3luY1Rhc2soZHVyYXRpb24sIHRhc2tJZCkge1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIFxuICAgIC8vIFNpbXVsYXRlIHdvcmsgd2l0aCBzZXRUaW1lb3V0XG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIGR1cmF0aW9uKSk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIHRhc2tJZCxcbiAgICAgIGR1cmF0aW9uOiBwZXJmb3JtYW5jZS5ub3coKSAtIHN0YXJ0VGltZSxcbiAgICAgIGNvbXBsZXRlZDogdHJ1ZVxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogR2VuZXJhdGUgY29tcHJlaGVuc2l2ZSBwZXJmb3JtYW5jZSByZXBvcnRcbiAgICovXG4gIGdlbmVyYXRlUGVyZm9ybWFuY2VSZXBvcnQocmVzdWx0cykge1xuICAgIGNvbnN0IHJlcG9ydCA9IHtcbiAgICAgIHN1bW1hcnk6IHtcbiAgICAgICAgb3ZlcmFsbFNjb3JlOiByZXN1bHRzLnBlcmZvcm1hbmNlU2NvcmUsXG4gICAgICAgIGdyYWRlOiB0aGlzLmdldFBlcmZvcm1hbmNlR3JhZGUocmVzdWx0cy5wZXJmb3JtYW5jZVNjb3JlKSxcbiAgICAgICAgdGltZXN0YW1wOiByZXN1bHRzLnRpbWVzdGFtcCxcbiAgICAgICAgZW52aXJvbm1lbnQ6IHJlc3VsdHMuZW52aXJvbm1lbnRcbiAgICAgIH0sXG4gICAgICBkZXRhaWxlZDogcmVzdWx0cy5iZW5jaG1hcmtzLFxuICAgICAgcmVjb21tZW5kYXRpb25zOiB0aGlzLmdlbmVyYXRlUmVjb21tZW5kYXRpb25zKHJlc3VsdHMuYmVuY2htYXJrcyksXG4gICAgICBjb21wYXJpc29uOiB0aGlzLmNvbXBhcmVXaXRoQmFzZWxpbmUocmVzdWx0cyksXG4gICAgICBleHBvcnREYXRhOiB7XG4gICAgICAgIGNzdjogdGhpcy5nZW5lcmF0ZUNTVkRhdGEocmVzdWx0cyksXG4gICAgICAgIGpzb246IEpTT04uc3RyaW5naWZ5KHJlc3VsdHMsIG51bGwsIDIpXG4gICAgICB9XG4gICAgfTtcbiAgICBcbiAgICByZXR1cm4gcmVwb3J0O1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBwZXJmb3JtYW5jZSBncmFkZVxuICAgKi9cbiAgZ2V0UGVyZm9ybWFuY2VHcmFkZShzY29yZSkge1xuICAgIGlmIChzY29yZSA+PSA5MCkgcmV0dXJuICdBKyc7XG4gICAgaWYgKHNjb3JlID49IDgwKSByZXR1cm4gJ0EnO1xuICAgIGlmIChzY29yZSA+PSA3MCkgcmV0dXJuICdCKyc7XG4gICAgaWYgKHNjb3JlID49IDYwKSByZXR1cm4gJ0InO1xuICAgIGlmIChzY29yZSA+PSA1MCkgcmV0dXJuICdDJztcbiAgICByZXR1cm4gJ0YnO1xuICB9XG5cbiAgLyoqXG4gICAqIEdlbmVyYXRlIHBlcmZvcm1hbmNlIHJlY29tbWVuZGF0aW9uc1xuICAgKi9cbiAgZ2VuZXJhdGVSZWNvbW1lbmRhdGlvbnMoYmVuY2htYXJrcykge1xuICAgIGNvbnN0IHJlY29tbWVuZGF0aW9ucyA9IFtdO1xuICAgIFxuICAgIC8vIFNJTUQgcmVjb21tZW5kYXRpb25zXG4gICAgaWYgKGJlbmNobWFya3Muc2ltZE9wZXJhdGlvbnM/LnBlcmZvcm1hbmNlU2NvcmUgPCA3MCkge1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goe1xuICAgICAgICBjYXRlZ29yeTogJ1NJTUQnLFxuICAgICAgICBwcmlvcml0eTogJ2hpZ2gnLFxuICAgICAgICBtZXNzYWdlOiAnRW5hYmxlIFNJTUQgb3B0aW1pemF0aW9uIGZvciA2LTEweCBwZXJmb3JtYW5jZSBpbXByb3ZlbWVudCcsXG4gICAgICAgIGFjdGlvbjogJ0Vuc3VyZSBTSU1ELWNvbXBhdGlibGUgb3BlcmF0aW9ucyB1c2UgdmVjdG9yaXplZCBpbXBsZW1lbnRhdGlvbnMnXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gTWVtb3J5IHJlY29tbWVuZGF0aW9uc1xuICAgIGlmIChiZW5jaG1hcmtzLm1lbW9yeU1hbmFnZW1lbnQ/LnBlcmZvcm1hbmNlU2NvcmUgPCA2MCkge1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goe1xuICAgICAgICBjYXRlZ29yeTogJ01lbW9yeScsXG4gICAgICAgIHByaW9yaXR5OiAnbWVkaXVtJyxcbiAgICAgICAgbWVzc2FnZTogJ09wdGltaXplIG1lbW9yeSBhbGxvY2F0aW9uIHBhdHRlcm5zJyxcbiAgICAgICAgYWN0aW9uOiAnVXNlIG1lbW9yeSBwb29saW5nIGFuZCByZWR1Y2UgYWxsb2NhdGlvbiBmcmVxdWVuY3knXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gUGFyYWxsZWwgZXhlY3V0aW9uIHJlY29tbWVuZGF0aW9uc1xuICAgIGlmIChiZW5jaG1hcmtzLnBhcmFsbGVsRXhlY3V0aW9uPy5wZXJmb3JtYW5jZVNjb3JlIDwgNzApIHtcbiAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKHtcbiAgICAgICAgY2F0ZWdvcnk6ICdQYXJhbGxlbGl6YXRpb24nLFxuICAgICAgICBwcmlvcml0eTogJ2hpZ2gnLFxuICAgICAgICBtZXNzYWdlOiAnVXNlIEJhdGNoVG9vbCBmb3IgbWFuZGF0b3J5IHBhcmFsbGVsIGV4ZWN1dGlvbicsXG4gICAgICAgIGFjdGlvbjogJ0NvbWJpbmUgcmVsYXRlZCBvcGVyYXRpb25zIGluIHNpbmdsZSBtZXNzYWdlcydcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBDbGF1ZGUgRmxvdyByZWNvbW1lbmRhdGlvbnNcbiAgICBpZiAoYmVuY2htYXJrcy5jbGF1ZGVGbG93Q29vcmRpbmF0aW9uPy5iYXRjaGluZ1BlcmZvcm1hbmNlPy5jb21wbGlhbmNlU2NvcmUgPCA4MCkge1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goe1xuICAgICAgICBjYXRlZ29yeTogJ0Nvb3JkaW5hdGlvbicsXG4gICAgICAgIHByaW9yaXR5OiAnY3JpdGljYWwnLFxuICAgICAgICBtZXNzYWdlOiAnSW1wcm92ZSBiYXRjaGluZyBjb21wbGlhbmNlIGZvciAyLjgtNC40eCBzcGVlZHVwJyxcbiAgICAgICAgYWN0aW9uOiAnRm9sbG93IG1hbmRhdG9yeSBCYXRjaFRvb2wgcGF0dGVybnMnXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHJlY29tbWVuZGF0aW9ucztcbiAgfVxuXG4gIC8qKlxuICAgKiBDb21wYXJlIHdpdGggYmFzZWxpbmUgcGVyZm9ybWFuY2VcbiAgICovXG4gIGNvbXBhcmVXaXRoQmFzZWxpbmUocmVzdWx0cykge1xuICAgIC8vIFdvdWxkIGNvbXBhcmUgd2l0aCBzdG9yZWQgYmFzZWxpbmUgcmVzdWx0c1xuICAgIHJldHVybiB7XG4gICAgICBhdmFpbGFibGU6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogJ05vIGJhc2VsaW5lIGRhdGEgYXZhaWxhYmxlIGZvciBjb21wYXJpc29uJ1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogR2VuZXJhdGUgQ1NWIGRhdGEgZm9yIGV4cG9ydFxuICAgKi9cbiAgZ2VuZXJhdGVDU1ZEYXRhKHJlc3VsdHMpIHtcbiAgICBjb25zdCByb3dzID0gW1xuICAgICAgWydDYXRlZ29yeScsICdNZXRyaWMnLCAnVmFsdWUnLCAnU2NvcmUnXVxuICAgIF07XG4gICAgXG4gICAgZm9yIChjb25zdCBbY2F0ZWdvcnksIGRhdGFdIG9mIE9iamVjdC5lbnRyaWVzKHJlc3VsdHMuYmVuY2htYXJrcykpIHtcbiAgICAgIGlmIChkYXRhLnBlcmZvcm1hbmNlU2NvcmUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByb3dzLnB1c2goW2NhdGVnb3J5LCAnUGVyZm9ybWFuY2UgU2NvcmUnLCBkYXRhLnBlcmZvcm1hbmNlU2NvcmUsIGRhdGEucGVyZm9ybWFuY2VTY29yZV0pO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gcm93cy5tYXAocm93ID0+IHJvdy5qb2luKCcsJykpLmpvaW4oJ1xcbicpO1xuICB9XG59XG5cbmV4cG9ydCB7IFBlcmZvcm1hbmNlQmVuY2htYXJrcyB9O1xuZXhwb3J0IGRlZmF1bHQgUGVyZm9ybWFuY2VCZW5jaG1hcmtzO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZVk7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJ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