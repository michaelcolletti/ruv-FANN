810cb499c1fd7d7f756f25443a60505a
/* istanbul ignore next */
function cov_b7ezsq2ai() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/claude-integration/index.js";
  var hash = "13375a8225df833e95678d9bb752807549bc0e21";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/claude-integration/index.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "1": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 56
        }
      },
      "2": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "3": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "4": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 68
        }
      },
      "5": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "6": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 60
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "8": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "9": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "10": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "11": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "12": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 57
        }
      },
      "13": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "14": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 75,
          column: 7
        }
      },
      "15": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 59
        }
      },
      "16": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "17": {
        start: {
          line: 55,
          column: 10
        },
        end: {
          line: 55,
          column: 62
        }
      },
      "18": {
        start: {
          line: 57,
          column: 10
        },
        end: {
          line: 57,
          column: 83
        }
      },
      "19": {
        start: {
          line: 58,
          column: 10
        },
        end: {
          line: 58,
          column: 50
        }
      },
      "20": {
        start: {
          line: 59,
          column: 10
        },
        end: {
          line: 63,
          column: 12
        }
      },
      "21": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 63
        }
      },
      "22": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "23": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 73
        }
      },
      "24": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 44
        }
      },
      "25": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 64
        }
      },
      "26": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 69
        }
      },
      "27": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 58
        }
      },
      "28": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 49
        }
      },
      "29": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 52
        }
      },
      "30": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 38
        }
      },
      "31": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "32": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 78
        }
      },
      "33": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 78
        }
      },
      "34": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 78
        }
      },
      "35": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 93,
          column: 77
        }
      },
      "36": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 68
        }
      },
      "37": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 21
        }
      },
      "38": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 99,
          column: 66
        }
      },
      "39": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "40": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 58
        }
      },
      "41": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 65
        }
      },
      "42": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "43": {
        start: {
          line: 118,
          column: 21
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "44": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 79
        }
      },
      "45": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 126,
          column: 77
        }
      },
      "46": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 20
        }
      },
      "47": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 61
        }
      },
      "48": {
        start: {
          line: 131,
          column: 6
        },
        end: {
          line: 131,
          column: 18
        }
      },
      "49": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 67
        }
      },
      "50": {
        start: {
          line: 141,
          column: 15
        },
        end: {
          line: 141,
          column: 37
        }
      },
      "51": {
        start: {
          line: 142,
          column: 17
        },
        end: {
          line: 142,
          column: 32
        }
      },
      "52": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "53": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 153,
          column: 7
        }
      },
      "54": {
        start: {
          line: 155,
          column: 27
        },
        end: {
          line: 155,
          column: 29
        }
      },
      "55": {
        start: {
          line: 157,
          column: 6
        },
        end: {
          line: 165,
          column: 7
        }
      },
      "56": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "57": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 67
        }
      },
      "58": {
        start: {
          line: 160,
          column: 10
        },
        end: {
          line: 160,
          column: 66
        }
      },
      "59": {
        start: {
          line: 161,
          column: 10
        },
        end: {
          line: 161,
          column: 34
        }
      },
      "60": {
        start: {
          line: 167,
          column: 6
        },
        end: {
          line: 167,
          column: 75
        }
      },
      "61": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 45
        }
      },
      "62": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 56
        }
      },
      "63": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 172,
          column: 18
        }
      },
      "64": {
        start: {
          line: 179,
          column: 23
        },
        end: {
          line: 179,
          column: 65
        }
      },
      "65": {
        start: {
          line: 180,
          column: 2
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "66": {
        start: {
          line: 185,
          column: 23
        },
        end: {
          line: 185,
          column: 65
        }
      },
      "67": {
        start: {
          line: 186,
          column: 2
        },
        end: {
          line: 186,
          column: 59
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 28
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        loc: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 107,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        },
        loc: {
          start: {
            line: 107,
            column: 39
          },
          end: {
            line: 109,
            column: 3
          }
        },
        line: 107
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 114,
            column: 2
          },
          end: {
            line: 114,
            column: 3
          }
        },
        loc: {
          start: {
            line: 114,
            column: 22
          },
          end: {
            line: 133,
            column: 3
          }
        },
        line: 114
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 138,
            column: 2
          },
          end: {
            line: 138,
            column: 3
          }
        },
        loc: {
          start: {
            line: 138,
            column: 18
          },
          end: {
            line: 174,
            column: 3
          }
        },
        line: 138
      },
      "5": {
        name: "setupClaudeIntegration",
        decl: {
          start: {
            line: 178,
            column: 15
          },
          end: {
            line: 178,
            column: 37
          }
        },
        loc: {
          start: {
            line: 178,
            column: 52
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 178
      },
      "6": {
        name: "invokeClaudeWithSwarm",
        decl: {
          start: {
            line: 184,
            column: 15
          },
          end: {
            line: 184,
            column: 36
          }
        },
        loc: {
          start: {
            line: 184,
            column: 59
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 184
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 11,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 24
          },
          end: {
            line: 11,
            column: 26
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 13,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 13,
            column: 34
          }
        }, {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 13,
            column: 43
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 36
          }
        }, {
          start: {
            line: 14,
            column: 40
          },
          end: {
            line: 14,
            column: 45
          }
        }],
        line: 14
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 36
          }
        }, {
          start: {
            line: 15,
            column: 40
          },
          end: {
            line: 15,
            column: 53
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 16,
            column: 53
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        }, {
          start: {
            line: 65,
            column: 13
          },
          end: {
            line: 75,
            column: 7
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        }, {
          start: {
            line: 90,
            column: 13
          },
          end: {
            line: 92,
            column: 7
          }
        }],
        line: 87
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 43
          },
          end: {
            line: 125,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 68
          },
          end: {
            line: 125,
            column: 71
          }
        }, {
          start: {
            line: 125,
            column: 74
          },
          end: {
            line: 125,
            column: 77
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 126,
            column: 46
          },
          end: {
            line: 126,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 66
          },
          end: {
            line: 126,
            column: 69
          }
        }, {
          start: {
            line: 126,
            column: 72
          },
          end: {
            line: 126,
            column: 75
          }
        }],
        line: 126
      },
      "9": {
        loc: {
          start: {
            line: 178,
            column: 38
          },
          end: {
            line: 178,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 178,
            column: 48
          },
          end: {
            line: 178,
            column: 50
          }
        }],
        line: 178
      },
      "10": {
        loc: {
          start: {
            line: 184,
            column: 45
          },
          end: {
            line: 184,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 184,
            column: 55
          },
          end: {
            line: 184,
            column: 57
          }
        }],
        line: 184
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "13375a8225df833e95678d9bb752807549bc0e21"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b7ezsq2ai = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b7ezsq2ai();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Main Claude Code integration orchestrator
 * Coordinates all integration modules for modular, remote-capable setup
 */

import { ClaudeIntegrationCore } from './core.js';
import { ClaudeDocsGenerator } from './docs.js';
import { RemoteWrapperGenerator } from './remote.js';
class ClaudeIntegrationOrchestrator {
  constructor(options =
  /* istanbul ignore next */
  (cov_b7ezsq2ai().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_b7ezsq2ai().f[0]++;
    cov_b7ezsq2ai().s[0]++;
    this.options =
    /* istanbul ignore next */
    _objectSpread({
      autoSetup:
      /* istanbul ignore next */
      (cov_b7ezsq2ai().b[1][0]++, options.autoSetup) ||
      /* istanbul ignore next */
      (cov_b7ezsq2ai().b[1][1]++, false),
      forceSetup:
      /* istanbul ignore next */
      (cov_b7ezsq2ai().b[2][0]++, options.forceSetup) ||
      /* istanbul ignore next */
      (cov_b7ezsq2ai().b[2][1]++, false),
      workingDir:
      /* istanbul ignore next */
      (cov_b7ezsq2ai().b[3][0]++, options.workingDir) ||
      /* istanbul ignore next */
      (cov_b7ezsq2ai().b[3][1]++, process.cwd()),
      packageName:
      /* istanbul ignore next */
      (cov_b7ezsq2ai().b[4][0]++, options.packageName) ||
      /* istanbul ignore next */
      (cov_b7ezsq2ai().b[4][1]++, 'ruv-swarm')
    }, options);

    // Initialize modules
    /* istanbul ignore next */
    cov_b7ezsq2ai().s[1]++;
    this.core = new ClaudeIntegrationCore(this.options);
    /* istanbul ignore next */
    cov_b7ezsq2ai().s[2]++;
    this.docs = new ClaudeDocsGenerator(this.options);
    /* istanbul ignore next */
    cov_b7ezsq2ai().s[3]++;
    this.remote = new RemoteWrapperGenerator(this.options);
  }

  /**
     * Setup complete Claude Code integration
     */
  setupIntegration() {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* () {
      cov_b7ezsq2ai().f[1]++;
      cov_b7ezsq2ai().s[4]++;
      console.log('🚀 Setting up modular Claude Code integration...');
      cov_b7ezsq2ai().s[5]++;
      console.log('   Working directory:', _this.options.workingDir);
      cov_b7ezsq2ai().s[6]++;
      console.log('   Force setup:', _this.options.forceSetup);
      cov_b7ezsq2ai().s[7]++;
      console.log('   Auto setup MCP:', _this.options.autoSetup);
      cov_b7ezsq2ai().s[8]++;
      try {
        const results =
        /* istanbul ignore next */
        (cov_b7ezsq2ai().s[9]++, {
          timestamp: new Date().toISOString(),
          workingDir: _this.options.workingDir,
          success: true,
          modules: {}
        });

        // Step 1: Generate documentation
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[10]++;
        console.log('\n📚 Step 1: Documentation Generation');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[11]++;
        results.modules.docs =
        /* istanbul ignore next */
        yield _this.docs.generateAll();

        // Step 2: Setup remote capabilities
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[12]++;
        console.log('\n🌐 Step 2: Remote Execution Setup');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[13]++;
        results.modules.remote =
        /* istanbul ignore next */
        yield _this.remote.createAll();

        // Step 3: Initialize core integration (if auto setup enabled)
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[14]++;
        if (_this.options.autoSetup) {
          /* istanbul ignore next */
          cov_b7ezsq2ai().b[5][0]++;
          cov_b7ezsq2ai().s[15]++;
          console.log('\n🔧 Step 3: Core Integration Setup');
          /* istanbul ignore next */
          cov_b7ezsq2ai().s[16]++;
          try {
            /* istanbul ignore next */
            cov_b7ezsq2ai().s[17]++;
            results.modules.core =
            /* istanbul ignore next */
            yield _this.core.initialize();
          } catch (error) {
            /* istanbul ignore next */
            cov_b7ezsq2ai().s[18]++;
            console.log('⚠️  Core integration setup failed (manual setup required)');
            /* istanbul ignore next */
            cov_b7ezsq2ai().s[19]++;
            console.log('   Error:', error.message);
            /* istanbul ignore next */
            cov_b7ezsq2ai().s[20]++;
            results.modules.core = {
              success: false,
              error: error.message,
              manualSetup: true
            };
          }
        } else {
          /* istanbul ignore next */
          cov_b7ezsq2ai().b[5][1]++;
          cov_b7ezsq2ai().s[21]++;
          console.log('\n💡 Step 3: Manual Core Setup Required');
          /* istanbul ignore next */
          cov_b7ezsq2ai().s[22]++;
          results.modules.core = {
            success: true,
            manualSetup: true,
            instructions: ['Run: claude mcp add ruv-swarm npx ruv-swarm mcp start', 'Test with: mcp__ruv-swarm__agent_spawn']
          };
        }

        // Summary
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[23]++;
        console.log('\n✅ Modular Claude Code integration setup complete!');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[24]++;
        console.log('\n📋 What was created:');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[25]++;
        console.log('   📄 claude.md - Main configuration guide');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[26]++;
        console.log('   📁 .claude/commands/ - Command documentation');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[27]++;
        console.log('   🔧 Cross-platform wrapper scripts');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[28]++;
        console.log('   🤖 Claude helper scripts');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[29]++;
        console.log('   🌐 Remote execution support');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[30]++;
        console.log('\n🔗 Next steps:');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[31]++;
        if (results.modules.core.manualSetup) {
          /* istanbul ignore next */
          cov_b7ezsq2ai().b[6][0]++;
          cov_b7ezsq2ai().s[32]++;
          console.log('   1. claude mcp add ruv-swarm npx ruv-swarm mcp start');
          /* istanbul ignore next */
          cov_b7ezsq2ai().s[33]++;
          console.log('   2. Test with MCP tools: mcp__ruv-swarm__agent_spawn');
        } else {
          /* istanbul ignore next */
          cov_b7ezsq2ai().b[6][1]++;
          cov_b7ezsq2ai().s[34]++;
          console.log('   1. Test with MCP tools: mcp__ruv-swarm__agent_spawn');
        }
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[35]++;
        console.log('   3. Check .claude/commands/ for detailed usage guides');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[36]++;
        console.log('   4. Use wrapper scripts for remote execution');
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[37]++;
        return results;
      } catch (error) {
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[38]++;
        console.error('❌ Integration setup failed:', error.message);
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[39]++;
        throw error;
      }
    })();
  }

  /**
     * Invoke Claude with a prompt using the core module
     */
  invokeClaudeWithPrompt(prompt) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_b7ezsq2ai().f[2]++;
      cov_b7ezsq2ai().s[40]++;
      return /* istanbul ignore next */yield _this2.core.invokeClaudeWithPrompt(prompt);
    })();
  }

  /**
     * Check integration status
     */
  checkStatus() {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* () {
      cov_b7ezsq2ai().f[3]++;
      cov_b7ezsq2ai().s[41]++;
      console.log('🔍 Checking Claude Code integration status...');
      cov_b7ezsq2ai().s[42]++;
      try {
        const status =
        /* istanbul ignore next */
        (cov_b7ezsq2ai().s[43]++, {
          claudeAvailable:
          /* istanbul ignore next */
          yield _this3.core.isClaudeAvailable(),
          filesExist:
          /* istanbul ignore next */
          yield _this3.core.checkExistingFiles(),
          workingDir: _this3.options.workingDir,
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[44]++;
        console.log('Claude CLI available:', status.claudeAvailable ?
        /* istanbul ignore next */
        (cov_b7ezsq2ai().b[7][0]++, '✅') :
        /* istanbul ignore next */
        (cov_b7ezsq2ai().b[7][1]++, '❌'));
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[45]++;
        console.log('Integration files exist:', status.filesExist ?
        /* istanbul ignore next */
        (cov_b7ezsq2ai().b[8][0]++, '✅') :
        /* istanbul ignore next */
        (cov_b7ezsq2ai().b[8][1]++, '❌'));
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[46]++;
        return status;
      } catch (error) {
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[47]++;
        console.error('❌ Status check failed:', error.message);
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[48]++;
        throw error;
      }
    })();
  }

  /**
     * Clean up integration files
     */
  cleanup() {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* () {
      cov_b7ezsq2ai().f[4]++;
      cov_b7ezsq2ai().s[49]++;
      console.log('🧹 Cleaning up Claude Code integration files...');
      const fs =
      /* istanbul ignore next */
      (cov_b7ezsq2ai().s[50]++, require('fs').promises);
      const path =
      /* istanbul ignore next */
      (cov_b7ezsq2ai().s[51]++, require('path'));
      cov_b7ezsq2ai().s[52]++;
      try {
        const filesToRemove =
        /* istanbul ignore next */
        (cov_b7ezsq2ai().s[53]++, ['claude.md', '.claude', _this4.options.packageName, `${_this4.options.packageName}.bat`, `${_this4.options.packageName}.ps1`, 'claude-swarm.sh', 'claude-swarm.bat']);
        const removedFiles =
        /* istanbul ignore next */
        (cov_b7ezsq2ai().s[54]++, []);
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[55]++;
        for (const file of filesToRemove) {
          /* istanbul ignore next */
          cov_b7ezsq2ai().s[56]++;
          try {
            const filePath =
            /* istanbul ignore next */
            (cov_b7ezsq2ai().s[57]++, path.join(_this4.options.workingDir, file));
            /* istanbul ignore next */
            cov_b7ezsq2ai().s[58]++;
            /* istanbul ignore next */
            yield fs.rm(filePath, {
              recursive: true,
              force: true
            });
            /* istanbul ignore next */
            cov_b7ezsq2ai().s[59]++;
            removedFiles.push(file);
          } catch {
            // File doesn't exist, continue
          }
        }
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[60]++;
        console.log('✅ Cleanup complete. Removed:', removedFiles.join(', '));
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[61]++;
        return {
          success: true,
          removedFiles
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[62]++;
        console.error('❌ Cleanup failed:', error.message);
        /* istanbul ignore next */
        cov_b7ezsq2ai().s[63]++;
        throw error;
      }
    })();
  }
}

// Convenience function for simple setup
/* istanbul ignore next */
function setupClaudeIntegration() {
  return _setupClaudeIntegration.apply(this, arguments);
} // Convenience function for Claude invocation
/* istanbul ignore next */
function _setupClaudeIntegration() {
  _setupClaudeIntegration = _asyncToGenerator(function* (options =
  /* istanbul ignore next */
  (cov_b7ezsq2ai().b[9][0]++, {})) {
    /* istanbul ignore next */
    cov_b7ezsq2ai().f[5]++;
    const orchestrator =
    /* istanbul ignore next */
    (cov_b7ezsq2ai().s[64]++, new ClaudeIntegrationOrchestrator(options));
    /* istanbul ignore next */
    cov_b7ezsq2ai().s[65]++;
    return /* istanbul ignore next */yield orchestrator.setupIntegration();
  });
  return _setupClaudeIntegration.apply(this, arguments);
}
/* istanbul ignore next */
function invokeClaudeWithSwarm(_x) {
  return _invokeClaudeWithSwarm.apply(this, arguments);
}
/* istanbul ignore next */
function _invokeClaudeWithSwarm() {
  _invokeClaudeWithSwarm = _asyncToGenerator(function* (prompt, options =
  /* istanbul ignore next */
  (cov_b7ezsq2ai().b[10][0]++, {})) {
    /* istanbul ignore next */
    cov_b7ezsq2ai().f[6]++;
    const orchestrator =
    /* istanbul ignore next */
    (cov_b7ezsq2ai().s[66]++, new ClaudeIntegrationOrchestrator(options));
    /* istanbul ignore next */
    cov_b7ezsq2ai().s[67]++;
    return /* istanbul ignore next */yield orchestrator.invokeClaudeWithPrompt(prompt);
  });
  return _invokeClaudeWithSwarm.apply(this, arguments);
}
export { ClaudeIntegrationOrchestrator, setupClaudeIntegration, invokeClaudeWithSwarm,
// Export individual modules for advanced usage
ClaudeIntegrationCore, ClaudeDocsGenerator, RemoteWrapperGenerator };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,