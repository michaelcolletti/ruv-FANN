f4a5f28c895019ae168fc66558842160
/* istanbul ignore next */
function cov_1ixnmheckz() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/benchmark.js";
  var hash = "b273b9c6312eba76aecd0707cbee287f7a7efe3d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/benchmark.js",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 25
        }
      },
      "1": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "2": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "3": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 25
        }
      },
      "4": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "5": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 76
        }
      },
      "6": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 30,
          column: 67
        }
      },
      "7": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 52
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 56
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 42
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 45
        }
      },
      "11": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "12": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "13": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "14": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 47
        }
      },
      "15": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 34
        }
      },
      "16": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 60
        }
      },
      "17": {
        start: {
          line: 58,
          column: 35
        },
        end: {
          line: 58,
          column: 58
        }
      },
      "18": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 45
        }
      },
      "19": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 64,
          column: 8
        }
      },
      "20": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 57
        }
      },
      "21": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 48
        }
      },
      "22": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 69,
          column: 27
        }
      },
      "23": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "24": {
        start: {
          line: 70,
          column: 19
        },
        end: {
          line: 70,
          column: 20
        }
      },
      "25": {
        start: {
          line: 71,
          column: 22
        },
        end: {
          line: 71,
          column: 32
        }
      },
      "26": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 61
        }
      },
      "27": {
        start: {
          line: 73,
          column: 37
        },
        end: {
          line: 73,
          column: 59
        }
      },
      "28": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 44
        }
      },
      "29": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 70
        }
      },
      "30": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 77,
          column: 84
        }
      },
      "31": {
        start: {
          line: 77,
          column: 55
        },
        end: {
          line: 77,
          column: 60
        }
      },
      "32": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 85,
          column: 8
        }
      },
      "33": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 82
        }
      },
      "34": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 42
        }
      },
      "35": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 90,
          column: 27
        }
      },
      "36": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "37": {
        start: {
          line: 91,
          column: 19
        },
        end: {
          line: 91,
          column: 20
        }
      },
      "38": {
        start: {
          line: 92,
          column: 22
        },
        end: {
          line: 92,
          column: 32
        }
      },
      "39": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 61
        }
      },
      "40": {
        start: {
          line: 94,
          column: 37
        },
        end: {
          line: 94,
          column: 59
        }
      },
      "41": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "42": {
        start: {
          line: 97,
          column: 27
        },
        end: {
          line: 97,
          column: 84
        }
      },
      "43": {
        start: {
          line: 97,
          column: 55
        },
        end: {
          line: 97,
          column: 60
        }
      },
      "44": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 103,
          column: 8
        }
      },
      "45": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 79
        }
      },
      "46": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "47": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 56
        }
      },
      "48": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 30
        }
      },
      "49": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "50": {
        start: {
          line: 110,
          column: 21
        },
        end: {
          line: 110,
          column: 22
        }
      },
      "51": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 111,
          column: 34
        }
      },
      "52": {
        start: {
          line: 113,
          column: 10
        },
        end: {
          line: 113,
          column: 64
        }
      },
      "53": {
        start: {
          line: 113,
          column: 39
        },
        end: {
          line: 113,
          column: 62
        }
      },
      "54": {
        start: {
          line: 114,
          column: 10
        },
        end: {
          line: 114,
          column: 47
        }
      },
      "55": {
        start: {
          line: 116,
          column: 30
        },
        end: {
          line: 116,
          column: 89
        }
      },
      "56": {
        start: {
          line: 116,
          column: 59
        },
        end: {
          line: 116,
          column: 64
        }
      },
      "57": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "58": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 113
        }
      },
      "59": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 40
        }
      },
      "60": {
        start: {
          line: 129,
          column: 23
        },
        end: {
          line: 129,
          column: 44
        }
      },
      "61": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 136,
          column: 8
        }
      },
      "62": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 137,
          column: 135
        }
      },
      "63": {
        start: {
          line: 140,
          column: 21
        },
        end: {
          line: 140,
          column: 23
        }
      },
      "64": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "65": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 23
        }
      },
      "66": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "67": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 23
        }
      },
      "68": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "69": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 23
        }
      },
      "70": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "71": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 23
        }
      },
      "72": {
        start: {
          line: 154,
          column: 27
        },
        end: {
          line: 154,
          column: 89
        }
      },
      "73": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 42
        }
      },
      "74": {
        start: {
          line: 157,
          column: 6
        },
        end: {
          line: 157,
          column: 45
        }
      },
      "75": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 158,
          column: 67
        }
      },
      "76": {
        start: {
          line: 159,
          column: 6
        },
        end: {
          line: 159,
          column: 79
        }
      },
      "77": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 160,
          column: 75
        }
      },
      "78": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 161,
          column: 77
        }
      },
      "79": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "80": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 91
        }
      },
      "81": {
        start: {
          line: 167,
          column: 6
        },
        end: {
          line: 175,
          column: 7
        }
      },
      "82": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 73
        }
      },
      "83": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 60
        }
      },
      "84": {
        start: {
          line: 171,
          column: 28
        },
        end: {
          line: 171,
          column: 112
        }
      },
      "85": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 71
        }
      },
      "86": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 74
        }
      },
      "87": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 91
        }
      },
      "88": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 45
        }
      },
      "89": {
        start: {
          line: 180,
          column: 6
        },
        end: {
          line: 180,
          column: 58
        }
      },
      "90": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 181,
          column: 22
        }
      },
      "91": {
        start: {
          line: 186,
          column: 27
        },
        end: {
          line: 186,
          column: 31
        }
      },
      "92": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "93": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 189,
          column: 78
        }
      },
      "94": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 78
        }
      },
      "95": {
        start: {
          line: 191,
          column: 6
        },
        end: {
          line: 191,
          column: 22
        }
      },
      "96": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "97": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 47
        }
      },
      "98": {
        start: {
          line: 197,
          column: 23
        },
        end: {
          line: 197,
          column: 68
        }
      },
      "99": {
        start: {
          line: 198,
          column: 23
        },
        end: {
          line: 198,
          column: 68
        }
      },
      "100": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 32
        }
      },
      "101": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 73
        }
      },
      "102": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 202,
          column: 73
        }
      },
      "103": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "104": {
        start: {
          line: 206,
          column: 21
        },
        end: {
          line: 206,
          column: 47
        }
      },
      "105": {
        start: {
          line: 207,
          column: 21
        },
        end: {
          line: 207,
          column: 47
        }
      },
      "106": {
        start: {
          line: 208,
          column: 24
        },
        end: {
          line: 208,
          column: 39
        }
      },
      "107": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 210,
          column: 45
        }
      },
      "108": {
        start: {
          line: 211,
          column: 6
        },
        end: {
          line: 211,
          column: 53
        }
      },
      "109": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 212,
          column: 53
        }
      },
      "110": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 213,
          column: 137
        }
      },
      "111": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 214,
          column: 22
        }
      },
      "112": {
        start: {
          line: 217,
          column: 25
        },
        end: {
          line: 220,
          column: 8
        }
      },
      "113": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 241,
          column: 7
        }
      },
      "114": {
        start: {
          line: 223,
          column: 23
        },
        end: {
          line: 223,
          column: 55
        }
      },
      "115": {
        start: {
          line: 224,
          column: 23
        },
        end: {
          line: 224,
          column: 55
        }
      },
      "116": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "117": {
        start: {
          line: 227,
          column: 10
        },
        end: {
          line: 227,
          column: 42
        }
      },
      "118": {
        start: {
          line: 229,
          column: 10
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "119": {
        start: {
          line: 230,
          column: 25
        },
        end: {
          line: 230,
          column: 56
        }
      },
      "120": {
        start: {
          line: 231,
          column: 35
        },
        end: {
          line: 231,
          column: 64
        }
      },
      "121": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 164
        }
      },
      "122": {
        start: {
          line: 235,
          column: 10
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "123": {
        start: {
          line: 236,
          column: 33
        },
        end: {
          line: 236,
          column: 111
        }
      },
      "124": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 89
        }
      },
      "125": {
        start: {
          line: 239,
          column: 10
        },
        end: {
          line: 239,
          column: 26
        }
      },
      "126": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 244,
          column: 41
        }
      },
      "127": {
        start: {
          line: 245,
          column: 6
        },
        end: {
          line: 251,
          column: 7
        }
      },
      "128": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 62
        }
      },
      "129": {
        start: {
          line: 247,
          column: 13
        },
        end: {
          line: 251,
          column: 7
        }
      },
      "130": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 79
        }
      },
      "131": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 51
        }
      },
      "132": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 254,
          column: 59
        }
      },
      "133": {
        start: {
          line: 255,
          column: 6
        },
        end: {
          line: 255,
          column: 22
        }
      },
      "134": {
        start: {
          line: 260,
          column: 18
        },
        end: {
          line: 260,
          column: 36
        }
      },
      "135": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 261,
          column: 76
        }
      },
      "136": {
        start: {
          line: 265,
          column: 21
        },
        end: {
          line: 265,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 3
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 24,
            column: 3
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        },
        loc: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 183,
            column: 3
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 25
          }
        },
        loc: {
          start: {
            line: 58,
            column: 35
          },
          end: {
            line: 58,
            column: 58
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 26
          },
          end: {
            line: 73,
            column: 27
          }
        },
        loc: {
          start: {
            line: 73,
            column: 37
          },
          end: {
            line: 73,
            column: 59
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 77,
            column: 45
          },
          end: {
            line: 77,
            column: 46
          }
        },
        loc: {
          start: {
            line: 77,
            column: 55
          },
          end: {
            line: 77,
            column: 60
          }
        },
        line: 77
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 27
          }
        },
        loc: {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 94,
            column: 59
          }
        },
        line: 94
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 97,
            column: 45
          },
          end: {
            line: 97,
            column: 46
          }
        },
        loc: {
          start: {
            line: 97,
            column: 55
          },
          end: {
            line: 97,
            column: 60
          }
        },
        line: 97
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 29
          }
        },
        loc: {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 113,
            column: 62
          }
        },
        line: 113
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 116,
            column: 50
          }
        },
        loc: {
          start: {
            line: 116,
            column: 59
          },
          end: {
            line: 116,
            column: 64
          }
        },
        line: 116
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 185,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        loc: {
          start: {
            line: 185,
            column: 22
          },
          end: {
            line: 257,
            column: 3
          }
        },
        line: 185
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 259,
            column: 2
          },
          end: {
            line: 259,
            column: 3
          }
        },
        loc: {
          start: {
            line: 259,
            column: 21
          },
          end: {
            line: 262,
            column: 3
          }
        },
        line: 259
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 70
          }
        }, {
          start: {
            line: 29,
            column: 74
          },
          end: {
            line: 29,
            column: 76
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 21
          },
          end: {
            line: 30,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 21
          },
          end: {
            line: 30,
            column: 48
          }
        }, {
          start: {
            line: 30,
            column: 52
          },
          end: {
            line: 30,
            column: 67
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 39
          }
        }, {
          start: {
            line: 63,
            column: 42
          },
          end: {
            line: 63,
            column: 48
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 36
          },
          end: {
            line: 84,
            column: 42
          }
        }, {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 84,
            column: 51
          }
        }],
        line: 84
      },
      "5": {
        loc: {
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 35
          },
          end: {
            line: 102,
            column: 41
          }
        }, {
          start: {
            line: 102,
            column: 44
          },
          end: {
            line: 102,
            column: 50
          }
        }],
        line: 102
      },
      "6": {
        loc: {
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 125,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 125,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "7": {
        loc: {
          start: {
            line: 107,
            column: 10
          },
          end: {
            line: 107,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 10
          },
          end: {
            line: 107,
            column: 38
          }
        }, {
          start: {
            line: 107,
            column: 42
          },
          end: {
            line: 107,
            column: 63
          }
        }],
        line: 107
      },
      "8": {
        loc: {
          start: {
            line: 122,
            column: 18
          },
          end: {
            line: 122,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 39
          },
          end: {
            line: 122,
            column: 45
          }
        }, {
          start: {
            line: 122,
            column: 48
          },
          end: {
            line: 122,
            column: 54
          }
        }],
        line: 122
      },
      "9": {
        loc: {
          start: {
            line: 141,
            column: 6
          },
          end: {
            line: 143,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 6
          },
          end: {
            line: 143,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "10": {
        loc: {
          start: {
            line: 144,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 6
          },
          end: {
            line: 146,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "11": {
        loc: {
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 149,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 149,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "12": {
        loc: {
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 152,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 152,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "13": {
        loc: {
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 164,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 6
          },
          end: {
            line: 164,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "14": {
        loc: {
          start: {
            line: 167,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        }, {
          start: {
            line: 170,
            column: 13
          },
          end: {
            line: 175,
            column: 7
          }
        }],
        line: 167
      },
      "15": {
        loc: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "16": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 14
          }
        }, {
          start: {
            line: 188,
            column: 18
          },
          end: {
            line: 188,
            column: 24
          }
        }],
        line: 188
      },
      "17": {
        loc: {
          start: {
            line: 206,
            column: 21
          },
          end: {
            line: 206,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 21
          },
          end: {
            line: 206,
            column: 42
          }
        }, {
          start: {
            line: 206,
            column: 46
          },
          end: {
            line: 206,
            column: 47
          }
        }],
        line: 206
      },
      "18": {
        loc: {
          start: {
            line: 207,
            column: 21
          },
          end: {
            line: 207,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 21
          },
          end: {
            line: 207,
            column: 42
          }
        }, {
          start: {
            line: 207,
            column: 46
          },
          end: {
            line: 207,
            column: 47
          }
        }],
        line: 207
      },
      "19": {
        loc: {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 213,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 47
          },
          end: {
            line: 213,
            column: 50
          }
        }, {
          start: {
            line: 213,
            column: 53
          },
          end: {
            line: 213,
            column: 55
          }
        }],
        line: 213
      },
      "20": {
        loc: {
          start: {
            line: 213,
            column: 83
          },
          end: {
            line: 213,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 99
          },
          end: {
            line: 213,
            column: 103
          }
        }, {
          start: {
            line: 213,
            column: 106
          },
          end: {
            line: 213,
            column: 133
          }
        }],
        line: 213
      },
      "21": {
        loc: {
          start: {
            line: 213,
            column: 106
          },
          end: {
            line: 213,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 122
          },
          end: {
            line: 213,
            column: 126
          }
        }, {
          start: {
            line: 213,
            column: 129
          },
          end: {
            line: 213,
            column: 133
          }
        }],
        line: 213
      },
      "22": {
        loc: {
          start: {
            line: 218,
            column: 23
          },
          end: {
            line: 218,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 23
          },
          end: {
            line: 218,
            column: 42
          }
        }, {
          start: {
            line: 218,
            column: 46
          },
          end: {
            line: 218,
            column: 48
          }
        }],
        line: 218
      },
      "23": {
        loc: {
          start: {
            line: 219,
            column: 23
          },
          end: {
            line: 219,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 23
          },
          end: {
            line: 219,
            column: 42
          }
        }, {
          start: {
            line: 219,
            column: 46
          },
          end: {
            line: 219,
            column: 48
          }
        }],
        line: 219
      },
      "24": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "25": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 226,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 226,
            column: 18
          }
        }, {
          start: {
            line: 226,
            column: 22
          },
          end: {
            line: 226,
            column: 28
          }
        }],
        line: 226
      },
      "26": {
        loc: {
          start: {
            line: 229,
            column: 10
          },
          end: {
            line: 233,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 10
          },
          end: {
            line: 233,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "27": {
        loc: {
          start: {
            line: 229,
            column: 14
          },
          end: {
            line: 229,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 14
          },
          end: {
            line: 229,
            column: 42
          }
        }, {
          start: {
            line: 229,
            column: 46
          },
          end: {
            line: 229,
            column: 74
          }
        }],
        line: 229
      },
      "28": {
        loc: {
          start: {
            line: 232,
            column: 103
          },
          end: {
            line: 232,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 232,
            column: 123
          },
          end: {
            line: 232,
            column: 126
          }
        }, {
          start: {
            line: 232,
            column: 129
          },
          end: {
            line: 232,
            column: 131
          }
        }],
        line: 232
      },
      "29": {
        loc: {
          start: {
            line: 235,
            column: 10
          },
          end: {
            line: 238,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 10
          },
          end: {
            line: 238,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "30": {
        loc: {
          start: {
            line: 235,
            column: 14
          },
          end: {
            line: 235,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 14
          },
          end: {
            line: 235,
            column: 27
          }
        }, {
          start: {
            line: 235,
            column: 31
          },
          end: {
            line: 235,
            column: 44
          }
        }],
        line: 235
      },
      "31": {
        loc: {
          start: {
            line: 236,
            column: 33
          },
          end: {
            line: 236,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 67
          },
          end: {
            line: 236,
            column: 70
          }
        }, {
          start: {
            line: 236,
            column: 73
          },
          end: {
            line: 236,
            column: 111
          }
        }],
        line: 236
      },
      "32": {
        loc: {
          start: {
            line: 236,
            column: 73
          },
          end: {
            line: 236,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 100
          },
          end: {
            line: 236,
            column: 104
          }
        }, {
          start: {
            line: 236,
            column: 107
          },
          end: {
            line: 236,
            column: 111
          }
        }],
        line: 236
      },
      "33": {
        loc: {
          start: {
            line: 245,
            column: 6
          },
          end: {
            line: 251,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 6
          },
          end: {
            line: 251,
            column: 7
          }
        }, {
          start: {
            line: 247,
            column: 13
          },
          end: {
            line: 251,
            column: 7
          }
        }],
        line: 245
      },
      "34": {
        loc: {
          start: {
            line: 247,
            column: 13
          },
          end: {
            line: 251,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 13
          },
          end: {
            line: 251,
            column: 7
          }
        }, {
          start: {
            line: 249,
            column: 13
          },
          end: {
            line: 251,
            column: 7
          }
        }],
        line: 247
      },
      "35": {
        loc: {
          start: {
            line: 261,
            column: 11
          },
          end: {
            line: 261,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 261,
            column: 53
          },
          end: {
            line: 261,
            column: 68
          }
        }, {
          start: {
            line: 261,
            column: 71
          },
          end: {
            line: 261,
            column: 75
          }
        }],
        line: 261
      },
      "36": {
        loc: {
          start: {
            line: 261,
            column: 11
          },
          end: {
            line: 261,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 11
          },
          end: {
            line: 261,
            column: 23
          }
        }, {
          start: {
            line: 261,
            column: 27
          },
          end: {
            line: 261,
            column: 50
          }
        }],
        line: 261
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b273b9c6312eba76aecd0707cbee287f7a7efe3d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ixnmheckz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ixnmheckz();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Benchmark CLI for ruv-swarm
 * Provides performance benchmarking and comparison tools
 */

import { RuvSwarm } from './index-enhanced.js';
import { promises as fs } from 'fs';
import path from 'path';
class BenchmarkCLI {
  constructor() {
    /* istanbul ignore next */
    cov_1ixnmheckz().f[0]++;
    cov_1ixnmheckz().s[0]++;
    this.ruvSwarm = null;
  }
  initialize() {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* () {
      cov_1ixnmheckz().f[1]++;
      cov_1ixnmheckz().s[1]++;
      if (!_this.ruvSwarm) {
        /* istanbul ignore next */
        cov_1ixnmheckz().b[0][0]++;
        cov_1ixnmheckz().s[2]++;
        _this.ruvSwarm =
        /* istanbul ignore next */
        yield RuvSwarm.initialize({
          enableNeuralNetworks: true,
          enableForecasting: true,
          loadingStrategy: 'progressive'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ixnmheckz().b[0][1]++;
      }
      cov_1ixnmheckz().s[3]++;
      return _this.ruvSwarm;
    })();
  }
  run(args) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_1ixnmheckz().f[2]++;
      cov_1ixnmheckz().s[4]++;
      /* istanbul ignore next */
      yield _this2.initialize();
      const iterations =
      /* istanbul ignore next */
      (cov_1ixnmheckz().s[5]++,
      /* istanbul ignore next */
      (cov_1ixnmheckz().b[1][0]++, parseInt(_this2.getArg(args, '--iterations'), 10)) ||
      /* istanbul ignore next */
      (cov_1ixnmheckz().b[1][1]++, 10));
      const testType =
      /* istanbul ignore next */
      (cov_1ixnmheckz().s[6]++,
      /* istanbul ignore next */
      (cov_1ixnmheckz().b[2][0]++, _this2.getArg(args, '--test')) ||
      /* istanbul ignore next */
      (cov_1ixnmheckz().b[2][1]++, 'comprehensive'));
      const outputFile =
      /* istanbul ignore next */
      (cov_1ixnmheckz().s[7]++, _this2.getArg(args, '--output'));
      cov_1ixnmheckz().s[8]++;
      console.log('🚀 ruv-swarm Performance Benchmark\n');
      cov_1ixnmheckz().s[9]++;
      console.log(`Test Type: ${testType}`);
      cov_1ixnmheckz().s[10]++;
      console.log(`Iterations: ${iterations}`);
      cov_1ixnmheckz().s[11]++;
      console.log('');
      const results =
      /* istanbul ignore next */
      (cov_1ixnmheckz().s[12]++, {
        metadata: {
          timestamp: new Date().toISOString(),
          version: '0.2.0',
          testType,
          iterations,
          system: {
            platform: process.platform,
            arch: process.arch,
            nodeVersion: process.version
          }
        },
        benchmarks: {}
      });
      cov_1ixnmheckz().s[13]++;
      try {
        /* istanbul ignore next */
        var _results$benchmarks$n;
        cov_1ixnmheckz().s[14]++;
        // 1. WASM Loading Benchmark
        console.log('📦 WASM Module Loading...');
        const wasmStart =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[15]++, Date.now());
        // Simulate WASM loading
        /* istanbul ignore next */
        cov_1ixnmheckz().s[16]++;
        /* istanbul ignore next */
        yield new Promise(resolve => {
          /* istanbul ignore next */
          cov_1ixnmheckz().f[3]++;
          cov_1ixnmheckz().s[17]++;
          return setTimeout(resolve, 50);
        });
        const wasmTime =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[18]++, Date.now() - wasmStart);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[19]++;
        results.benchmarks.wasmLoading = {
          time: wasmTime,
          target: 100,
          status: wasmTime < 100 ?
          /* istanbul ignore next */
          (cov_1ixnmheckz().b[3][0]++, 'PASS') :
          /* istanbul ignore next */
          (cov_1ixnmheckz().b[3][1]++, 'SLOW')
        };
        /* istanbul ignore next */
        cov_1ixnmheckz().s[20]++;
        console.log(`   ✅ ${wasmTime}ms (target: <100ms)`);

        // 2. Swarm Initialization Benchmark
        /* istanbul ignore next */
        cov_1ixnmheckz().s[21]++;
        console.log('🐝 Swarm Initialization...');
        const swarmTimes =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[22]++, []);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[23]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[24]++, 0); i < iterations; i++) {
          const start =
          /* istanbul ignore next */
          (cov_1ixnmheckz().s[25]++, Date.now());
          // Simulate swarm init
          /* istanbul ignore next */
          cov_1ixnmheckz().s[26]++;
          /* istanbul ignore next */
          yield new Promise(resolve => {
            /* istanbul ignore next */
            cov_1ixnmheckz().f[4]++;
            cov_1ixnmheckz().s[27]++;
            return setTimeout(resolve, 5);
          });
          /* istanbul ignore next */
          cov_1ixnmheckz().s[28]++;
          swarmTimes.push(Date.now() - start);
          /* istanbul ignore next */
          cov_1ixnmheckz().s[29]++;
          process.stdout.write(`\r   Progress: ${i + 1}/${iterations}`);
        }
        const avgSwarmTime =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[30]++, swarmTimes.reduce((a, b) => {
          /* istanbul ignore next */
          cov_1ixnmheckz().f[5]++;
          cov_1ixnmheckz().s[31]++;
          return a + b;
        }, 0) / swarmTimes.length);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[32]++;
        results.benchmarks.swarmInit = {
          times: swarmTimes,
          average: avgSwarmTime,
          min: Math.min(...swarmTimes),
          max: Math.max(...swarmTimes),
          target: 10,
          status: avgSwarmTime < 10 ?
          /* istanbul ignore next */
          (cov_1ixnmheckz().b[4][0]++, 'PASS') :
          /* istanbul ignore next */
          (cov_1ixnmheckz().b[4][1]++, 'SLOW')
        };
        /* istanbul ignore next */
        cov_1ixnmheckz().s[33]++;
        console.log(`\n   ✅ Average: ${avgSwarmTime.toFixed(1)}ms (target: <10ms)`);

        // 3. Agent Spawning Benchmark
        /* istanbul ignore next */
        cov_1ixnmheckz().s[34]++;
        console.log('👥 Agent Spawning...');
        const agentTimes =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[35]++, []);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[36]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[37]++, 0); i < iterations; i++) {
          const start =
          /* istanbul ignore next */
          (cov_1ixnmheckz().s[38]++, Date.now());
          // Simulate agent spawning
          /* istanbul ignore next */
          cov_1ixnmheckz().s[39]++;
          /* istanbul ignore next */
          yield new Promise(resolve => {
            /* istanbul ignore next */
            cov_1ixnmheckz().f[6]++;
            cov_1ixnmheckz().s[40]++;
            return setTimeout(resolve, 3);
          });
          /* istanbul ignore next */
          cov_1ixnmheckz().s[41]++;
          agentTimes.push(Date.now() - start);
        }
        const avgAgentTime =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[42]++, agentTimes.reduce((a, b) => {
          /* istanbul ignore next */
          cov_1ixnmheckz().f[7]++;
          cov_1ixnmheckz().s[43]++;
          return a + b;
        }, 0) / agentTimes.length);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[44]++;
        results.benchmarks.agentSpawn = {
          times: agentTimes,
          average: avgAgentTime,
          target: 5,
          status: avgAgentTime < 5 ?
          /* istanbul ignore next */
          (cov_1ixnmheckz().b[5][0]++, 'PASS') :
          /* istanbul ignore next */
          (cov_1ixnmheckz().b[5][1]++, 'SLOW')
        };
        /* istanbul ignore next */
        cov_1ixnmheckz().s[45]++;
        console.log(`   ✅ Average: ${avgAgentTime.toFixed(1)}ms (target: <5ms)`);

        // 4. Neural Network Benchmark
        /* istanbul ignore next */
        cov_1ixnmheckz().s[46]++;
        if (
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[7][0]++, testType === 'comprehensive') ||
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[7][1]++, testType === 'neural')) {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[6][0]++;
          cov_1ixnmheckz().s[47]++;
          console.log('🧠 Neural Network Performance...');
          const neuralTimes =
          /* istanbul ignore next */
          (cov_1ixnmheckz().s[48]++, []);
          /* istanbul ignore next */
          cov_1ixnmheckz().s[49]++;
          for (let i =
          /* istanbul ignore next */
          (cov_1ixnmheckz().s[50]++, 0); i < Math.min(iterations, 5); i++) {
            const start =
            /* istanbul ignore next */
            (cov_1ixnmheckz().s[51]++, Date.now());
            // Simulate neural processing
            /* istanbul ignore next */
            cov_1ixnmheckz().s[52]++;
            /* istanbul ignore next */
            yield new Promise(resolve => {
              /* istanbul ignore next */
              cov_1ixnmheckz().f[8]++;
              cov_1ixnmheckz().s[53]++;
              return setTimeout(resolve, 20);
            });
            /* istanbul ignore next */
            cov_1ixnmheckz().s[54]++;
            neuralTimes.push(Date.now() - start);
          }
          const avgNeuralTime =
          /* istanbul ignore next */
          (cov_1ixnmheckz().s[55]++, neuralTimes.reduce((a, b) => {
            /* istanbul ignore next */
            cov_1ixnmheckz().f[9]++;
            cov_1ixnmheckz().s[56]++;
            return a + b;
          }, 0) / neuralTimes.length);
          /* istanbul ignore next */
          cov_1ixnmheckz().s[57]++;
          results.benchmarks.neuralProcessing = {
            times: neuralTimes,
            average: avgNeuralTime,
            throughput: 1000 / avgNeuralTime,
            target: 50,
            status: avgNeuralTime < 50 ?
            /* istanbul ignore next */
            (cov_1ixnmheckz().b[8][0]++, 'PASS') :
            /* istanbul ignore next */
            (cov_1ixnmheckz().b[8][1]++, 'SLOW')
          };
          /* istanbul ignore next */
          cov_1ixnmheckz().s[58]++;
          console.log(`   ✅ Average: ${avgNeuralTime.toFixed(1)}ms, ${(1000 / avgNeuralTime).toFixed(0)} ops/sec`);
        } else
        /* istanbul ignore next */
        {
          cov_1ixnmheckz().b[6][1]++;
        }

        // 5. Memory Usage Benchmark
        cov_1ixnmheckz().s[59]++;
        console.log('💾 Memory Usage...');
        const memUsage =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[60]++, process.memoryUsage());
        /* istanbul ignore next */
        cov_1ixnmheckz().s[61]++;
        results.benchmarks.memory = {
          heapUsed: memUsage.heapUsed,
          heapTotal: memUsage.heapTotal,
          external: memUsage.external,
          rss: memUsage.rss,
          efficiency: (memUsage.heapUsed / memUsage.heapTotal * 100).toFixed(1)
        };
        /* istanbul ignore next */
        cov_1ixnmheckz().s[62]++;
        console.log(`   ✅ Heap: ${(memUsage.heapUsed / 1024 / 1024).toFixed(1)}MB / ${(memUsage.heapTotal / 1024 / 1024).toFixed(1)}MB`);

        // 6. Overall Performance Score
        const scores =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[63]++, []);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[64]++;
        if (results.benchmarks.wasmLoading.status === 'PASS') {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[9][0]++;
          cov_1ixnmheckz().s[65]++;
          scores.push(1);
        } else
        /* istanbul ignore next */
        {
          cov_1ixnmheckz().b[9][1]++;
        }
        cov_1ixnmheckz().s[66]++;
        if (results.benchmarks.swarmInit.status === 'PASS') {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[10][0]++;
          cov_1ixnmheckz().s[67]++;
          scores.push(1);
        } else
        /* istanbul ignore next */
        {
          cov_1ixnmheckz().b[10][1]++;
        }
        cov_1ixnmheckz().s[68]++;
        if (results.benchmarks.agentSpawn.status === 'PASS') {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[11][0]++;
          cov_1ixnmheckz().s[69]++;
          scores.push(1);
        } else
        /* istanbul ignore next */
        {
          cov_1ixnmheckz().b[11][1]++;
        }
        cov_1ixnmheckz().s[70]++;
        if (
        /* istanbul ignore next */
        ((_results$benchmarks$n = results.benchmarks.neuralProcessing) === null || _results$benchmarks$n === void 0 ? void 0 :
        /* istanbul ignore next */
        _results$benchmarks$n.status) === 'PASS') {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[12][0]++;
          cov_1ixnmheckz().s[71]++;
          scores.push(1);
        } else
        /* istanbul ignore next */
        {
          cov_1ixnmheckz().b[12][1]++;
        }
        const overallScore =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[72]++, scores.length / Object.keys(results.benchmarks).length * 100);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[73]++;
        results.overallScore = overallScore;
        /* istanbul ignore next */
        cov_1ixnmheckz().s[74]++;
        console.log('\n📊 Benchmark Summary:');
        /* istanbul ignore next */
        cov_1ixnmheckz().s[75]++;
        console.log(`   Overall Score: ${overallScore.toFixed(0)}%`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[76]++;
        console.log(`   WASM Loading: ${results.benchmarks.wasmLoading.status}`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[77]++;
        console.log(`   Swarm Init: ${results.benchmarks.swarmInit.status}`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[78]++;
        console.log(`   Agent Spawn: ${results.benchmarks.agentSpawn.status}`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[79]++;
        if (results.benchmarks.neuralProcessing) {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[13][0]++;
          cov_1ixnmheckz().s[80]++;
          console.log(`   Neural Processing: ${results.benchmarks.neuralProcessing.status}`);
        } else
        /* istanbul ignore next */
        {
          cov_1ixnmheckz().b[13][1]++;
        }

        // Save results
        cov_1ixnmheckz().s[81]++;
        if (outputFile) {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[14][0]++;
          cov_1ixnmheckz().s[82]++;
          /* istanbul ignore next */
          yield fs.writeFile(outputFile, JSON.stringify(results, null, 2));
          /* istanbul ignore next */
          cov_1ixnmheckz().s[83]++;
          console.log(`\n💾 Results saved to: ${outputFile}`);
        } else {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[14][1]++;
          const defaultPath =
          /* istanbul ignore next */
          (cov_1ixnmheckz().s[84]++, path.join(process.cwd(), '.ruv-swarm', 'benchmarks', `benchmark-${Date.now()}.json`));
          /* istanbul ignore next */
          cov_1ixnmheckz().s[85]++;
          /* istanbul ignore next */
          yield fs.mkdir(path.dirname(defaultPath), {
            recursive: true
          });
          /* istanbul ignore next */
          cov_1ixnmheckz().s[86]++;
          /* istanbul ignore next */
          yield fs.writeFile(defaultPath, JSON.stringify(results, null, 2));
          /* istanbul ignore next */
          cov_1ixnmheckz().s[87]++;
          console.log(`\n💾 Results saved to: ${path.relative(process.cwd(), defaultPath)}`);
        }
        /* istanbul ignore next */
        cov_1ixnmheckz().s[88]++;
        console.log('\n✅ Benchmark Complete!');
      } catch (error) {
        /* istanbul ignore next */
        cov_1ixnmheckz().s[89]++;
        console.error('❌ Benchmark failed:', error.message);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[90]++;
        process.exit(1);
      }
    })();
  }
  compare(args) {
    /* istanbul ignore next */
    return _asyncToGenerator(function* () {
      cov_1ixnmheckz().f[10]++;
      const [file1, file2] =
      /* istanbul ignore next */
      (cov_1ixnmheckz().s[91]++, args);
      cov_1ixnmheckz().s[92]++;
      if (
      /* istanbul ignore next */
      (cov_1ixnmheckz().b[16][0]++, !file1) ||
      /* istanbul ignore next */
      (cov_1ixnmheckz().b[16][1]++, !file2)) {
        /* istanbul ignore next */
        cov_1ixnmheckz().b[15][0]++;
        cov_1ixnmheckz().s[93]++;
        console.error('❌ Please provide two benchmark result files to compare');
        /* istanbul ignore next */
        cov_1ixnmheckz().s[94]++;
        console.log('Usage: ruv-swarm benchmark compare file1.json file2.json');
        /* istanbul ignore next */
        cov_1ixnmheckz().s[95]++;
        process.exit(1);
      } else
      /* istanbul ignore next */
      {
        cov_1ixnmheckz().b[15][1]++;
      }
      cov_1ixnmheckz().s[96]++;
      try {
        /* istanbul ignore next */
        cov_1ixnmheckz().s[97]++;
        console.log('📊 Benchmark Comparison\n');
        const results1 =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[98]++, JSON.parse(
        /* istanbul ignore next */
        yield fs.readFile(file1, 'utf-8')));
        const results2 =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[99]++, JSON.parse(
        /* istanbul ignore next */
        yield fs.readFile(file2, 'utf-8')));
        /* istanbul ignore next */
        cov_1ixnmheckz().s[100]++;
        console.log('Comparing:');
        /* istanbul ignore next */
        cov_1ixnmheckz().s[101]++;
        console.log(`  File 1: ${file1} (${results1.metadata.timestamp})`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[102]++;
        console.log(`  File 2: ${file2} (${results2.metadata.timestamp})`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[103]++;
        console.log('');

        // Compare overall scores
        const score1 =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[104]++,
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[17][0]++, results1.overallScore) ||
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[17][1]++, 0));
        const score2 =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[105]++,
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[18][0]++, results2.overallScore) ||
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[18][1]++, 0));
        const scoreDiff =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[106]++, score2 - score1);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[107]++;
        console.log('📈 Overall Performance:');
        /* istanbul ignore next */
        cov_1ixnmheckz().s[108]++;
        console.log(`  File 1: ${score1.toFixed(1)}%`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[109]++;
        console.log(`  File 2: ${score2.toFixed(1)}%`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[110]++;
        console.log(`  Change: ${scoreDiff > 0 ?
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[19][0]++, '+') :
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[19][1]++, '')}${scoreDiff.toFixed(1)}% ${scoreDiff > 0 ?
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[20][0]++, '📈') :
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[20][1]++, scoreDiff < 0 ?
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[21][0]++, '📉') :
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[21][1]++, '➡️'))}`);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[111]++;
        console.log('');

        // Compare individual benchmarks
        const benchmarks =
        /* istanbul ignore next */
        (cov_1ixnmheckz().s[112]++, new Set([...Object.keys(
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[22][0]++, results1.benchmarks) ||
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[22][1]++, {})), ...Object.keys(
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[23][0]++, results2.benchmarks) ||
        /* istanbul ignore next */
        (cov_1ixnmheckz().b[23][1]++, {}))]));
        /* istanbul ignore next */
        cov_1ixnmheckz().s[113]++;
        for (const benchmark of benchmarks) {
          /* istanbul ignore next */
          var _results1$benchmarks, _results2$benchmarks;
          const bench1 =
          /* istanbul ignore next */
          (cov_1ixnmheckz().s[114]++, (_results1$benchmarks = results1.benchmarks) === null || _results1$benchmarks === void 0 ? void 0 :
          /* istanbul ignore next */
          _results1$benchmarks[benchmark]);
          const bench2 =
          /* istanbul ignore next */
          (cov_1ixnmheckz().s[115]++, (_results2$benchmarks = results2.benchmarks) === null || _results2$benchmarks === void 0 ? void 0 :
          /* istanbul ignore next */
          _results2$benchmarks[benchmark]);
          /* istanbul ignore next */
          cov_1ixnmheckz().s[116]++;
          if (
          /* istanbul ignore next */
          (cov_1ixnmheckz().b[25][0]++, bench1) &&
          /* istanbul ignore next */
          (cov_1ixnmheckz().b[25][1]++, bench2)) {
            /* istanbul ignore next */
            cov_1ixnmheckz().b[24][0]++;
            cov_1ixnmheckz().s[117]++;
            console.log(`🔍 ${benchmark}:`);
            /* istanbul ignore next */
            cov_1ixnmheckz().s[118]++;
            if (
            /* istanbul ignore next */
            (cov_1ixnmheckz().b[27][0]++, bench1.average !== undefined) &&
            /* istanbul ignore next */
            (cov_1ixnmheckz().b[27][1]++, bench2.average !== undefined)) {
              /* istanbul ignore next */
              cov_1ixnmheckz().b[26][0]++;
              const diff =
              /* istanbul ignore next */
              (cov_1ixnmheckz().s[119]++, bench2.average - bench1.average);
              const percentChange =
              /* istanbul ignore next */
              (cov_1ixnmheckz().s[120]++, diff / bench1.average * 100);
              /* istanbul ignore next */
              cov_1ixnmheckz().s[121]++;
              console.log(`  Average: ${bench1.average.toFixed(1)}ms → ${bench2.average.toFixed(1)}ms (${percentChange > 0 ?
              /* istanbul ignore next */
              (cov_1ixnmheckz().b[28][0]++, '+') :
              /* istanbul ignore next */
              (cov_1ixnmheckz().b[28][1]++, '')}${percentChange.toFixed(1)}%)`);
            } else
            /* istanbul ignore next */
            {
              cov_1ixnmheckz().b[26][1]++;
            }
            cov_1ixnmheckz().s[122]++;
            if (
            /* istanbul ignore next */
            (cov_1ixnmheckz().b[30][0]++, bench1.status) &&
            /* istanbul ignore next */
            (cov_1ixnmheckz().b[30][1]++, bench2.status)) {
              /* istanbul ignore next */
              cov_1ixnmheckz().b[29][0]++;
              const statusChange =
              /* istanbul ignore next */
              (cov_1ixnmheckz().s[123]++, bench1.status === bench2.status ?
              /* istanbul ignore next */
              (cov_1ixnmheckz().b[31][0]++, '=') :
              /* istanbul ignore next */
              (cov_1ixnmheckz().b[31][1]++, bench1.status === 'PASS' ?
              /* istanbul ignore next */
              (cov_1ixnmheckz().b[32][0]++, '📉') :
              /* istanbul ignore next */
              (cov_1ixnmheckz().b[32][1]++, '📈')));
              /* istanbul ignore next */
              cov_1ixnmheckz().s[124]++;
              console.log(`  Status: ${bench1.status} → ${bench2.status} ${statusChange}`);
            } else
            /* istanbul ignore next */
            {
              cov_1ixnmheckz().b[29][1]++;
            }
            cov_1ixnmheckz().s[125]++;
            console.log('');
          } else
          /* istanbul ignore next */
          {
            cov_1ixnmheckz().b[24][1]++;
          }
        }

        // Recommendations
        /* istanbul ignore next */
        cov_1ixnmheckz().s[126]++;
        console.log('💡 Recommendations:');
        /* istanbul ignore next */
        cov_1ixnmheckz().s[127]++;
        if (scoreDiff > 5) {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[33][0]++;
          cov_1ixnmheckz().s[128]++;
          console.log('  ✅ Performance improved significantly');
        } else {
          /* istanbul ignore next */
          cov_1ixnmheckz().b[33][1]++;
          cov_1ixnmheckz().s[129]++;
          if (scoreDiff < -5) {
            /* istanbul ignore next */
            cov_1ixnmheckz().b[34][0]++;
            cov_1ixnmheckz().s[130]++;
            console.log('  ⚠️  Performance degraded - investigate recent changes');
          } else {
            /* istanbul ignore next */
            cov_1ixnmheckz().b[34][1]++;
            cov_1ixnmheckz().s[131]++;
            console.log('  ➡️  Performance is stable');
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1ixnmheckz().s[132]++;
        console.error('❌ Comparison failed:', error.message);
        /* istanbul ignore next */
        cov_1ixnmheckz().s[133]++;
        process.exit(1);
      }
    })();
  }
  getArg(args, flag) {
    /* istanbul ignore next */
    cov_1ixnmheckz().f[11]++;
    const index =
    /* istanbul ignore next */
    (cov_1ixnmheckz().s[134]++, args.indexOf(flag));
    /* istanbul ignore next */
    cov_1ixnmheckz().s[135]++;
    return /* istanbul ignore next */(cov_1ixnmheckz().b[36][0]++, index !== -1) &&
    /* istanbul ignore next */
    (cov_1ixnmheckz().b[36][1]++, index + 1 < args.length) ?
    /* istanbul ignore next */
    (cov_1ixnmheckz().b[35][0]++, args[index + 1]) :
    /* istanbul ignore next */
    (cov_1ixnmheckz().b[35][1]++, null);
  }
}
const benchmarkCLI =
/* istanbul ignore next */
(cov_1ixnmheckz().s[136]++, new BenchmarkCLI());
export { benchmarkCLI, BenchmarkCLI };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,