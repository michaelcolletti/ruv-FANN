4bf1b204b996432f18b5919154c7e997
/* istanbul ignore next */
function cov_1hneau4xw4() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/transformer.js";
  var hash = "c8ecfc1eecefda91f8b8eb766eb6f3ef7acdfab4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/transformer.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 22,
          column: 6
        }
      },
      "2": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 80
        }
      },
      "3": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "4": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "5": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 25
        }
      },
      "6": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "7": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "8": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "9": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 22
        }
      },
      "10": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "11": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "12": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "13": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 63,
          column: 6
        }
      },
      "14": {
        start: {
          line: 67,
          column: 17
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "15": {
        start: {
          line: 67,
          column: 40
        },
        end: {
          line: 67,
          column: 45
        }
      },
      "16": {
        start: {
          line: 68,
          column: 19
        },
        end: {
          line: 68,
          column: 41
        }
      },
      "17": {
        start: {
          line: 71,
          column: 18
        },
        end: {
          line: 71,
          column: 56
        }
      },
      "18": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "19": {
        start: {
          line: 72,
          column: 17
        },
        end: {
          line: 72,
          column: 18
        }
      },
      "20": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 50
        }
      },
      "21": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "22": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 80,
          column: 93
        }
      },
      "23": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "24": {
        start: {
          line: 82,
          column: 19
        },
        end: {
          line: 82,
          column: 20
        }
      },
      "25": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "26": {
        start: {
          line: 83,
          column: 19
        },
        end: {
          line: 83,
          column: 20
        }
      },
      "27": {
        start: {
          line: 84,
          column: 22
        },
        end: {
          line: 84,
          column: 93
        }
      },
      "28": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "29": {
        start: {
          line: 87,
          column: 10
        },
        end: {
          line: 87,
          column: 71
        }
      },
      "30": {
        start: {
          line: 89,
          column: 10
        },
        end: {
          line: 89,
          column: 71
        }
      },
      "31": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 20
        }
      },
      "32": {
        start: {
          line: 99,
          column: 22
        },
        end: {
          line: 99,
          column: 36
        }
      },
      "33": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 100,
          column: 41
        }
      },
      "34": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 38
        }
      },
      "35": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 54
        }
      },
      "36": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "37": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 51
        }
      },
      "38": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "39": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 114,
          column: 22
        }
      },
      "40": {
        start: {
          line: 116,
          column: 30
        },
        end: {
          line: 116,
          column: 79
        }
      },
      "41": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 79
        }
      },
      "42": {
        start: {
          line: 122,
          column: 23
        },
        end: {
          line: 122,
          column: 49
        }
      },
      "43": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 72
        }
      },
      "44": {
        start: {
          line: 129,
          column: 19
        },
        end: {
          line: 129,
          column: 43
        }
      },
      "45": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 18
        }
      },
      "46": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 68
        }
      },
      "47": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 36
        }
      },
      "48": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 137,
          column: 41
        }
      },
      "49": {
        start: {
          line: 140,
          column: 14
        },
        end: {
          line: 140,
          column: 47
        }
      },
      "50": {
        start: {
          line: 141,
          column: 14
        },
        end: {
          line: 141,
          column: 45
        }
      },
      "51": {
        start: {
          line: 142,
          column: 14
        },
        end: {
          line: 142,
          column: 47
        }
      },
      "52": {
        start: {
          line: 145,
          column: 19
        },
        end: {
          line: 145,
          column: 69
        }
      },
      "53": {
        start: {
          line: 146,
          column: 19
        },
        end: {
          line: 146,
          column: 69
        }
      },
      "54": {
        start: {
          line: 147,
          column: 19
        },
        end: {
          line: 147,
          column: 69
        }
      },
      "55": {
        start: {
          line: 150,
          column: 28
        },
        end: {
          line: 150,
          column: 109
        }
      },
      "56": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "57": {
        start: {
          line: 152,
          column: 17
        },
        end: {
          line: 152,
          column: 18
        }
      },
      "58": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "59": {
        start: {
          line: 153,
          column: 19
        },
        end: {
          line: 153,
          column: 20
        }
      },
      "60": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "61": {
        start: {
          line: 154,
          column: 21
        },
        end: {
          line: 154,
          column: 22
        }
      },
      "62": {
        start: {
          line: 155,
          column: 10
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "63": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 155,
          column: 24
        }
      },
      "64": {
        start: {
          line: 156,
          column: 24
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "65": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "66": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 159,
          column: 26
        }
      },
      "67": {
        start: {
          line: 160,
          column: 27
        },
        end: {
          line: 162,
          column: 52
        }
      },
      "68": {
        start: {
          line: 163,
          column: 27
        },
        end: {
          line: 165,
          column: 52
        }
      },
      "69": {
        start: {
          line: 167,
          column: 14
        },
        end: {
          line: 167,
          column: 51
        }
      },
      "70": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 51
        }
      },
      "71": {
        start: {
          line: 173,
          column: 29
        },
        end: {
          line: 175,
          column: 49
        }
      },
      "72": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 46
        }
      },
      "73": {
        start: {
          line: 183,
          column: 29
        },
        end: {
          line: 183,
          column: 74
        }
      },
      "74": {
        start: {
          line: 186,
          column: 27
        },
        end: {
          line: 186,
          column: 106
        }
      },
      "75": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 189,
          column: 89
        }
      },
      "76": {
        start: {
          line: 190,
          column: 19
        },
        end: {
          line: 190,
          column: 60
        }
      },
      "77": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "78": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 59
        }
      },
      "79": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 197,
          column: 18
        }
      },
      "80": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 55
        }
      },
      "81": {
        start: {
          line: 204,
          column: 17
        },
        end: {
          line: 204,
          column: 47
        }
      },
      "82": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 205,
          column: 46
        }
      },
      "83": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 208,
          column: 31
        }
      },
      "84": {
        start: {
          line: 211,
          column: 17
        },
        end: {
          line: 211,
          column: 48
        }
      },
      "85": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 46
        }
      },
      "86": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 18
        }
      },
      "87": {
        start: {
          line: 218,
          column: 18
        },
        end: {
          line: 218,
          column: 29
        }
      },
      "88": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 43
        }
      },
      "89": {
        start: {
          line: 220,
          column: 23
        },
        end: {
          line: 220,
          column: 53
        }
      },
      "90": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "91": {
        start: {
          line: 223,
          column: 17
        },
        end: {
          line: 223,
          column: 18
        }
      },
      "92": {
        start: {
          line: 224,
          column: 17
        },
        end: {
          line: 224,
          column: 18
        }
      },
      "93": {
        start: {
          line: 225,
          column: 21
        },
        end: {
          line: 225,
          column: 22
        }
      },
      "94": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 230,
          column: 7
        }
      },
      "95": {
        start: {
          line: 228,
          column: 19
        },
        end: {
          line: 228,
          column: 20
        }
      },
      "96": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 39
        }
      },
      "97": {
        start: {
          line: 231,
          column: 6
        },
        end: {
          line: 231,
          column: 22
        }
      },
      "98": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 237,
          column: 7
        }
      },
      "99": {
        start: {
          line: 234,
          column: 19
        },
        end: {
          line: 234,
          column: 20
        }
      },
      "100": {
        start: {
          line: 235,
          column: 21
        },
        end: {
          line: 235,
          column: 50
        }
      },
      "101": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 32
        }
      },
      "102": {
        start: {
          line: 238,
          column: 6
        },
        end: {
          line: 238,
          column: 26
        }
      },
      "103": {
        start: {
          line: 241,
          column: 18
        },
        end: {
          line: 241,
          column: 44
        }
      },
      "104": {
        start: {
          line: 242,
          column: 6
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "105": {
        start: {
          line: 242,
          column: 19
        },
        end: {
          line: 242,
          column: 20
        }
      },
      "106": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 35
        }
      },
      "107": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 97
        }
      },
      "108": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 29
        }
      },
      "109": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 249,
          column: 22
        }
      },
      "110": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 15
        }
      },
      "111": {
        start: {
          line: 261,
          column: 28
        },
        end: {
          line: 261,
          column: 30
        }
      },
      "112": {
        start: {
          line: 264,
          column: 23
        },
        end: {
          line: 264,
          column: 78
        }
      },
      "113": {
        start: {
          line: 265,
          column: 22
        },
        end: {
          line: 265,
          column: 55
        }
      },
      "114": {
        start: {
          line: 266,
          column: 20
        },
        end: {
          line: 266,
          column: 50
        }
      },
      "115": {
        start: {
          line: 268,
          column: 21
        },
        end: {
          line: 268,
          column: 22
        }
      },
      "116": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "117": {
        start: {
          line: 270,
          column: 21
        },
        end: {
          line: 270,
          column: 22
        }
      },
      "118": {
        start: {
          line: 271,
          column: 22
        },
        end: {
          line: 271,
          column: 23
        }
      },
      "119": {
        start: {
          line: 272,
          column: 23
        },
        end: {
          line: 272,
          column: 24
        }
      },
      "120": {
        start: {
          line: 275,
          column: 23
        },
        end: {
          line: 275,
          column: 46
        }
      },
      "121": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 296,
          column: 7
        }
      },
      "122": {
        start: {
          line: 278,
          column: 19
        },
        end: {
          line: 278,
          column: 20
        }
      },
      "123": {
        start: {
          line: 279,
          column: 22
        },
        end: {
          line: 279,
          column: 81
        }
      },
      "124": {
        start: {
          line: 282,
          column: 26
        },
        end: {
          line: 282,
          column: 93
        }
      },
      "125": {
        start: {
          line: 285,
          column: 28
        },
        end: {
          line: 285,
          column: 66
        }
      },
      "126": {
        start: {
          line: 288,
          column: 21
        },
        end: {
          line: 288,
          column: 70
        }
      },
      "127": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 26
        }
      },
      "128": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 45
        }
      },
      "129": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 21
        }
      },
      "130": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 21
        }
      },
      "131": {
        start: {
          line: 299,
          column: 22
        },
        end: {
          line: 299,
          column: 50
        }
      },
      "132": {
        start: {
          line: 301,
          column: 27
        },
        end: {
          line: 301,
          column: 49
        }
      },
      "133": {
        start: {
          line: 302,
          column: 6
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "134": {
        start: {
          line: 309,
          column: 6
        },
        end: {
          line: 309,
          column: 124
        }
      },
      "135": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 316,
          column: 6
        }
      },
      "136": {
        start: {
          line: 321,
          column: 17
        },
        end: {
          line: 321,
          column: 32
        }
      },
      "137": {
        start: {
          line: 322,
          column: 17
        },
        end: {
          line: 322,
          column: 51
        }
      },
      "138": {
        start: {
          line: 323,
          column: 15
        },
        end: {
          line: 323,
          column: 80
        }
      },
      "139": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 324,
          column: 14
        }
      },
      "140": {
        start: {
          line: 330,
          column: 21
        },
        end: {
          line: 330,
          column: 109
        }
      },
      "141": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 342,
          column: 5
        }
      },
      "142": {
        start: {
          line: 332,
          column: 17
        },
        end: {
          line: 332,
          column: 18
        }
      },
      "143": {
        start: {
          line: 333,
          column: 6
        },
        end: {
          line: 341,
          column: 7
        }
      },
      "144": {
        start: {
          line: 333,
          column: 19
        },
        end: {
          line: 333,
          column: 20
        }
      },
      "145": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "146": {
        start: {
          line: 334,
          column: 21
        },
        end: {
          line: 334,
          column: 22
        }
      },
      "147": {
        start: {
          line: 335,
          column: 22
        },
        end: {
          line: 336,
          column: 51
        }
      },
      "148": {
        start: {
          line: 338,
          column: 10
        },
        end: {
          line: 339,
          column: 82
        }
      },
      "149": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 92
        }
      },
      "150": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 345,
          column: 20
        }
      },
      "151": {
        start: {
          line: 349,
          column: 19
        },
        end: {
          line: 349,
          column: 54
        }
      },
      "152": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 361,
          column: 5
        }
      },
      "153": {
        start: {
          line: 351,
          column: 17
        },
        end: {
          line: 351,
          column: 18
        }
      },
      "154": {
        start: {
          line: 352,
          column: 6
        },
        end: {
          line: 360,
          column: 7
        }
      },
      "155": {
        start: {
          line: 352,
          column: 19
        },
        end: {
          line: 352,
          column: 20
        }
      },
      "156": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "157": {
        start: {
          line: 353,
          column: 21
        },
        end: {
          line: 353,
          column: 22
        }
      },
      "158": {
        start: {
          line: 354,
          column: 25
        },
        end: {
          line: 355,
          column: 54
        }
      },
      "159": {
        start: {
          line: 356,
          column: 25
        },
        end: {
          line: 356,
          column: 55
        }
      },
      "160": {
        start: {
          line: 358,
          column: 10
        },
        end: {
          line: 358,
          column: 80
        }
      },
      "161": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 363,
          column: 36
        }
      },
      "162": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 364,
          column: 18
        }
      },
      "163": {
        start: {
          line: 369,
          column: 21
        },
        end: {
          line: 369,
          column: 52
        }
      },
      "164": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "165": {
        start: {
          line: 371,
          column: 17
        },
        end: {
          line: 371,
          column: 18
        }
      },
      "166": {
        start: {
          line: 372,
          column: 6
        },
        end: {
          line: 385,
          column: 7
        }
      },
      "167": {
        start: {
          line: 372,
          column: 19
        },
        end: {
          line: 372,
          column: 20
        }
      },
      "168": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "169": {
        start: {
          line: 373,
          column: 21
        },
        end: {
          line: 373,
          column: 22
        }
      },
      "170": {
        start: {
          line: 374,
          column: 10
        },
        end: {
          line: 383,
          column: 11
        }
      },
      "171": {
        start: {
          line: 374,
          column: 23
        },
        end: {
          line: 374,
          column: 24
        }
      },
      "172": {
        start: {
          line: 375,
          column: 27
        },
        end: {
          line: 377,
          column: 52
        }
      },
      "173": {
        start: {
          line: 378,
          column: 27
        },
        end: {
          line: 380,
          column: 52
        }
      },
      "174": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 46
        }
      },
      "175": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 388,
          column: 20
        }
      },
      "176": {
        start: {
          line: 393,
          column: 25
        },
        end: {
          line: 393,
          column: 94
        }
      },
      "177": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 410,
          column: 5
        }
      },
      "178": {
        start: {
          line: 395,
          column: 17
        },
        end: {
          line: 395,
          column: 18
        }
      },
      "179": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 409,
          column: 7
        }
      },
      "180": {
        start: {
          line: 396,
          column: 19
        },
        end: {
          line: 396,
          column: 20
        }
      },
      "181": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "182": {
        start: {
          line: 397,
          column: 21
        },
        end: {
          line: 397,
          column: 22
        }
      },
      "183": {
        start: {
          line: 398,
          column: 10
        },
        end: {
          line: 407,
          column: 11
        }
      },
      "184": {
        start: {
          line: 398,
          column: 23
        },
        end: {
          line: 398,
          column: 24
        }
      },
      "185": {
        start: {
          line: 399,
          column: 27
        },
        end: {
          line: 401,
          column: 52
        }
      },
      "186": {
        start: {
          line: 402,
          column: 27
        },
        end: {
          line: 404,
          column: 52
        }
      },
      "187": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 406,
          column: 50
        }
      },
      "188": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 412,
          column: 77
        }
      },
      "189": {
        start: {
          line: 413,
          column: 4
        },
        end: {
          line: 413,
          column: 24
        }
      },
      "190": {
        start: {
          line: 417,
          column: 26
        },
        end: {
          line: 417,
          column: 57
        }
      },
      "191": {
        start: {
          line: 420,
          column: 19
        },
        end: {
          line: 420,
          column: 33
        }
      },
      "192": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 441,
          column: 5
        }
      },
      "193": {
        start: {
          line: 422,
          column: 17
        },
        end: {
          line: 422,
          column: 18
        }
      },
      "194": {
        start: {
          line: 423,
          column: 21
        },
        end: {
          line: 423,
          column: 30
        }
      },
      "195": {
        start: {
          line: 426,
          column: 6
        },
        end: {
          line: 428,
          column: 7
        }
      },
      "196": {
        start: {
          line: 426,
          column: 19
        },
        end: {
          line: 426,
          column: 20
        }
      },
      "197": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 53
        }
      },
      "198": {
        start: {
          line: 431,
          column: 19
        },
        end: {
          line: 431,
          column: 20
        }
      },
      "199": {
        start: {
          line: 432,
          column: 6
        },
        end: {
          line: 435,
          column: 7
        }
      },
      "200": {
        start: {
          line: 432,
          column: 19
        },
        end: {
          line: 432,
          column: 20
        }
      },
      "201": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 66
        }
      },
      "202": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 39
        }
      },
      "203": {
        start: {
          line: 438,
          column: 6
        },
        end: {
          line: 440,
          column: 7
        }
      },
      "204": {
        start: {
          line: 438,
          column: 19
        },
        end: {
          line: 438,
          column: 20
        }
      },
      "205": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 39
        }
      },
      "206": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 443,
          column: 25
        }
      },
      "207": {
        start: {
          line: 447,
          column: 19
        },
        end: {
          line: 447,
          column: 104
        }
      },
      "208": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 473,
          column: 5
        }
      },
      "209": {
        start: {
          line: 449,
          column: 17
        },
        end: {
          line: 449,
          column: 18
        }
      },
      "210": {
        start: {
          line: 450,
          column: 6
        },
        end: {
          line: 472,
          column: 7
        }
      },
      "211": {
        start: {
          line: 450,
          column: 19
        },
        end: {
          line: 450,
          column: 20
        }
      },
      "212": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "213": {
        start: {
          line: 451,
          column: 21
        },
        end: {
          line: 451,
          column: 22
        }
      },
      "214": {
        start: {
          line: 452,
          column: 10
        },
        end: {
          line: 470,
          column: 11
        }
      },
      "215": {
        start: {
          line: 452,
          column: 23
        },
        end: {
          line: 452,
          column: 24
        }
      },
      "216": {
        start: {
          line: 453,
          column: 22
        },
        end: {
          line: 453,
          column: 23
        }
      },
      "217": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 464,
          column: 13
        }
      },
      "218": {
        start: {
          line: 455,
          column: 25
        },
        end: {
          line: 455,
          column: 26
        }
      },
      "219": {
        start: {
          line: 456,
          column: 32
        },
        end: {
          line: 458,
          column: 53
        }
      },
      "220": {
        start: {
          line: 459,
          column: 31
        },
        end: {
          line: 461,
          column: 56
        }
      },
      "221": {
        start: {
          line: 463,
          column: 14
        },
        end: {
          line: 463,
          column: 59
        }
      },
      "222": {
        start: {
          line: 466,
          column: 27
        },
        end: {
          line: 468,
          column: 52
        }
      },
      "223": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 469,
          column: 33
        }
      },
      "224": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 475,
          column: 18
        }
      },
      "225": {
        start: {
          line: 480,
          column: 4
        },
        end: {
          line: 480,
          column: 61
        }
      },
      "226": {
        start: {
          line: 484,
          column: 4
        },
        end: {
          line: 488,
          column: 6
        }
      },
      "227": {
        start: {
          line: 492,
          column: 16
        },
        end: {
          line: 492,
          column: 17
        }
      },
      "228": {
        start: {
          line: 495,
          column: 4
        },
        end: {
          line: 497,
          column: 5
        }
      },
      "229": {
        start: {
          line: 495,
          column: 21
        },
        end: {
          line: 495,
          column: 22
        }
      },
      "230": {
        start: {
          line: 496,
          column: 6
        },
        end: {
          line: 496,
          column: 67
        }
      },
      "231": {
        start: {
          line: 500,
          column: 4
        },
        end: {
          line: 503,
          column: 6
        }
      },
      "232": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 506,
          column: 61
        }
      },
      "233": {
        start: {
          line: 509,
          column: 4
        },
        end: {
          line: 509,
          column: 94
        }
      },
      "234": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 511,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        loc: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 64,
            column: 3
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 66,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        loc: {
          start: {
            line: 66,
            column: 22
          },
          end: {
            line: 77,
            column: 3
          }
        },
        line: 66
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 67,
            column: 31
          }
        },
        loc: {
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 67,
            column: 45
          }
        },
        line: 67
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 79,
            column: 2
          },
          end: {
            line: 79,
            column: 3
          }
        },
        loc: {
          start: {
            line: 79,
            column: 29
          },
          end: {
            line: 95,
            column: 3
          }
        },
        line: 79
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 97,
            column: 3
          }
        },
        loc: {
          start: {
            line: 97,
            column: 41
          },
          end: {
            line: 132,
            column: 3
          }
        },
        line: 97
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 134,
            column: 3
          }
        },
        loc: {
          start: {
            line: 134,
            column: 64
          },
          end: {
            line: 198,
            column: 3
          }
        },
        line: 134
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 200,
            column: 2
          },
          end: {
            line: 200,
            column: 3
          }
        },
        loc: {
          start: {
            line: 200,
            column: 33
          },
          end: {
            line: 215,
            column: 3
          }
        },
        line: 200
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 217,
            column: 2
          },
          end: {
            line: 217,
            column: 3
          }
        },
        loc: {
          start: {
            line: 217,
            column: 31
          },
          end: {
            line: 250,
            column: 3
          }
        },
        line: 217
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 252,
            column: 2
          },
          end: {
            line: 252,
            column: 3
          }
        },
        loc: {
          start: {
            line: 252,
            column: 42
          },
          end: {
            line: 317,
            column: 3
          }
        },
        line: 252
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 319,
            column: 2
          },
          end: {
            line: 319,
            column: 3
          }
        },
        loc: {
          start: {
            line: 319,
            column: 53
          },
          end: {
            line: 325,
            column: 3
          }
        },
        line: 319
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 328,
            column: 2
          },
          end: {
            line: 328,
            column: 3
          }
        },
        loc: {
          start: {
            line: 328,
            column: 31
          },
          end: {
            line: 346,
            column: 3
          }
        },
        line: 328
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 348,
            column: 2
          },
          end: {
            line: 348,
            column: 3
          }
        },
        loc: {
          start: {
            line: 348,
            column: 52
          },
          end: {
            line: 365,
            column: 3
          }
        },
        line: 348
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 367,
            column: 3
          }
        },
        loc: {
          start: {
            line: 367,
            column: 53
          },
          end: {
            line: 389,
            column: 3
          }
        },
        line: 367
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 391,
            column: 2
          },
          end: {
            line: 391,
            column: 3
          }
        },
        loc: {
          start: {
            line: 391,
            column: 54
          },
          end: {
            line: 414,
            column: 3
          }
        },
        line: 391
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 416,
            column: 2
          },
          end: {
            line: 416,
            column: 3
          }
        },
        loc: {
          start: {
            line: 416,
            column: 34
          },
          end: {
            line: 444,
            column: 3
          }
        },
        line: 416
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 446,
            column: 2
          },
          end: {
            line: 446,
            column: 3
          }
        },
        loc: {
          start: {
            line: 446,
            column: 68
          },
          end: {
            line: 476,
            column: 3
          }
        },
        line: 446
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 478,
            column: 2
          },
          end: {
            line: 478,
            column: 3
          }
        },
        loc: {
          start: {
            line: 478,
            column: 26
          },
          end: {
            line: 481,
            column: 3
          }
        },
        line: 478
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 483,
            column: 2
          },
          end: {
            line: 483,
            column: 3
          }
        },
        loc: {
          start: {
            line: 483,
            column: 14
          },
          end: {
            line: 489,
            column: 3
          }
        },
        line: 483
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 491,
            column: 2
          },
          end: {
            line: 491,
            column: 3
          }
        },
        loc: {
          start: {
            line: 491,
            column: 20
          },
          end: {
            line: 512,
            column: 3
          }
        },
        line: 491
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 14
          },
          end: {
            line: 9,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 25
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 35
          }
        }, {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 14,
            column: 42
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 25
          }
        }, {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 15,
            column: 30
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 16,
            column: 27
          }
        }, {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 20
          },
          end: {
            line: 17,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 20
          },
          end: {
            line: 17,
            column: 39
          }
        }, {
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 17,
            column: 47
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 49
          }
        }, {
          start: {
            line: 18,
            column: 53
          },
          end: {
            line: 18,
            column: 57
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 43
          }
        }, {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 19,
            column: 52
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 37
          }
        }, {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 20,
            column: 44
          }
        }],
        line: 20
      },
      "8": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: 88,
            column: 15
          },
          end: {
            line: 90,
            column: 9
          }
        }],
        line: 86
      },
      "9": {
        loc: {
          start: {
            line: 97,
            column: 23
          },
          end: {
            line: 97,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 97,
            column: 34
          },
          end: {
            line: 97,
            column: 39
          }
        }],
        line: 97
      },
      "10": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "11": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 109,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 109,
            column: 16
          }
        }, {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 109,
            column: 47
          }
        }],
        line: 109
      },
      "12": {
        loc: {
          start: {
            line: 134,
            column: 46
          },
          end: {
            line: 134,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 57
          },
          end: {
            line: 134,
            column: 62
          }
        }],
        line: 134
      },
      "13": {
        loc: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "14": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 16
          }
        }, {
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 47
          }
        }],
        line: 193
      },
      "15": {
        loc: {
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 252,
            column: 38
          },
          end: {
            line: 252,
            column: 40
          }
        }],
        line: 252
      },
      "16": {
        loc: {
          start: {
            line: 254,
            column: 6
          },
          end: {
            line: 254,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 254,
            column: 17
          }
        }],
        line: 254
      },
      "17": {
        loc: {
          start: {
            line: 255,
            column: 6
          },
          end: {
            line: 255,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 255,
            column: 18
          },
          end: {
            line: 255,
            column: 20
          }
        }],
        line: 255
      },
      "18": {
        loc: {
          start: {
            line: 256,
            column: 6
          },
          end: {
            line: 256,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 256,
            column: 21
          },
          end: {
            line: 256,
            column: 26
          }
        }],
        line: 256
      },
      "19": {
        loc: {
          start: {
            line: 257,
            column: 6
          },
          end: {
            line: 257,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 257,
            column: 20
          },
          end: {
            line: 257,
            column: 24
          }
        }],
        line: 257
      },
      "20": {
        loc: {
          start: {
            line: 258,
            column: 6
          },
          end: {
            line: 258,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 258,
            column: 27
          }
        }],
        line: 258
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c8ecfc1eecefda91f8b8eb766eb6f3ef7acdfab4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hneau4xw4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hneau4xw4();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Transformer Neural Network Model
 * Implements multi-head attention mechanism with positional encoding
 */

import { NeuralModel } from './base.js';
class TransformerModel extends NeuralModel {
  constructor(config =
  /* istanbul ignore next */
  (cov_1hneau4xw4().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[0]++;
    cov_1hneau4xw4().s[0]++;
    super('transformer');

    // Transformer configuration
    /* istanbul ignore next */
    cov_1hneau4xw4().s[1]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread({
      dimensions:
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[1][0]++, config.dimensions) ||
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[1][1]++, 512),
      heads:
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[2][0]++, config.heads) ||
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[2][1]++, 8),
      layers:
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[3][0]++, config.layers) ||
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[3][1]++, 6),
      ffDimensions:
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[4][0]++, config.ffDimensions) ||
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[4][1]++, 2048),
      maxSequenceLength:
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[5][0]++, config.maxSequenceLength) ||
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[5][1]++, 1024),
      vocabularySize:
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[6][0]++, config.vocabularySize) ||
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[6][1]++, 50000),
      dropoutRate:
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[7][0]++, config.dropoutRate) ||
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[7][1]++, 0.1)
    }, config);

    // Initialize components
    /* istanbul ignore next */
    cov_1hneau4xw4().s[2]++;
    this.headDimension = Math.floor(this.config.dimensions / this.config.heads);
    /* istanbul ignore next */
    cov_1hneau4xw4().s[3]++;
    this.positionalEncoding = this.createPositionalEncoding();
    /* istanbul ignore next */
    cov_1hneau4xw4().s[4]++;
    this.attentionWeights = new Map();
    /* istanbul ignore next */
    cov_1hneau4xw4().s[5]++;
    this.layerNorms = [];
    /* istanbul ignore next */
    cov_1hneau4xw4().s[6]++;
    this.feedForwardWeights = [];
    /* istanbul ignore next */
    cov_1hneau4xw4().s[7]++;
    this.initializeWeights();
  }
  initializeWeights() {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[1]++;
    cov_1hneau4xw4().s[8]++;
    // Initialize multi-head attention weights for each layer
    for (let layer =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[9]++, 0); layer < this.config.layers; layer++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[10]++;
      this.attentionWeights.set(`layer_${layer}`, {
        query: this.createWeight([this.config.dimensions, this.config.dimensions]),
        key: this.createWeight([this.config.dimensions, this.config.dimensions]),
        value: this.createWeight([this.config.dimensions, this.config.dimensions]),
        output: this.createWeight([this.config.dimensions, this.config.dimensions])
      });

      // Layer normalization parameters
      /* istanbul ignore next */
      cov_1hneau4xw4().s[11]++;
      this.layerNorms.push({
        gamma: new Float32Array(this.config.dimensions).fill(1.0),
        beta: new Float32Array(this.config.dimensions).fill(0.0)
      });

      // Feed-forward network weights
      /* istanbul ignore next */
      cov_1hneau4xw4().s[12]++;
      this.feedForwardWeights.push({
        w1: this.createWeight([this.config.dimensions, this.config.ffDimensions]),
        b1: new Float32Array(this.config.ffDimensions).fill(0.0),
        w2: this.createWeight([this.config.ffDimensions, this.config.dimensions]),
        b2: new Float32Array(this.config.dimensions).fill(0.0)
      });
    }

    // Output layer weights
    /* istanbul ignore next */
    cov_1hneau4xw4().s[13]++;
    this.outputWeights = {
      projection: this.createWeight([this.config.dimensions, this.config.vocabularySize]),
      bias: new Float32Array(this.config.vocabularySize).fill(0.0)
    };
  }
  createWeight(shape) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[2]++;
    const size =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[14]++, shape.reduce((a, b) => {
      /* istanbul ignore next */
      cov_1hneau4xw4().f[3]++;
      cov_1hneau4xw4().s[15]++;
      return a * b;
    }, 1));
    const weight =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[16]++, new Float32Array(size));

    // Xavier/Glorot initialization
    const scale =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[17]++, Math.sqrt(2.0 / (shape[0] + shape[1])));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[18]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[19]++, 0); i < size; i++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[20]++;
      weight[i] = (Math.random() * 2 - 1) * scale;
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[21]++;
    return weight;
  }
  createPositionalEncoding() {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[4]++;
    const encoding =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[22]++, new Float32Array(this.config.maxSequenceLength * this.config.dimensions));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[23]++;
    for (let pos =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[24]++, 0); pos < this.config.maxSequenceLength; pos++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[25]++;
      for (let i =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[26]++, 0); i < this.config.dimensions; i++) {
        const angle =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[27]++, pos / Math.pow(10000, 2 * Math.floor(i / 2) / this.config.dimensions));
        /* istanbul ignore next */
        cov_1hneau4xw4().s[28]++;
        if (i % 2 === 0) {
          /* istanbul ignore next */
          cov_1hneau4xw4().b[8][0]++;
          cov_1hneau4xw4().s[29]++;
          encoding[pos * this.config.dimensions + i] = Math.sin(angle);
        } else {
          /* istanbul ignore next */
          cov_1hneau4xw4().b[8][1]++;
          cov_1hneau4xw4().s[30]++;
          encoding[pos * this.config.dimensions + i] = Math.cos(angle);
        }
      }
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[31]++;
    return encoding;
  }
  forward(
  /* istanbul ignore next */
  _x) {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* (input, training =
    /* istanbul ignore next */
    (cov_1hneau4xw4().b[9][0]++, false)) {
      cov_1hneau4xw4().f[5]++;
      // Input should be token indices [batch_size, sequence_length]
      const batchSize =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[32]++, input.shape[0]);
      const sequenceLength =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[33]++, input.shape[1]);

      // Token embedding (simplified - in practice would use embedding layer)
      let x =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[34]++, _this.tokenEmbedding(input));

      // Add positional encoding
      cov_1hneau4xw4().s[35]++;
      x = _this.addPositionalEncoding(x, sequenceLength);

      // Apply dropout if training
      cov_1hneau4xw4().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[11][0]++, training) &&
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[11][1]++, _this.config.dropoutRate > 0)) {
        /* istanbul ignore next */
        cov_1hneau4xw4().b[10][0]++;
        cov_1hneau4xw4().s[37]++;
        x = _this.dropout(x, _this.config.dropoutRate);
      } else
      /* istanbul ignore next */
      {
        cov_1hneau4xw4().b[10][1]++;
      }

      // Process through transformer layers
      cov_1hneau4xw4().s[38]++;
      for (let layer =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[39]++, 0); layer < _this.config.layers; layer++) {
        // Multi-head self-attention
        const attentionOutput =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[40]++, yield _this.multiHeadAttention(x, layer, training));

        // Add & Norm
        /* istanbul ignore next */
        cov_1hneau4xw4().s[41]++;
        x = _this.layerNorm(_this.add(x, attentionOutput), _this.layerNorms[layer]);

        // Feed-forward network
        const ffOutput =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[42]++, _this.feedForward(x, layer));

        // Add & Norm
        /* istanbul ignore next */
        cov_1hneau4xw4().s[43]++;
        x = _this.layerNorm(_this.add(x, ffOutput), _this.layerNorms[layer]);
      }

      // Final output projection
      const output =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[44]++, _this.outputProjection(x));
      cov_1hneau4xw4().s[45]++;
      return output;
    }).apply(this, arguments);
  }
  multiHeadAttention(
  /* istanbul ignore next */
  _x2,
  /* istanbul ignore next */
  _x3) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* (input, layerIndex, training =
    /* istanbul ignore next */
    (cov_1hneau4xw4().b[12][0]++, false)) {
      cov_1hneau4xw4().f[6]++;
      const weights =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[46]++, _this2.attentionWeights.get(`layer_${layerIndex}`));
      const batchSize =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[47]++, input.shape[0]);
      const sequenceLength =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[48]++, input.shape[1]);

      // Linear projections for Q, K, V
      const Q =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[49]++, _this2.matmul(input, weights.query));
      const K =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[50]++, _this2.matmul(input, weights.key));
      const V =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[51]++, _this2.matmul(input, weights.value));

      // Reshape for multi-head attention
      const QHeads =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[52]++, _this2.reshapeForHeads(Q, batchSize, sequenceLength));
      const KHeads =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[53]++, _this2.reshapeForHeads(K, batchSize, sequenceLength));
      const VHeads =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[54]++, _this2.reshapeForHeads(V, batchSize, sequenceLength));

      // Scaled dot-product attention for each head
      const attentionScores =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[55]++, new Float32Array(batchSize * _this2.config.heads * sequenceLength * sequenceLength));
      cov_1hneau4xw4().s[56]++;
      for (let b =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[57]++, 0); b < batchSize; b++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[58]++;
        for (let h =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[59]++, 0); h < _this2.config.heads; h++) {
          /* istanbul ignore next */
          cov_1hneau4xw4().s[60]++;
          for (let i =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[61]++, 0); i < sequenceLength; i++) {
            /* istanbul ignore next */
            cov_1hneau4xw4().s[62]++;
            for (let j =
            /* istanbul ignore next */
            (cov_1hneau4xw4().s[63]++, 0); j < sequenceLength; j++) {
              let score =
              /* istanbul ignore next */
              (cov_1hneau4xw4().s[64]++, 0);

              // Compute dot product
              /* istanbul ignore next */
              cov_1hneau4xw4().s[65]++;
              for (let d =
              /* istanbul ignore next */
              (cov_1hneau4xw4().s[66]++, 0); d < _this2.headDimension; d++) {
                const qIdx =
                /* istanbul ignore next */
                (cov_1hneau4xw4().s[67]++, b * _this2.config.heads * sequenceLength * _this2.headDimension + h * sequenceLength * _this2.headDimension + i * _this2.headDimension + d);
                const kIdx =
                /* istanbul ignore next */
                (cov_1hneau4xw4().s[68]++, b * _this2.config.heads * sequenceLength * _this2.headDimension + h * sequenceLength * _this2.headDimension + j * _this2.headDimension + d);
                /* istanbul ignore next */
                cov_1hneau4xw4().s[69]++;
                score += QHeads[qIdx] * KHeads[kIdx];
              }

              // Scale by sqrt(d_k)
              /* istanbul ignore next */
              cov_1hneau4xw4().s[70]++;
              score /= Math.sqrt(_this2.headDimension);
              const scoreIdx =
              /* istanbul ignore next */
              (cov_1hneau4xw4().s[71]++, b * _this2.config.heads * sequenceLength * sequenceLength + h * sequenceLength * sequenceLength + i * sequenceLength + j);
              /* istanbul ignore next */
              cov_1hneau4xw4().s[72]++;
              attentionScores[scoreIdx] = score;
            }
          }
        }
      }

      // Apply softmax
      const attentionWeights =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[73]++, _this2.softmax(attentionScores, sequenceLength));

      // Apply attention weights to values
      const attendedValues =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[74]++, _this2.applyAttentionWeights(attentionWeights, VHeads, batchSize, sequenceLength));

      // Concatenate heads and project
      const concatenated =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[75]++, _this2.concatenateHeads(attendedValues, batchSize, sequenceLength));
      const output =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[76]++, _this2.matmul(concatenated, weights.output));

      // Apply dropout if training
      cov_1hneau4xw4().s[77]++;
      if (
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[14][0]++, training) &&
      /* istanbul ignore next */
      (cov_1hneau4xw4().b[14][1]++, _this2.config.dropoutRate > 0)) {
        /* istanbul ignore next */
        cov_1hneau4xw4().b[13][0]++;
        cov_1hneau4xw4().s[78]++;
        return _this2.dropout(output, _this2.config.dropoutRate);
      } else
      /* istanbul ignore next */
      {
        cov_1hneau4xw4().b[13][1]++;
      }
      cov_1hneau4xw4().s[79]++;
      return output;
    }).apply(this, arguments);
  }
  feedForward(input, layerIndex) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[7]++;
    const weights =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[80]++, this.feedForwardWeights[layerIndex]);

    // First linear transformation
    let hidden =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[81]++, this.matmul(input, weights.w1));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[82]++;
    hidden = this.addBias(hidden, weights.b1);

    // ReLU activation
    /* istanbul ignore next */
    cov_1hneau4xw4().s[83]++;
    hidden = this.relu(hidden);

    // Second linear transformation
    let output =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[84]++, this.matmul(hidden, weights.w2));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[85]++;
    output = this.addBias(output, weights.b2);
    /* istanbul ignore next */
    cov_1hneau4xw4().s[86]++;
    return output;
  }
  layerNorm(input, normParams) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[8]++;
    const shape =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[87]++, input.shape);
    const lastDim =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[88]++, shape[shape.length - 1]);
    const normalized =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[89]++, new Float32Array(input.length));

    // Compute mean and variance for each position
    /* istanbul ignore next */
    cov_1hneau4xw4().s[90]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[91]++, 0); i < input.length / lastDim; i++) {
      let mean =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[92]++, 0);
      let variance =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[93]++, 0);

      // Calculate mean
      /* istanbul ignore next */
      cov_1hneau4xw4().s[94]++;
      for (let j =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[95]++, 0); j < lastDim; j++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[96]++;
        mean += input[i * lastDim + j];
      }
      /* istanbul ignore next */
      cov_1hneau4xw4().s[97]++;
      mean /= lastDim;

      // Calculate variance
      /* istanbul ignore next */
      cov_1hneau4xw4().s[98]++;
      for (let j =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[99]++, 0); j < lastDim; j++) {
        const diff =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[100]++, input[i * lastDim + j] - mean);
        /* istanbul ignore next */
        cov_1hneau4xw4().s[101]++;
        variance += diff * diff;
      }
      /* istanbul ignore next */
      cov_1hneau4xw4().s[102]++;
      variance /= lastDim;

      // Normalize and apply scale/shift
      const std =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[103]++, Math.sqrt(variance + 1e-5));
      /* istanbul ignore next */
      cov_1hneau4xw4().s[104]++;
      for (let j =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[105]++, 0); j < lastDim; j++) {
        const idx =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[106]++, i * lastDim + j);
        /* istanbul ignore next */
        cov_1hneau4xw4().s[107]++;
        normalized[idx] = normParams.gamma[j] * ((input[idx] - mean) / std) + normParams.beta[j];
      }
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[108]++;
    normalized.shape = shape;
    /* istanbul ignore next */
    cov_1hneau4xw4().s[109]++;
    return normalized;
  }
  train(
  /* istanbul ignore next */
  _x4) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* (trainingData, options =
    /* istanbul ignore next */
    (cov_1hneau4xw4().b[15][0]++, {})) {
      cov_1hneau4xw4().f[9]++;
      const {
        epochs =
        /* istanbul ignore next */
        (cov_1hneau4xw4().b[16][0]++, 10),
        batchSize =
        /* istanbul ignore next */
        (cov_1hneau4xw4().b[17][0]++, 32),
        learningRate =
        /* istanbul ignore next */
        (cov_1hneau4xw4().b[18][0]++, 0.001),
        warmupSteps =
        /* istanbul ignore next */
        (cov_1hneau4xw4().b[19][0]++, 4000),
        validationSplit =
        /* istanbul ignore next */
        (cov_1hneau4xw4().b[20][0]++, 0.1)
      } =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[110]++, options);
      const trainingHistory =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[111]++, []);

      // Split data into training and validation
      const splitIndex =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[112]++, Math.floor(trainingData.length * (1 - validationSplit)));
      const trainData =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[113]++, trainingData.slice(0, splitIndex));
      const valData =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[114]++, trainingData.slice(splitIndex));
      let globalStep =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[115]++, 0);
      cov_1hneau4xw4().s[116]++;
      for (let epoch =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[117]++, 0); epoch < epochs; epoch++) {
        let epochLoss =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[118]++, 0);
        let batchCount =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[119]++, 0);

        // Shuffle training data
        const shuffled =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[120]++, _this3.shuffle(trainData));

        // Process batches
        /* istanbul ignore next */
        cov_1hneau4xw4().s[121]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[122]++, 0); i < shuffled.length; i += batchSize) {
          const batch =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[123]++, shuffled.slice(i, Math.min(i + batchSize, shuffled.length)));

          // Adaptive learning rate with warmup
          const currentLR =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[124]++, _this3.getAdaptiveLearningRate(learningRate, globalStep, warmupSteps));

          // Forward pass
          const predictions =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[125]++, yield _this3.forward(batch.inputs, true));

          // Calculate loss
          const loss =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[126]++, _this3.crossEntropyLoss(predictions, batch.targets));
          /* istanbul ignore next */
          cov_1hneau4xw4().s[127]++;
          epochLoss += loss;

          // Backward pass (simplified)
          /* istanbul ignore next */
          cov_1hneau4xw4().s[128]++;
          /* istanbul ignore next */
          yield _this3.backward(loss, currentLR);
          /* istanbul ignore next */
          cov_1hneau4xw4().s[129]++;
          globalStep++;
          /* istanbul ignore next */
          cov_1hneau4xw4().s[130]++;
          batchCount++;
        }

        // Validation
        const valLoss =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[131]++, yield _this3.validate(valData));
        const avgTrainLoss =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[132]++, epochLoss / batchCount);
        /* istanbul ignore next */
        cov_1hneau4xw4().s[133]++;
        trainingHistory.push({
          epoch: epoch + 1,
          trainLoss: avgTrainLoss,
          valLoss: valLoss,
          learningRate: _this3.getAdaptiveLearningRate(learningRate, globalStep, warmupSteps)
        });
        /* istanbul ignore next */
        cov_1hneau4xw4().s[134]++;
        console.log(`Epoch ${epoch + 1}/${epochs} - Train Loss: ${avgTrainLoss.toFixed(4)}, Val Loss: ${valLoss.toFixed(4)}`);
      }
      cov_1hneau4xw4().s[135]++;
      return {
        history: trainingHistory,
        finalLoss: trainingHistory[trainingHistory.length - 1].trainLoss,
        modelType: 'transformer'
      };
    }).apply(this, arguments);
  }
  getAdaptiveLearningRate(baseLR, step, warmupSteps) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[10]++;
    // Learning rate schedule with warmup (as in original Transformer paper)
    const arg1 =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[136]++, Math.sqrt(step));
    const arg2 =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[137]++, step * Math.pow(warmupSteps, -1.5));
    const lr =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[138]++, baseLR * Math.min(arg1, arg2) * Math.sqrt(this.config.dimensions));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[139]++;
    return lr;
  }

  // Utility functions
  tokenEmbedding(tokenIndices) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[11]++;
    // Simplified token embedding - in practice would use learned embeddings
    const embedded =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[140]++, new Float32Array(tokenIndices.shape[0] * tokenIndices.shape[1] * this.config.dimensions));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[141]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[142]++, 0); b < tokenIndices.shape[0]; b++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[143]++;
      for (let s =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[144]++, 0); s < tokenIndices.shape[1]; s++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[145]++;
        for (let d =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[146]++, 0); d < this.config.dimensions; d++) {
          const idx =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[147]++, b * tokenIndices.shape[1] * this.config.dimensions + s * this.config.dimensions + d);
          // Simple embedding based on token index
          /* istanbul ignore next */
          cov_1hneau4xw4().s[148]++;
          embedded[idx] = tokenIndices[b * tokenIndices.shape[1] + s] % this.config.vocabularySize / this.config.vocabularySize + (Math.random() - 0.5) * 0.1;
        }
      }
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[149]++;
    embedded.shape = [tokenIndices.shape[0], tokenIndices.shape[1], this.config.dimensions];
    /* istanbul ignore next */
    cov_1hneau4xw4().s[150]++;
    return embedded;
  }
  addPositionalEncoding(embeddings, sequenceLength) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[12]++;
    const result =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[151]++, new Float32Array(embeddings.length));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[152]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[153]++, 0); b < embeddings.shape[0]; b++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[154]++;
      for (let s =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[155]++, 0); s < sequenceLength; s++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[156]++;
        for (let d =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[157]++, 0); d < this.config.dimensions; d++) {
          const embIdx =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[158]++, b * sequenceLength * this.config.dimensions + s * this.config.dimensions + d);
          const posIdx =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[159]++, s * this.config.dimensions + d);
          /* istanbul ignore next */
          cov_1hneau4xw4().s[160]++;
          result[embIdx] = embeddings[embIdx] + this.positionalEncoding[posIdx];
        }
      }
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[161]++;
    result.shape = embeddings.shape;
    /* istanbul ignore next */
    cov_1hneau4xw4().s[162]++;
    return result;
  }
  reshapeForHeads(tensor, batchSize, sequenceLength) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[13]++;
    // Reshape to [batch, heads, sequence, head_dimension]
    const reshaped =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[163]++, new Float32Array(tensor.length));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[164]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[165]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[166]++;
      for (let s =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[167]++, 0); s < sequenceLength; s++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[168]++;
        for (let h =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[169]++, 0); h < this.config.heads; h++) {
          /* istanbul ignore next */
          cov_1hneau4xw4().s[170]++;
          for (let d =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[171]++, 0); d < this.headDimension; d++) {
            const srcIdx =
            /* istanbul ignore next */
            (cov_1hneau4xw4().s[172]++, b * sequenceLength * this.config.dimensions + s * this.config.dimensions + h * this.headDimension + d);
            const dstIdx =
            /* istanbul ignore next */
            (cov_1hneau4xw4().s[173]++, b * this.config.heads * sequenceLength * this.headDimension + h * sequenceLength * this.headDimension + s * this.headDimension + d);
            /* istanbul ignore next */
            cov_1hneau4xw4().s[174]++;
            reshaped[dstIdx] = tensor[srcIdx];
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[175]++;
    return reshaped;
  }
  concatenateHeads(tensor, batchSize, sequenceLength) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[14]++;
    // Reshape from [batch, heads, sequence, head_dimension] to [batch, sequence, dimensions]
    const concatenated =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[176]++, new Float32Array(batchSize * sequenceLength * this.config.dimensions));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[177]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[178]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[179]++;
      for (let s =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[180]++, 0); s < sequenceLength; s++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[181]++;
        for (let h =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[182]++, 0); h < this.config.heads; h++) {
          /* istanbul ignore next */
          cov_1hneau4xw4().s[183]++;
          for (let d =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[184]++, 0); d < this.headDimension; d++) {
            const srcIdx =
            /* istanbul ignore next */
            (cov_1hneau4xw4().s[185]++, b * this.config.heads * sequenceLength * this.headDimension + h * sequenceLength * this.headDimension + s * this.headDimension + d);
            const dstIdx =
            /* istanbul ignore next */
            (cov_1hneau4xw4().s[186]++, b * sequenceLength * this.config.dimensions + s * this.config.dimensions + h * this.headDimension + d);
            /* istanbul ignore next */
            cov_1hneau4xw4().s[187]++;
            concatenated[dstIdx] = tensor[srcIdx];
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[188]++;
    concatenated.shape = [batchSize, sequenceLength, this.config.dimensions];
    /* istanbul ignore next */
    cov_1hneau4xw4().s[189]++;
    return concatenated;
  }
  softmax(scores, sequenceLength) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[15]++;
    const softmaxScores =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[190]++, new Float32Array(scores.length));

    // Apply softmax per attention head and query position
    const stride =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[191]++, sequenceLength);
    /* istanbul ignore next */
    cov_1hneau4xw4().s[192]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[193]++, 0); i < scores.length; i += stride) {
      let maxScore =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[194]++, -Infinity);

      // Find max for numerical stability
      /* istanbul ignore next */
      cov_1hneau4xw4().s[195]++;
      for (let j =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[196]++, 0); j < stride; j++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[197]++;
        maxScore = Math.max(maxScore, scores[i + j]);
      }

      // Compute exp and sum
      let sumExp =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[198]++, 0);
      /* istanbul ignore next */
      cov_1hneau4xw4().s[199]++;
      for (let j =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[200]++, 0); j < stride; j++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[201]++;
        softmaxScores[i + j] = Math.exp(scores[i + j] - maxScore);
        /* istanbul ignore next */
        cov_1hneau4xw4().s[202]++;
        sumExp += softmaxScores[i + j];
      }

      // Normalize
      /* istanbul ignore next */
      cov_1hneau4xw4().s[203]++;
      for (let j =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[204]++, 0); j < stride; j++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[205]++;
        softmaxScores[i + j] /= sumExp;
      }
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[206]++;
    return softmaxScores;
  }
  applyAttentionWeights(weights, values, batchSize, sequenceLength) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[16]++;
    const output =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[207]++, new Float32Array(batchSize * this.config.heads * sequenceLength * this.headDimension));
    /* istanbul ignore next */
    cov_1hneau4xw4().s[208]++;
    for (let b =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[209]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[210]++;
      for (let h =
      /* istanbul ignore next */
      (cov_1hneau4xw4().s[211]++, 0); h < this.config.heads; h++) {
        /* istanbul ignore next */
        cov_1hneau4xw4().s[212]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1hneau4xw4().s[213]++, 0); i < sequenceLength; i++) {
          /* istanbul ignore next */
          cov_1hneau4xw4().s[214]++;
          for (let d =
          /* istanbul ignore next */
          (cov_1hneau4xw4().s[215]++, 0); d < this.headDimension; d++) {
            let sum =
            /* istanbul ignore next */
            (cov_1hneau4xw4().s[216]++, 0);
            /* istanbul ignore next */
            cov_1hneau4xw4().s[217]++;
            for (let j =
            /* istanbul ignore next */
            (cov_1hneau4xw4().s[218]++, 0); j < sequenceLength; j++) {
              const weightIdx =
              /* istanbul ignore next */
              (cov_1hneau4xw4().s[219]++, b * this.config.heads * sequenceLength * sequenceLength + h * sequenceLength * sequenceLength + i * sequenceLength + j);
              const valueIdx =
              /* istanbul ignore next */
              (cov_1hneau4xw4().s[220]++, b * this.config.heads * sequenceLength * this.headDimension + h * sequenceLength * this.headDimension + j * this.headDimension + d);
              /* istanbul ignore next */
              cov_1hneau4xw4().s[221]++;
              sum += weights[weightIdx] * values[valueIdx];
            }
            const outIdx =
            /* istanbul ignore next */
            (cov_1hneau4xw4().s[222]++, b * this.config.heads * sequenceLength * this.headDimension + h * sequenceLength * this.headDimension + i * this.headDimension + d);
            /* istanbul ignore next */
            cov_1hneau4xw4().s[223]++;
            output[outIdx] = sum;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_1hneau4xw4().s[224]++;
    return output;
  }
  outputProjection(input) {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[17]++;
    cov_1hneau4xw4().s[225]++;
    // Project to vocabulary size
    return this.matmul(input, this.outputWeights.projection);
  }
  getConfig() {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[18]++;
    cov_1hneau4xw4().s[226]++;
    return /* istanbul ignore next */_objectSpread(_objectSpread({
      type: 'transformer'
    }, this.config), {}, {
      parameters: this.countParameters()
    });
  }
  countParameters() {
    /* istanbul ignore next */
    cov_1hneau4xw4().f[19]++;
    let count =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[227]++, 0);

    // Attention weights
    /* istanbul ignore next */
    cov_1hneau4xw4().s[228]++;
    for (let layer =
    /* istanbul ignore next */
    (cov_1hneau4xw4().s[229]++, 0); layer < this.config.layers; layer++) {
      /* istanbul ignore next */
      cov_1hneau4xw4().s[230]++;
      count += 4 * this.config.dimensions * this.config.dimensions; // Q, K, V, O projections
    }

    // Feed-forward weights
    /* istanbul ignore next */
    cov_1hneau4xw4().s[231]++;
    count += this.config.layers * (this.config.dimensions * this.config.ffDimensions * 2 +
    // W1, W2
    this.config.ffDimensions + this.config.dimensions // biases
    );

    // Layer norm parameters
    /* istanbul ignore next */
    cov_1hneau4xw4().s[232]++;
    count += this.config.layers * 2 * this.config.dimensions; // gamma, beta

    // Output projection
    /* istanbul ignore next */
    cov_1hneau4xw4().s[233]++;
    count += this.config.dimensions * this.config.vocabularySize + this.config.vocabularySize;
    /* istanbul ignore next */
    cov_1hneau4xw4().s[234]++;
    return count;
  }
}
export { TransformerModel };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,