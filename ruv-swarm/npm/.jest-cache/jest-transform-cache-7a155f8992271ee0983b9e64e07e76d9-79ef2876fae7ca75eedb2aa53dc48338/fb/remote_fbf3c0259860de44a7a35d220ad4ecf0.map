{"version":3,"names":["cov_2l979xubim","actualCoverage","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","promises","fs","path","RemoteWrapperGenerator","constructor","options","b","f","s","workingDir","process","cwd","packageName","generateBashWrapper","generateBatchWrapper","generatePowerShellWrapper","generateClaudeHelpers","bashHelper","batchHelper","bash","batch","createWrappers","_this","console","log","scripts","name","content","mode","createdFiles","script","filePath","join","writeFile","push","files","success","error","message","createClaudeHelpers","_this2","helpers","createAll","_this3","results","wrappers"],"sources":["remote.js"],"sourcesContent":["/**\n * Remote wrapper generation module\n * Creates cross-platform wrapper scripts for remote execution\n */\n\nimport { promises as fs } from 'fs';\nimport path from 'path';\n\nclass RemoteWrapperGenerator {\n  constructor(options = {}) {\n    this.workingDir = options.workingDir || process.cwd();\n    this.packageName = options.packageName || 'ruv-swarm';\n  }\n\n  /**\n     * Generate bash wrapper script for Unix-like systems\n     */\n  generateBashWrapper() {\n    return `#!/usr/bin/env bash\n# ${this.packageName} local wrapper\n# This script ensures ${this.packageName} runs from your project directory\n\n# Save the current directory\nPROJECT_DIR=\"\\${PWD}\"\n\n# Set environment to ensure correct working directory\nexport PWD=\"\\${PROJECT_DIR}\"\nexport RUVSW_WORKING_DIR=\"\\${PROJECT_DIR}\"\n\n# Function to find and execute ${this.packageName}\nfind_and_execute() {\n    # 1. Try local npm/npx\n    if command -v npx &> /dev/null; then\n        cd \"\\${PROJECT_DIR}\"\n        exec npx ${this.packageName} \"\\$@\"\n        \n    # 2. Try local node_modules\n    elif [ -f \"\\${PROJECT_DIR}/node_modules/.bin/${this.packageName}\" ]; then\n        cd \"\\${PROJECT_DIR}\"\n        exec \"\\${PROJECT_DIR}/node_modules/.bin/${this.packageName}\" \"\\$@\"\n        \n    # 3. Try global installation\n    elif command -v ${this.packageName} &> /dev/null; then\n        cd \"\\${PROJECT_DIR}\"\n        exec ${this.packageName} \"\\$@\"\n        \n    # 4. Fallback to latest version\n    else\n        cd \"\\${PROJECT_DIR}\"\n        exec npx ${this.packageName}@latest \"\\$@\"\n    fi\n}\n\n# Handle remote execution if SSH context detected\nif [ -n \"\\$SSH_CLIENT\" ] || [ -n \"\\$SSH_TTY\" ] || [ \"\\$TERM\" = \"screen\" ]; then\n    echo \"üåê Remote execution detected\"\n    export RUVSW_REMOTE_MODE=1\nfi\n\n# Execute with error handling\nfind_and_execute \"\\$@\"\n`;\n  }\n\n  /**\n     * Generate Windows batch wrapper script\n     */\n  generateBatchWrapper() {\n    return `@echo off\nREM ${this.packageName} local wrapper (Windows)\nREM This script ensures ${this.packageName} runs from your project directory\n\nset PROJECT_DIR=%CD%\nset RUVSW_WORKING_DIR=%PROJECT_DIR%\n\nREM Check for remote execution (basic detection)\nif defined SSH_CLIENT set RUVSW_REMOTE_MODE=1\nif defined SSH_TTY set RUVSW_REMOTE_MODE=1\n\nREM Function to find and execute ${this.packageName}\ncall :find_and_execute %*\ngoto :eof\n\n:find_and_execute\n    REM 1. Try npx\n    where npx >nul 2>nul\n    if %ERRORLEVEL% == 0 (\n        cd /d \"%PROJECT_DIR%\"\n        npx ${this.packageName} %*\n        exit /b %ERRORLEVEL%\n    )\n    \n    REM 2. Try local node_modules\n    if exist \"%PROJECT_DIR%\\\\node_modules\\\\.bin\\\\${this.packageName}.cmd\" (\n        cd /d \"%PROJECT_DIR%\"\n        \"%PROJECT_DIR%\\\\node_modules\\\\.bin\\\\${this.packageName}.cmd\" %*\n        exit /b %ERRORLEVEL%\n    )\n    \n    REM 3. Try global installation\n    where ${this.packageName} >nul 2>nul\n    if %ERRORLEVEL% == 0 (\n        cd /d \"%PROJECT_DIR%\"\n        ${this.packageName} %*\n        exit /b %ERRORLEVEL%\n    )\n    \n    REM 4. Fallback to latest\n    cd /d \"%PROJECT_DIR%\"\n    npx ${this.packageName}@latest %*\n    exit /b %ERRORLEVEL%\n`;\n  }\n\n  /**\n     * Generate PowerShell wrapper script\n     */\n  generatePowerShellWrapper() {\n    return `#!/usr/bin/env pwsh\n# ${this.packageName} local wrapper (PowerShell)\n# Cross-platform PowerShell script for ${this.packageName}\n\nparam([Parameter(ValueFromRemainingArguments)][string[]]$Arguments)\n\n# Save the current directory\n$ProjectDir = Get-Location\n$env:PWD = $ProjectDir\n$env:RUVSW_WORKING_DIR = $ProjectDir\n\n# Detect remote execution\nif ($env:SSH_CLIENT -or $env:SSH_TTY -or $env:TERM -eq \"screen\") {\n    Write-Host \"üåê Remote execution detected\"\n    $env:RUVSW_REMOTE_MODE = \"1\"\n}\n\n# Function to find and execute ${this.packageName}\nfunction Find-And-Execute {\n    param([string[]]$Args)\n    \n    try {\n        # 1. Try npx\n        if (Get-Command npx -ErrorAction SilentlyContinue) {\n            Set-Location $ProjectDir\n            & npx ${this.packageName} @Args\n            return\n        }\n        \n        # 2. Try local node_modules\n        $localBin = Join-Path $ProjectDir \"node_modules\" \".bin\" \"${this.packageName}\"\n        if (Test-Path $localBin) {\n            Set-Location $ProjectDir\n            & $localBin @Args\n            return\n        }\n        \n        # 3. Try global installation\n        if (Get-Command ${this.packageName} -ErrorAction SilentlyContinue) {\n            Set-Location $ProjectDir\n            & ${this.packageName} @Args\n            return\n        }\n        \n        # 4. Fallback to latest\n        Set-Location $ProjectDir\n        & npx ${this.packageName}@latest @Args\n        \n    } catch {\n        Write-Error \"Failed to execute ${this.packageName}: $_\"\n        exit 1\n    }\n}\n\n# Execute with arguments\nFind-And-Execute $Arguments\n`;\n  }\n\n  /**\n     * Generate Claude helper scripts\n     */\n  generateClaudeHelpers() {\n    const bashHelper = `#!/usr/bin/env bash\n# Claude Code Direct Swarm Invocation Helper\n# Generated by ${this.packageName} --claude setup\n\n# Colors for output\nGREEN='\\\\033[0;32m'\nYELLOW='\\\\033[1;33m'\nRED='\\\\033[0;31m'\nNC='\\\\033[0m'\n\necho -e \"\\${GREEN}üêù ${this.packageName} Claude Code Direct Invocation\\${NC}\"\necho \"=============================================\"\necho\n\n# Function to invoke Claude with swarm commands\ninvoke_claude_swarm() {\n    local prompt=\"\\$1\"\n    local skip_permissions=\"\\$2\"\n    \n    echo -e \"\\${YELLOW}üöÄ Invoking Claude Code with swarm integration...\\${NC}\"\n    echo \"Prompt: \\$prompt\"\n    echo\n    \n    if [ \"\\$skip_permissions\" = \"true\" ]; then\n        echo -e \"\\${RED}‚ö†Ô∏è  Using --dangerously-skip-permissions flag\\${NC}\"\n        claude \"\\$prompt\" --dangerously-skip-permissions\n    else\n        claude \"\\$prompt\"\n    fi\n}\n\n# Predefined swarm prompts with remote support\ncase \"\\$1\" in\n    \"research\")\n        invoke_claude_swarm \"Initialize a research swarm with 5 agents using ${this.packageName}. Create researcher, analyst, and coder agents. Then orchestrate the task: \\$2\" \"\\$3\"\n        ;;\n    \"development\")\n        invoke_claude_swarm \"Initialize a development swarm with 8 agents using ${this.packageName} in hierarchical topology. Create architect, frontend coder, backend coder, and tester agents. Then orchestrate the task: \\$2\" \"\\$3\"\n        ;;\n    \"analysis\")\n        invoke_claude_swarm \"Initialize an analysis swarm with 6 agents using ${this.packageName}. Create multiple analyst agents with different specializations. Then orchestrate the task: \\$2\" \"\\$3\"\n        ;;\n    \"optimization\")\n        invoke_claude_swarm \"Initialize an optimization swarm with 4 agents using ${this.packageName}. Create optimizer and analyst agents. Then orchestrate the performance optimization task: \\$2\" \"\\$3\"\n        ;;\n    \"custom\")\n        invoke_claude_swarm \"\\$2\" \"\\$3\"\n        ;;\n    \"help\")\n        echo -e \"\\${GREEN}Usage:\\${NC}\"\n        echo \"  ./claude-swarm.sh research \\\\\"task description\\\\\" [skip-permissions]\"\n        echo \"  ./claude-swarm.sh development \\\\\"task description\\\\\" [skip-permissions]\"\n        echo \"  ./claude-swarm.sh analysis \\\\\"task description\\\\\" [skip-permissions]\"\n        echo \"  ./claude-swarm.sh optimization \\\\\"task description\\\\\" [skip-permissions]\"\n        echo \"  ./claude-swarm.sh custom \\\\\"full claude prompt\\\\\" [skip-permissions]\"\n        echo\n        echo -e \"\\${GREEN}Examples:\\${NC}\"\n        echo '  ./claude-swarm.sh research \"Analyze modern web frameworks\" true'\n        echo '  ./claude-swarm.sh development \"Build user authentication API\"'\n        echo '  ./claude-swarm.sh custom \"Initialize ${this.packageName} and create 3 agents for data processing\"'\n        echo\n        echo -e \"\\${YELLOW}Note:\\${NC} Add 'true' as the last parameter to use --dangerously-skip-permissions\"\n        ;;\n    *)\n        echo -e \"\\${RED}Unknown command: \\$1\\${NC}\"\n        echo \"Run './claude-swarm.sh help' for usage information\"\n        exit 1\n        ;;\nesac`;\n\n    const batchHelper = `@echo off\nREM Claude Code Direct Swarm Invocation Helper (Windows)\nREM Generated by ${this.packageName} --claude setup\n\necho üêù ${this.packageName} Claude Code Direct Invocation\necho ============================================\necho.\n\nif \"%1\"==\"research\" (\n    echo üöÄ Invoking Claude Code with research swarm...\n    if \"%3\"==\"true\" (\n        claude \"Initialize a research swarm with 5 agents using ${this.packageName}. Create researcher, analyst, and coder agents. Then orchestrate the task: %2\" --dangerously-skip-permissions\n    ) else (\n        claude \"Initialize a research swarm with 5 agents using ${this.packageName}. Create researcher, analyst, and coder agents. Then orchestrate the task: %2\"\n    )\n) else if \"%1\"==\"development\" (\n    echo üöÄ Invoking Claude Code with development swarm...\n    if \"%3\"==\"true\" (\n        claude \"Initialize a development swarm with 8 agents using ${this.packageName} in hierarchical topology. Create architect, frontend coder, backend coder, and tester agents. Then orchestrate the task: %2\" --dangerously-skip-permissions\n    ) else (\n        claude \"Initialize a development swarm with 8 agents using ${this.packageName} in hierarchical topology. Create architect, frontend coder, backend coder, and tester agents. Then orchestrate the task: %2\"\n    )\n) else if \"%1\"==\"custom\" (\n    echo üöÄ Invoking Claude Code with custom prompt...\n    if \"%3\"==\"true\" (\n        claude \"%2\" --dangerously-skip-permissions\n    ) else (\n        claude \"%2\"\n    )\n) else if \"%1\"==\"help\" (\n    echo Usage:\n    echo   claude-swarm.bat research \"task description\" [skip-permissions]\n    echo   claude-swarm.bat development \"task description\" [skip-permissions]\n    echo   claude-swarm.bat custom \"full claude prompt\" [skip-permissions]\n    echo.\n    echo Examples:\n    echo   claude-swarm.bat research \"Analyze modern web frameworks\" true\n    echo   claude-swarm.bat development \"Build user authentication API\"\n    echo.\n    echo Note: Add 'true' as the last parameter to use --dangerously-skip-permissions\n) else (\n    echo Unknown command: %1\n    echo Run 'claude-swarm.bat help' for usage information\n    exit /b 1\n)`;\n\n    return { bash: bashHelper, batch: batchHelper };\n  }\n\n  /**\n     * Create all wrapper scripts\n     */\n  async createWrappers() {\n    console.log('üîß Creating remote wrapper scripts...');\n\n    try {\n      const scripts = [\n        {\n          name: this.packageName,\n          content: this.generateBashWrapper(),\n          mode: 0o755,\n        },\n        {\n          name: `${this.packageName }.bat`,\n          content: this.generateBatchWrapper(),\n          mode: 0o644,\n        },\n        {\n          name: `${this.packageName }.ps1`,\n          content: this.generatePowerShellWrapper(),\n          mode: 0o755,\n        },\n      ];\n\n      const createdFiles = [];\n\n      for (const script of scripts) {\n        const filePath = path.join(this.workingDir, script.name);\n        await fs.writeFile(filePath, script.content, { mode: script.mode });\n        createdFiles.push(script.name);\n      }\n\n      console.log(`‚úÖ Created wrapper scripts: ${ createdFiles.join(', ')}`);\n      return { files: createdFiles, success: true };\n\n    } catch (error) {\n      console.error('‚ùå Failed to create wrapper scripts:', error.message);\n      throw error;\n    }\n  }\n\n  /**\n     * Create Claude helper scripts\n     */\n  async createClaudeHelpers() {\n    console.log('ü§ñ Creating Claude helper scripts...');\n\n    try {\n      const helpers = this.generateClaudeHelpers();\n\n      const scripts = [\n        {\n          name: 'claude-swarm.sh',\n          content: helpers.bash,\n          mode: 0o755,\n        },\n        {\n          name: 'claude-swarm.bat',\n          content: helpers.batch,\n          mode: 0o644,\n        },\n      ];\n\n      const createdFiles = [];\n\n      for (const script of scripts) {\n        const filePath = path.join(this.workingDir, script.name);\n        await fs.writeFile(filePath, script.content, { mode: script.mode });\n        createdFiles.push(script.name);\n      }\n\n      console.log(`‚úÖ Created Claude helper scripts: ${ createdFiles.join(', ')}`);\n      return { files: createdFiles, success: true };\n\n    } catch (error) {\n      console.error('‚ùå Failed to create Claude helper scripts:', error.message);\n      throw error;\n    }\n  }\n\n  /**\n     * Create all remote scripts\n     */\n  async createAll() {\n    console.log('üåê Setting up remote execution capabilities...');\n\n    try {\n      const results = {\n        wrappers: await this.createWrappers(),\n        helpers: await this.createClaudeHelpers(),\n        success: true,\n      };\n\n      console.log('‚úÖ Remote execution setup complete');\n      console.log('   - Cross-platform wrapper scripts');\n      console.log('   - Claude integration helpers');\n      console.log('   - Remote execution detection');\n\n      return results;\n    } catch (error) {\n      console.error('‚ùå Failed to setup remote execution:', error.message);\n      throw error;\n    }\n  }\n}\n\nexport { RemoteWrapperGenerator };"],"mappingseY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAA,SAAAE,mBAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,cAAAC,CAAA,GAAAP,CAAA,CAAAK,CAAA,EAAAC,CAAA,GAAAE,CAAA,GAAAD,CAAA,CAAAE,KAAA,WAAAT,CAAA,gBAAAE,CAAA,CAAAF,CAAA,KAAAO,CAAA,CAAAG,IAAA,GAAAT,CAAA,CAAAO,CAAA,IAAAG,OAAA,CAAAC,OAAA,CAAAJ,CAAA,EAAAK,IAAA,CAAAV,CAAA,EAAAC,CAAA;AAAA,SAAAU,kBAAAd,CAAA,6BAAAC,CAAA,SAAAC,CAAA,GAAAa,SAAA,aAAAJ,OAAA,WAAAR,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAL,CAAA,CAAAgB,KAAA,CAAAf,CAAA,EAAAC,CAAA,YAAAe,MAAAjB,CAAA,IAAAD,kBAAA,CAAAM,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,UAAAlB,CAAA,cAAAkB,OAAAlB,CAAA,IAAAD,kBAAA,CAAAM,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,WAAAlB,CAAA,KAAAiB,KAAA;AAfZ;AACA;AACA;AACA;;AAEA,SAASE,QAAQ,IAAIC,EAAE,QAAQ,IAAI;AACnC,OAAOC,IAAI,MAAM,MAAM;AAEvB,MAAMC,sBAAsB,CAAC;EAC3BC,WAAWA,CAACC,OAAO;EAAA;EAAA,CAAA3B,cAAA,GAAA4B,CAAA,UAAG,CAAC,CAAC,GAAE;IAAA;IAAA5B,cAAA,GAAA6B,CAAA;IAAA7B,cAAA,GAAA8B,CAAA;IACxB,IAAI,CAACC,UAAU;IAAG;IAAA,CAAA/B,cAAA,GAAA4B,CAAA,UAAAD,OAAO,CAACI,UAAU;IAAA;IAAA,CAAA/B,cAAA,GAAA4B,CAAA,UAAII,OAAO,CAACC,GAAG,CAAC,CAAC;IAAC;IAAAjC,cAAA,GAAA8B,CAAA;IACtD,IAAI,CAACI,WAAW;IAAG;IAAA,CAAAlC,cAAA,GAAA4B,CAAA,UAAAD,OAAO,CAACO,WAAW;IAAA;IAAA,CAAAlC,cAAA,GAAA4B,CAAA,UAAI,WAAW;EACvD;;EAEA;AACF;AACA;EACEO,mBAAmBA,CAAA,EAAG;IAAA;IAAAnC,cAAA,GAAA6B,CAAA;IAAA7B,cAAA,GAAA8B,CAAA;IACpB,OAAO;AACX,IAAI,IAAI,CAACI,WAAW;AACpB,wBAAwB,IAAI,CAACA,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,IAAI,CAACA,WAAW;AACjD;AACA;AACA;AACA;AACA,mBAAmB,IAAI,CAACA,WAAW;AACnC;AACA;AACA,mDAAmD,IAAI,CAACA,WAAW;AACnE;AACA,kDAAkD,IAAI,CAACA,WAAW;AAClE;AACA;AACA,sBAAsB,IAAI,CAACA,WAAW;AACtC;AACA,eAAe,IAAI,CAACA,WAAW;AAC/B;AACA;AACA;AACA;AACA,mBAAmB,IAAI,CAACA,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;EACC;;EAEA;AACF;AACA;EACEE,oBAAoBA,CAAA,EAAG;IAAA;IAAApC,cAAA,GAAA6B,CAAA;IAAA7B,cAAA,GAAA8B,CAAA;IACrB,OAAO;AACX,MAAM,IAAI,CAACI,WAAW;AACtB,0BAA0B,IAAI,CAACA,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI,CAACA,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI,CAACA,WAAW;AAC9B;AACA;AACA;AACA;AACA,mDAAmD,IAAI,CAACA,WAAW;AACnE;AACA,8CAA8C,IAAI,CAACA,WAAW;AAC9D;AACA;AACA;AACA;AACA,YAAY,IAAI,CAACA,WAAW;AAC5B;AACA;AACA,UAAU,IAAI,CAACA,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAU,IAAI,CAACA,WAAW;AAC1B;AACA,CAAC;EACC;;EAEA;AACF;AACA;EACEG,yBAAyBA,CAAA,EAAG;IAAA;IAAArC,cAAA,GAAA6B,CAAA;IAAA7B,cAAA,GAAA8B,CAAA;IAC1B,OAAO;AACX,IAAI,IAAI,CAACI,WAAW;AACpB,yCAAyC,IAAI,CAACA,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,IAAI,CAACA,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI,CAACA,WAAW;AACpC;AACA;AACA;AACA;AACA,mEAAmE,IAAI,CAACA,WAAW;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI,CAACA,WAAW;AAC1C;AACA,gBAAgB,IAAI,CAACA,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI,CAACA,WAAW;AAChC;AACA;AACA,yCAAyC,IAAI,CAACA,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;EACC;;EAEA;AACF;AACA;EACEI,qBAAqBA,CAAA,EAAG;IAAA;IAAAtC,cAAA,GAAA6B,CAAA;IACtB,MAAMU,UAAU;IAAA;IAAA,CAAAvC,cAAA,GAAA8B,CAAA,OAAG;AACvB;AACA,iBAAiB,IAAI,CAACI,WAAW;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI,CAACA,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,IAAI,CAACA,WAAW;AAC/F;AACA;AACA,kFAAkF,IAAI,CAACA,WAAW;AAClG;AACA;AACA,gFAAgF,IAAI,CAACA,WAAW;AAChG;AACA;AACA,oFAAoF,IAAI,CAACA,WAAW;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,IAAI,CAACA,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]}