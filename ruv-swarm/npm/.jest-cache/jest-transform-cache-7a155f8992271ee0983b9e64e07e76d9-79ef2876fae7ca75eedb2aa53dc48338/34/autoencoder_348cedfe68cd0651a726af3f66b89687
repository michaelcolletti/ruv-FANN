c16f1d000d5ee23b8cfb8208ef607281
/* istanbul ignore next */
function cov_15xmfir4i8() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/autoencoder.js";
  var hash = "369ac3378f2ff5d8113bb3ea1ddaa74b29d61a0c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/autoencoder.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 25
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 25,
          column: 6
        }
      },
      "2": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "3": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 75
        }
      },
      "4": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 29
        }
      },
      "5": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 28
        }
      },
      "6": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 29
        }
      },
      "7": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "8": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "9": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 26
        }
      },
      "10": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "11": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 29
        }
      },
      "12": {
        start: {
          line: 48,
          column: 19
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "13": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "14": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 69
        }
      },
      "15": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 63
        }
      },
      "16": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 23
        }
      },
      "17": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "18": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 63,
          column: 8
        }
      },
      "19": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 67,
          column: 8
        }
      },
      "20": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 44
        }
      },
      "21": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 90
        }
      },
      "22": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 72,
          column: 84
        }
      },
      "23": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "24": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "25": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 69
        }
      },
      "26": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "27": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 23
        }
      },
      "28": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 83
        }
      },
      "29": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 77
        }
      },
      "30": {
        start: {
          line: 89,
          column: 17
        },
        end: {
          line: 89,
          column: 49
        }
      },
      "31": {
        start: {
          line: 89,
          column: 40
        },
        end: {
          line: 89,
          column: 45
        }
      },
      "32": {
        start: {
          line: 90,
          column: 19
        },
        end: {
          line: 90,
          column: 41
        }
      },
      "33": {
        start: {
          line: 93,
          column: 18
        },
        end: {
          line: 93,
          column: 56
        }
      },
      "34": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "35": {
        start: {
          line: 95,
          column: 17
        },
        end: {
          line: 95,
          column: 18
        }
      },
      "36": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 50
        }
      },
      "37": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 25
        }
      },
      "38": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "39": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 17
        }
      },
      "40": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "41": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 59
        }
      },
      "42": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 111,
          column: 57
        }
      },
      "43": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 114,
          column: 77
        }
      },
      "44": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "45": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 17
        }
      },
      "46": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "47": {
        start: {
          line: 128,
          column: 17
        },
        end: {
          line: 128,
          column: 18
        }
      },
      "48": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 71
        }
      },
      "49": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "50": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 25
        }
      },
      "51": {
        start: {
          line: 134,
          column: 13
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "52": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 25
        }
      },
      "53": {
        start: {
          line: 136,
          column: 13
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "54": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 28
        }
      },
      "55": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "56": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 53
        }
      },
      "57": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "58": {
        start: {
          line: 148,
          column: 17
        },
        end: {
          line: 148,
          column: 70
        }
      },
      "59": {
        start: {
          line: 149,
          column: 21
        },
        end: {
          line: 149,
          column: 82
        }
      },
      "60": {
        start: {
          line: 152,
          column: 21
        },
        end: {
          line: 152,
          column: 68
        }
      },
      "61": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 36
        }
      },
      "62": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 49
        }
      },
      "63": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 18
        }
      },
      "64": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "65": {
        start: {
          line: 164,
          column: 17
        },
        end: {
          line: 164,
          column: 18
        }
      },
      "66": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 165,
          column: 71
        }
      },
      "67": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 189,
          column: 7
        }
      },
      "68": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "69": {
        start: {
          line: 170,
          column: 10
        },
        end: {
          line: 170,
          column: 30
        }
      },
      "70": {
        start: {
          line: 171,
          column: 15
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "71": {
        start: {
          line: 172,
          column: 10
        },
        end: {
          line: 172,
          column: 27
        }
      },
      "72": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "73": {
        start: {
          line: 178,
          column: 10
        },
        end: {
          line: 178,
          column: 27
        }
      },
      "74": {
        start: {
          line: 179,
          column: 15
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "75": {
        start: {
          line: 180,
          column: 10
        },
        end: {
          line: 180,
          column: 27
        }
      },
      "76": {
        start: {
          line: 181,
          column: 15
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "77": {
        start: {
          line: 182,
          column: 10
        },
        end: {
          line: 182,
          column: 30
        }
      },
      "78": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "79": {
        start: {
          line: 187,
          column: 10
        },
        end: {
          line: 187,
          column: 55
        }
      },
      "80": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "81": {
        start: {
          line: 196,
          column: 35
        },
        end: {
          line: 196,
          column: 46
        }
      },
      "82": {
        start: {
          line: 197,
          column: 23
        },
        end: {
          line: 197,
          column: 36
        }
      },
      "83": {
        start: {
          line: 199,
          column: 19
        },
        end: {
          line: 199,
          column: 59
        }
      },
      "84": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "85": {
        start: {
          line: 201,
          column: 17
        },
        end: {
          line: 201,
          column: 18
        }
      },
      "86": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "87": {
        start: {
          line: 202,
          column: 19
        },
        end: {
          line: 202,
          column: 20
        }
      },
      "88": {
        start: {
          line: 203,
          column: 18
        },
        end: {
          line: 203,
          column: 27
        }
      },
      "89": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "90": {
        start: {
          line: 205,
          column: 21
        },
        end: {
          line: 205,
          column: 22
        }
      },
      "91": {
        start: {
          line: 206,
          column: 10
        },
        end: {
          line: 206,
          column: 72
        }
      },
      "92": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 41
        }
      },
      "93": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 43
        }
      },
      "94": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 18
        }
      },
      "95": {
        start: {
          line: 218,
          column: 18
        },
        end: {
          line: 218,
          column: 48
        }
      },
      "96": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "97": {
        start: {
          line: 220,
          column: 17
        },
        end: {
          line: 220,
          column: 18
        }
      },
      "98": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 58
        }
      },
      "99": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 60
        }
      },
      "100": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 30
        }
      },
      "101": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 17
        }
      },
      "102": {
        start: {
          line: 232,
          column: 36
        },
        end: {
          line: 232,
          column: 44
        }
      },
      "103": {
        start: {
          line: 234,
          column: 14
        },
        end: {
          line: 234,
          column: 54
        }
      },
      "104": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "105": {
        start: {
          line: 236,
          column: 17
        },
        end: {
          line: 236,
          column: 18
        }
      },
      "106": {
        start: {
          line: 237,
          column: 6
        },
        end: {
          line: 242,
          column: 7
        }
      },
      "107": {
        start: {
          line: 237,
          column: 19
        },
        end: {
          line: 237,
          column: 20
        }
      },
      "108": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "109": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 45
        }
      },
      "110": {
        start: {
          line: 240,
          column: 22
        },
        end: {
          line: 240,
          column: 49
        }
      },
      "111": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 43
        }
      },
      "112": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 23
        }
      },
      "113": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "114": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "115": {
        start: {
          line: 251,
          column: 19
        },
        end: {
          line: 251,
          column: 20
        }
      },
      "116": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 38
        }
      },
      "117": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 38
        }
      },
      "118": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 253,
          column: 38
        }
      },
      "119": {
        start: {
          line: 253,
          column: 20
        },
        end: {
          line: 253,
          column: 38
        }
      },
      "120": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 71
        }
      },
      "121": {
        start: {
          line: 258,
          column: 24
        },
        end: {
          line: 258,
          column: 35
        }
      },
      "122": {
        start: {
          line: 261,
          column: 29
        },
        end: {
          line: 261,
          column: 30
        }
      },
      "123": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "124": {
        start: {
          line: 265,
          column: 6
        },
        end: {
          line: 269,
          column: 7
        }
      },
      "125": {
        start: {
          line: 265,
          column: 19
        },
        end: {
          line: 265,
          column: 20
        }
      },
      "126": {
        start: {
          line: 266,
          column: 24
        },
        end: {
          line: 266,
          column: 28
        }
      },
      "127": {
        start: {
          line: 267,
          column: 21
        },
        end: {
          line: 267,
          column: 87
        }
      },
      "128": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 94
        }
      },
      "129": {
        start: {
          line: 272,
          column: 6
        },
        end: {
          line: 275,
          column: 7
        }
      },
      "130": {
        start: {
          line: 272,
          column: 19
        },
        end: {
          line: 272,
          column: 20
        }
      },
      "131": {
        start: {
          line: 273,
          column: 21
        },
        end: {
          line: 273,
          column: 56
        }
      },
      "132": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 42
        }
      },
      "133": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 278,
          column: 36
        }
      },
      "134": {
        start: {
          line: 281,
          column: 17
        },
        end: {
          line: 281,
          column: 18
        }
      },
      "135": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "136": {
        start: {
          line: 283,
          column: 6
        },
        end: {
          line: 285,
          column: 7
        }
      },
      "137": {
        start: {
          line: 283,
          column: 19
        },
        end: {
          line: 283,
          column: 20
        }
      },
      "138": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 79
        }
      },
      "139": {
        start: {
          line: 286,
          column: 6
        },
        end: {
          line: 286,
          column: 26
        }
      },
      "140": {
        start: {
          line: 290,
          column: 23
        },
        end: {
          line: 290,
          column: 24
        }
      },
      "141": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "142": {
        start: {
          line: 292,
          column: 29
        },
        end: {
          line: 292,
          column: 33
        }
      },
      "143": {
        start: {
          line: 293,
          column: 25
        },
        end: {
          line: 293,
          column: 88
        }
      },
      "144": {
        start: {
          line: 293,
          column: 56
        },
        end: {
          line: 293,
          column: 61
        }
      },
      "145": {
        start: {
          line: 294,
          column: 6
        },
        end: {
          line: 294,
          column: 94
        }
      },
      "146": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 302,
          column: 6
        }
      },
      "147": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 15
        }
      },
      "148": {
        start: {
          line: 314,
          column: 28
        },
        end: {
          line: 314,
          column: 30
        }
      },
      "149": {
        start: {
          line: 317,
          column: 23
        },
        end: {
          line: 317,
          column: 78
        }
      },
      "150": {
        start: {
          line: 318,
          column: 22
        },
        end: {
          line: 318,
          column: 55
        }
      },
      "151": {
        start: {
          line: 319,
          column: 20
        },
        end: {
          line: 319,
          column: 50
        }
      },
      "152": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "153": {
        start: {
          line: 321,
          column: 21
        },
        end: {
          line: 321,
          column: 22
        }
      },
      "154": {
        start: {
          line: 322,
          column: 22
        },
        end: {
          line: 322,
          column: 23
        }
      },
      "155": {
        start: {
          line: 323,
          column: 27
        },
        end: {
          line: 323,
          column: 28
        }
      },
      "156": {
        start: {
          line: 324,
          column: 24
        },
        end: {
          line: 324,
          column: 25
        }
      },
      "157": {
        start: {
          line: 325,
          column: 23
        },
        end: {
          line: 325,
          column: 24
        }
      },
      "158": {
        start: {
          line: 328,
          column: 23
        },
        end: {
          line: 328,
          column: 46
        }
      },
      "159": {
        start: {
          line: 331,
          column: 6
        },
        end: {
          line: 363,
          column: 7
        }
      },
      "160": {
        start: {
          line: 331,
          column: 19
        },
        end: {
          line: 331,
          column: 20
        }
      },
      "161": {
        start: {
          line: 332,
          column: 22
        },
        end: {
          line: 332,
          column: 81
        }
      },
      "162": {
        start: {
          line: 335,
          column: 27
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "163": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 49
        }
      },
      "164": {
        start: {
          line: 342,
          column: 23
        },
        end: {
          line: 342,
          column: 64
        }
      },
      "165": {
        start: {
          line: 345,
          column: 23
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "166": {
        start: {
          line: 353,
          column: 26
        },
        end: {
          line: 353,
          column: 84
        }
      },
      "167": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 31
        }
      },
      "168": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 48
        }
      },
      "169": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 33
        }
      },
      "170": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 53
        }
      },
      "171": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 21
        }
      },
      "172": {
        start: {
          line: 366,
          column: 24
        },
        end: {
          line: 366,
          column: 52
        }
      },
      "173": {
        start: {
          line: 368,
          column: 27
        },
        end: {
          line: 368,
          column: 49
        }
      },
      "174": {
        start: {
          line: 369,
          column: 27
        },
        end: {
          line: 369,
          column: 54
        }
      },
      "175": {
        start: {
          line: 370,
          column: 24
        },
        end: {
          line: 370,
          column: 48
        }
      },
      "176": {
        start: {
          line: 372,
          column: 27
        },
        end: {
          line: 379,
          column: 7
        }
      },
      "177": {
        start: {
          line: 381,
          column: 6
        },
        end: {
          line: 381,
          column: 41
        }
      },
      "178": {
        start: {
          line: 383,
          column: 6
        },
        end: {
          line: 389,
          column: 8
        }
      },
      "179": {
        start: {
          line: 391,
          column: 6
        },
        end: {
          line: 391,
          column: 39
        }
      },
      "180": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 398,
          column: 6
        }
      },
      "181": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 402,
          column: 21
        }
      },
      "182": {
        start: {
          line: 403,
          column: 20
        },
        end: {
          line: 403,
          column: 21
        }
      },
      "183": {
        start: {
          line: 404,
          column: 17
        },
        end: {
          line: 404,
          column: 18
        }
      },
      "184": {
        start: {
          line: 405,
          column: 21
        },
        end: {
          line: 405,
          column: 22
        }
      },
      "185": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 421,
          column: 5
        }
      },
      "186": {
        start: {
          line: 408,
          column: 25
        },
        end: {
          line: 411,
          column: 7
        }
      },
      "187": {
        start: {
          line: 412,
          column: 6
        },
        end: {
          line: 412,
          column: 47
        }
      },
      "188": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 414,
          column: 63
        }
      },
      "189": {
        start: {
          line: 415,
          column: 21
        },
        end: {
          line: 415,
          column: 90
        }
      },
      "190": {
        start: {
          line: 417,
          column: 6
        },
        end: {
          line: 417,
          column: 32
        }
      },
      "191": {
        start: {
          line: 418,
          column: 6
        },
        end: {
          line: 418,
          column: 41
        }
      },
      "192": {
        start: {
          line: 419,
          column: 6
        },
        end: {
          line: 419,
          column: 26
        }
      },
      "193": {
        start: {
          line: 420,
          column: 6
        },
        end: {
          line: 420,
          column: 19
        }
      },
      "194": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 427,
          column: 6
        }
      },
      "195": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 442,
          column: 6
        }
      },
      "196": {
        start: {
          line: 434,
          column: 23
        },
        end: {
          line: 434,
          column: 54
        }
      },
      "197": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 29
        }
      },
      "198": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 456,
          column: 6
        }
      },
      "199": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 48
        }
      },
      "200": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 463,
          column: 5
        }
      },
      "201": {
        start: {
          line: 462,
          column: 6
        },
        end: {
          line: 462,
          column: 83
        }
      },
      "202": {
        start: {
          line: 466,
          column: 19
        },
        end: {
          line: 466,
          column: 76
        }
      },
      "203": {
        start: {
          line: 468,
          column: 4
        },
        end: {
          line: 470,
          column: 5
        }
      },
      "204": {
        start: {
          line: 468,
          column: 17
        },
        end: {
          line: 468,
          column: 18
        }
      },
      "205": {
        start: {
          line: 469,
          column: 6
        },
        end: {
          line: 469,
          column: 40
        }
      },
      "206": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 472,
          column: 60
        }
      },
      "207": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 475,
          column: 44
        }
      },
      "208": {
        start: {
          line: 481,
          column: 21
        },
        end: {
          line: 481,
          column: 53
        }
      },
      "209": {
        start: {
          line: 482,
          column: 21
        },
        end: {
          line: 482,
          column: 53
        }
      },
      "210": {
        start: {
          line: 484,
          column: 27
        },
        end: {
          line: 484,
          column: 29
        }
      },
      "211": {
        start: {
          line: 486,
          column: 4
        },
        end: {
          line: 500,
          column: 5
        }
      },
      "212": {
        start: {
          line: 486,
          column: 20
        },
        end: {
          line: 486,
          column: 21
        }
      },
      "213": {
        start: {
          line: 487,
          column: 20
        },
        end: {
          line: 487,
          column: 32
        }
      },
      "214": {
        start: {
          line: 488,
          column: 33
        },
        end: {
          line: 488,
          column: 73
        }
      },
      "215": {
        start: {
          line: 491,
          column: 6
        },
        end: {
          line: 493,
          column: 7
        }
      },
      "216": {
        start: {
          line: 491,
          column: 19
        },
        end: {
          line: 491,
          column: 20
        }
      },
      "217": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 492,
          column: 94
        }
      },
      "218": {
        start: {
          line: 495,
          column: 6
        },
        end: {
          line: 495,
          column: 55
        }
      },
      "219": {
        start: {
          line: 498,
          column: 22
        },
        end: {
          line: 498,
          column: 66
        }
      },
      "220": {
        start: {
          line: 499,
          column: 6
        },
        end: {
          line: 499,
          column: 35
        }
      },
      "221": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 502,
          column: 26
        }
      },
      "222": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 511,
          column: 6
        }
      },
      "223": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 515,
          column: 17
        }
      },
      "224": {
        start: {
          line: 518,
          column: 4
        },
        end: {
          line: 521,
          column: 5
        }
      },
      "225": {
        start: {
          line: 518,
          column: 17
        },
        end: {
          line: 518,
          column: 18
        }
      },
      "226": {
        start: {
          line: 519,
          column: 6
        },
        end: {
          line: 519,
          column: 45
        }
      },
      "227": {
        start: {
          line: 520,
          column: 6
        },
        end: {
          line: 520,
          column: 44
        }
      },
      "228": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 527,
          column: 5
        }
      },
      "229": {
        start: {
          line: 525,
          column: 6
        },
        end: {
          line: 525,
          column: 69
        }
      },
      "230": {
        start: {
          line: 526,
          column: 6
        },
        end: {
          line: 526,
          column: 77
        }
      },
      "231": {
        start: {
          line: 530,
          column: 4
        },
        end: {
          line: 533,
          column: 5
        }
      },
      "232": {
        start: {
          line: 530,
          column: 17
        },
        end: {
          line: 530,
          column: 18
        }
      },
      "233": {
        start: {
          line: 531,
          column: 6
        },
        end: {
          line: 531,
          column: 45
        }
      },
      "234": {
        start: {
          line: 532,
          column: 6
        },
        end: {
          line: 532,
          column: 44
        }
      },
      "235": {
        start: {
          line: 535,
          column: 4
        },
        end: {
          line: 535,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 22
          },
          end: {
            line: 86,
            column: 3
          }
        },
        line: 47
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 88,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        },
        loc: {
          start: {
            line: 88,
            column: 22
          },
          end: {
            line: 101,
            column: 3
          }
        },
        line: 88
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 31
          }
        },
        loc: {
          start: {
            line: 89,
            column: 40
          },
          end: {
            line: 89,
            column: 45
          }
        },
        line: 89
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 103,
            column: 2
          },
          end: {
            line: 103,
            column: 3
          }
        },
        loc: {
          start: {
            line: 103,
            column: 41
          },
          end: {
            line: 122,
            column: 3
          }
        },
        line: 103
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 124,
            column: 2
          },
          end: {
            line: 124,
            column: 3
          }
        },
        loc: {
          start: {
            line: 124,
            column: 40
          },
          end: {
            line: 158,
            column: 3
          }
        },
        line: 124
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 160,
            column: 2
          },
          end: {
            line: 160,
            column: 3
          }
        },
        loc: {
          start: {
            line: 160,
            column: 41
          },
          end: {
            line: 193,
            column: 3
          }
        },
        line: 160
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 195,
            column: 2
          },
          end: {
            line: 195,
            column: 3
          }
        },
        loc: {
          start: {
            line: 195,
            column: 32
          },
          end: {
            line: 215,
            column: 3
          }
        },
        line: 195
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 217,
            column: 2
          },
          end: {
            line: 217,
            column: 3
          }
        },
        loc: {
          start: {
            line: 217,
            column: 30
          },
          end: {
            line: 228,
            column: 3
          }
        },
        line: 217
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 230,
            column: 2
          },
          end: {
            line: 230,
            column: 3
          }
        },
        loc: {
          start: {
            line: 230,
            column: 29
          },
          end: {
            line: 247,
            column: 3
          }
        },
        line: 230
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 249,
            column: 2
          },
          end: {
            line: 249,
            column: 3
          }
        },
        loc: {
          start: {
            line: 249,
            column: 19
          },
          end: {
            line: 255,
            column: 3
          }
        },
        line: 249
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 257,
            column: 2
          },
          end: {
            line: 257,
            column: 3
          }
        },
        loc: {
          start: {
            line: 257,
            column: 57
          },
          end: {
            line: 303,
            column: 3
          }
        },
        line: 257
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 293,
            column: 46
          },
          end: {
            line: 293,
            column: 47
          }
        },
        loc: {
          start: {
            line: 293,
            column: 56
          },
          end: {
            line: 293,
            column: 61
          }
        },
        line: 293
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 305,
            column: 2
          },
          end: {
            line: 305,
            column: 3
          }
        },
        loc: {
          start: {
            line: 305,
            column: 42
          },
          end: {
            line: 399,
            column: 3
          }
        },
        line: 305
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 401,
            column: 2
          },
          end: {
            line: 401,
            column: 3
          }
        },
        loc: {
          start: {
            line: 401,
            column: 23
          },
          end: {
            line: 428,
            column: 3
          }
        },
        line: 401
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 431,
            column: 2
          },
          end: {
            line: 431,
            column: 3
          }
        },
        loc: {
          start: {
            line: 431,
            column: 21
          },
          end: {
            line: 443,
            column: 3
          }
        },
        line: 431
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 433,
            column: 14
          },
          end: {
            line: 433,
            column: 15
          }
        },
        loc: {
          start: {
            line: 433,
            column: 31
          },
          end: {
            line: 436,
            column: 7
          }
        },
        line: 433
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 446,
            column: 2
          },
          end: {
            line: 446,
            column: 3
          }
        },
        loc: {
          start: {
            line: 446,
            column: 21
          },
          end: {
            line: 457,
            column: 3
          }
        },
        line: 446
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 448,
            column: 14
          },
          end: {
            line: 448,
            column: 15
          }
        },
        loc: {
          start: {
            line: 448,
            column: 32
          },
          end: {
            line: 450,
            column: 7
          }
        },
        line: 448
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 460,
            column: 2
          },
          end: {
            line: 460,
            column: 3
          }
        },
        loc: {
          start: {
            line: 460,
            column: 33
          },
          end: {
            line: 476,
            column: 3
          }
        },
        line: 460
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 479,
            column: 2
          },
          end: {
            line: 479,
            column: 3
          }
        },
        loc: {
          start: {
            line: 479,
            column: 48
          },
          end: {
            line: 503,
            column: 3
          }
        },
        line: 479
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 505,
            column: 2
          },
          end: {
            line: 505,
            column: 3
          }
        },
        loc: {
          start: {
            line: 505,
            column: 14
          },
          end: {
            line: 512,
            column: 3
          }
        },
        line: 505
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 514,
            column: 2
          },
          end: {
            line: 514,
            column: 3
          }
        },
        loc: {
          start: {
            line: 514,
            column: 20
          },
          end: {
            line: 536,
            column: 3
          }
        },
        line: 514
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 14
          },
          end: {
            line: 9,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 25
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 33
          }
        }, {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 14,
            column: 40
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 15,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 15,
            column: 41
          }
        }, {
          start: {
            line: 15,
            column: 45
          },
          end: {
            line: 15,
            column: 64
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 43
          }
        }, {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 16,
            column: 49
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 41
          }
        }, {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 49
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 35
          }
        }, {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 45
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 47
          }
        }, {
          start: {
            line: 19,
            column: 51
          },
          end: {
            line: 19,
            column: 60
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 37
          }
        }, {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 20,
            column: 44
          }
        }],
        line: 20
      },
      "8": {
        loc: {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 21,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 21,
            column: 55
          }
        }, {
          start: {
            line: 21,
            column: 59
          },
          end: {
            line: 21,
            column: 63
          }
        }],
        line: 21
      },
      "9": {
        loc: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 43
          }
        }, {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 22,
            column: 48
          }
        }],
        line: 22
      },
      "10": {
        loc: {
          start: {
            line: 23,
            column: 19
          },
          end: {
            line: 23,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 19
          },
          end: {
            line: 23,
            column: 37
          }
        }, {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 23,
            column: 46
          }
        }],
        line: 23
      },
      "11": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "12": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "13": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: 69,
            column: 11
          },
          end: {
            line: 74,
            column: 5
          }
        }],
        line: 58
      },
      "14": {
        loc: {
          start: {
            line: 103,
            column: 23
          },
          end: {
            line: 103,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 103,
            column: 39
          }
        }],
        line: 103
      },
      "15": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "16": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 16
          }
        }, {
          start: {
            line: 106,
            column: 20
          },
          end: {
            line: 106,
            column: 50
          }
        }],
        line: 106
      },
      "17": {
        loc: {
          start: {
            line: 124,
            column: 22
          },
          end: {
            line: 124,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 124,
            column: 38
          }
        }],
        line: 124
      },
      "18": {
        loc: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 138,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 138,
            column: 7
          }
        }, {
          start: {
            line: 134,
            column: 13
          },
          end: {
            line: 138,
            column: 7
          }
        }],
        line: 132
      },
      "19": {
        loc: {
          start: {
            line: 134,
            column: 13
          },
          end: {
            line: 138,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 13
          },
          end: {
            line: 138,
            column: 7
          }
        }, {
          start: {
            line: 136,
            column: 13
          },
          end: {
            line: 138,
            column: 7
          }
        }],
        line: 134
      },
      "20": {
        loc: {
          start: {
            line: 136,
            column: 13
          },
          end: {
            line: 138,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 13
          },
          end: {
            line: 138,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "21": {
        loc: {
          start: {
            line: 141,
            column: 6
          },
          end: {
            line: 143,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 6
          },
          end: {
            line: 143,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "22": {
        loc: {
          start: {
            line: 141,
            column: 10
          },
          end: {
            line: 141,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 10
          },
          end: {
            line: 141,
            column: 18
          }
        }, {
          start: {
            line: 141,
            column: 22
          },
          end: {
            line: 141,
            column: 49
          }
        }, {
          start: {
            line: 141,
            column: 53
          },
          end: {
            line: 141,
            column: 87
          }
        }],
        line: 141
      },
      "23": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "24": {
        loc: {
          start: {
            line: 152,
            column: 21
          },
          end: {
            line: 152,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 32
          },
          end: {
            line: 152,
            column: 63
          }
        }, {
          start: {
            line: 152,
            column: 66
          },
          end: {
            line: 152,
            column: 68
          }
        }],
        line: 152
      },
      "25": {
        loc: {
          start: {
            line: 160,
            column: 23
          },
          end: {
            line: 160,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 160,
            column: 34
          },
          end: {
            line: 160,
            column: 39
          }
        }],
        line: 160
      },
      "26": {
        loc: {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        }, {
          start: {
            line: 175,
            column: 13
          },
          end: {
            line: 189,
            column: 7
          }
        }],
        line: 168
      },
      "27": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 173,
            column: 9
          }
        }],
        line: 169
      },
      "28": {
        loc: {
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "29": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 183,
            column: 9
          }
        }],
        line: 177
      },
      "30": {
        loc: {
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 183,
            column: 9
          }
        }],
        line: 179
      },
      "31": {
        loc: {
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "32": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "33": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 20
          }
        }, {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 186,
            column: 51
          }
        }],
        line: 186
      },
      "34": {
        loc: {
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 257,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 257,
            column: 36
          },
          end: {
            line: 257,
            column: 40
          }
        }],
        line: 257
      },
      "35": {
        loc: {
          start: {
            line: 257,
            column: 42
          },
          end: {
            line: 257,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 257,
            column: 51
          },
          end: {
            line: 257,
            column: 55
          }
        }],
        line: 257
      },
      "36": {
        loc: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        }, {
          start: {
            line: 270,
            column: 11
          },
          end: {
            line: 276,
            column: 5
          }
        }],
        line: 263
      },
      "37": {
        loc: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "38": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 282,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 282,
            column: 31
          }
        }, {
          start: {
            line: 282,
            column: 35
          },
          end: {
            line: 282,
            column: 37
          }
        }, {
          start: {
            line: 282,
            column: 41
          },
          end: {
            line: 282,
            column: 47
          }
        }],
        line: 282
      },
      "39": {
        loc: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "40": {
        loc: {
          start: {
            line: 305,
            column: 28
          },
          end: {
            line: 305,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 305,
            column: 38
          },
          end: {
            line: 305,
            column: 40
          }
        }],
        line: 305
      },
      "41": {
        loc: {
          start: {
            line: 307,
            column: 6
          },
          end: {
            line: 307,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 307,
            column: 15
          },
          end: {
            line: 307,
            column: 17
          }
        }],
        line: 307
      },
      "42": {
        loc: {
          start: {
            line: 308,
            column: 6
          },
          end: {
            line: 308,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 308,
            column: 18
          },
          end: {
            line: 308,
            column: 20
          }
        }],
        line: 308
      },
      "43": {
        loc: {
          start: {
            line: 309,
            column: 6
          },
          end: {
            line: 309,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 309,
            column: 21
          },
          end: {
            line: 309,
            column: 26
          }
        }],
        line: 309
      },
      "44": {
        loc: {
          start: {
            line: 310,
            column: 6
          },
          end: {
            line: 310,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 310,
            column: 24
          },
          end: {
            line: 310,
            column: 27
          }
        }],
        line: 310
      },
      "45": {
        loc: {
          start: {
            line: 311,
            column: 6
          },
          end: {
            line: 311,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 311,
            column: 13
          },
          end: {
            line: 311,
            column: 16
          }
        }],
        line: 311
      },
      "46": {
        loc: {
          start: {
            line: 460,
            column: 17
          },
          end: {
            line: 460,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 460,
            column: 30
          },
          end: {
            line: 460,
            column: 31
          }
        }],
        line: 460
      },
      "47": {
        loc: {
          start: {
            line: 461,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 461,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 461
      },
      "48": {
        loc: {
          start: {
            line: 479,
            column: 36
          },
          end: {
            line: 479,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 479,
            column: 44
          },
          end: {
            line: 479,
            column: 46
          }
        }],
        line: 479
      },
      "49": {
        loc: {
          start: {
            line: 508,
            column: 15
          },
          end: {
            line: 508,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 508,
            column: 41
          },
          end: {
            line: 508,
            column: 54
          }
        }, {
          start: {
            line: 508,
            column: 57
          },
          end: {
            line: 508,
            column: 67
          }
        }],
        line: 508
      },
      "50": {
        loc: {
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 527,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 527,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0],
      "42": [0],
      "43": [0],
      "44": [0],
      "45": [0],
      "46": [0],
      "47": [0, 0],
      "48": [0],
      "49": [0, 0],
      "50": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "369ac3378f2ff5d8113bb3ea1ddaa74b29d61a0c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15xmfir4i8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15xmfir4i8();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Autoencoder Neural Network Model
 * For dimensionality reduction, feature learning, and data compression
 */

import { NeuralModel } from './base.js';
class AutoencoderModel extends NeuralModel {
  constructor(config =
  /* istanbul ignore next */
  (cov_15xmfir4i8().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[0]++;
    cov_15xmfir4i8().s[0]++;
    super('autoencoder');

    // Autoencoder configuration
    /* istanbul ignore next */
    cov_15xmfir4i8().s[1]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread({
      inputSize:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[1][0]++, config.inputSize) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[1][1]++, 784),
      // e.g., 28x28 flattened image
      encoderLayers:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[2][0]++, config.encoderLayers) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[2][1]++, [512, 256, 128, 64]),
      // Progressive compression
      bottleneckSize:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[3][0]++, config.bottleneckSize) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[3][1]++, 32),
      // Latent space dimension
      decoderLayers:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[4][0]++, config.decoderLayers) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[4][1]++, null),
      // Mirror of encoder if not specified
      activation:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[5][0]++, config.activation) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[5][1]++, 'relu'),
      outputActivation:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[6][0]++, config.outputActivation) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[6][1]++, 'sigmoid'),
      dropoutRate:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[7][0]++, config.dropoutRate) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[7][1]++, 0.1),
      sparseRegularization:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[8][0]++, config.sparseRegularization) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[8][1]++, 0.01),
      denoisingNoise:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[9][0]++, config.denoisingNoise) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[9][1]++, 0),
      // For denoising autoencoder
      variational:
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[10][0]++, config.variational) ||
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[10][1]++, false)
    }, config);

    // Set decoder layers as mirror of encoder if not specified
    /* istanbul ignore next */
    cov_15xmfir4i8().s[2]++;
    if (!this.config.decoderLayers) {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[11][0]++;
      cov_15xmfir4i8().s[3]++;
      this.config.decoderLayers = [...this.config.encoderLayers].reverse();
    } else
    /* istanbul ignore next */
    {
      cov_15xmfir4i8().b[11][1]++;
    }

    // Initialize network components
    cov_15xmfir4i8().s[4]++;
    this.encoderWeights = [];
    /* istanbul ignore next */
    cov_15xmfir4i8().s[5]++;
    this.encoderBiases = [];
    /* istanbul ignore next */
    cov_15xmfir4i8().s[6]++;
    this.decoderWeights = [];
    /* istanbul ignore next */
    cov_15xmfir4i8().s[7]++;
    this.decoderBiases = [];

    // For variational autoencoder
    /* istanbul ignore next */
    cov_15xmfir4i8().s[8]++;
    if (this.config.variational) {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[12][0]++;
      cov_15xmfir4i8().s[9]++;
      this.muLayer = null;
      /* istanbul ignore next */
      cov_15xmfir4i8().s[10]++;
      this.logVarLayer = null;
    } else
    /* istanbul ignore next */
    {
      cov_15xmfir4i8().b[12][1]++;
    }
    cov_15xmfir4i8().s[11]++;
    this.initializeWeights();
  }
  initializeWeights() {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[1]++;
    let lastSize =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[12]++, this.config.inputSize);

    // Initialize encoder layers
    /* istanbul ignore next */
    cov_15xmfir4i8().s[13]++;
    for (const units of this.config.encoderLayers) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[14]++;
      this.encoderWeights.push(this.createWeight([lastSize, units]));
      /* istanbul ignore next */
      cov_15xmfir4i8().s[15]++;
      this.encoderBiases.push(new Float32Array(units).fill(0));
      /* istanbul ignore next */
      cov_15xmfir4i8().s[16]++;
      lastSize = units;
    }

    // Bottleneck layer
    /* istanbul ignore next */
    cov_15xmfir4i8().s[17]++;
    if (this.config.variational) {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[13][0]++;
      cov_15xmfir4i8().s[18]++;
      // For VAE: separate layers for mean and log variance
      this.muLayer = {
        weight: this.createWeight([lastSize, this.config.bottleneckSize]),
        bias: new Float32Array(this.config.bottleneckSize).fill(0)
      };
      /* istanbul ignore next */
      cov_15xmfir4i8().s[19]++;
      this.logVarLayer = {
        weight: this.createWeight([lastSize, this.config.bottleneckSize]),
        bias: new Float32Array(this.config.bottleneckSize).fill(0)
      };
      /* istanbul ignore next */
      cov_15xmfir4i8().s[20]++;
      lastSize = this.config.bottleneckSize;
    } else {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[13][1]++;
      cov_15xmfir4i8().s[21]++;
      // Standard autoencoder bottleneck
      this.encoderWeights.push(this.createWeight([lastSize, this.config.bottleneckSize]));
      /* istanbul ignore next */
      cov_15xmfir4i8().s[22]++;
      this.encoderBiases.push(new Float32Array(this.config.bottleneckSize).fill(0));
      /* istanbul ignore next */
      cov_15xmfir4i8().s[23]++;
      lastSize = this.config.bottleneckSize;
    }

    // Initialize decoder layers
    /* istanbul ignore next */
    cov_15xmfir4i8().s[24]++;
    for (const units of this.config.decoderLayers) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[25]++;
      this.decoderWeights.push(this.createWeight([lastSize, units]));
      /* istanbul ignore next */
      cov_15xmfir4i8().s[26]++;
      this.decoderBiases.push(new Float32Array(units).fill(0));
      /* istanbul ignore next */
      cov_15xmfir4i8().s[27]++;
      lastSize = units;
    }

    // Output layer (reconstruction)
    /* istanbul ignore next */
    cov_15xmfir4i8().s[28]++;
    this.decoderWeights.push(this.createWeight([lastSize, this.config.inputSize]));
    /* istanbul ignore next */
    cov_15xmfir4i8().s[29]++;
    this.decoderBiases.push(new Float32Array(this.config.inputSize).fill(0));
  }
  createWeight(shape) {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[2]++;
    const size =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[30]++, shape.reduce((a, b) => {
      /* istanbul ignore next */
      cov_15xmfir4i8().f[3]++;
      cov_15xmfir4i8().s[31]++;
      return a * b;
    }, 1));
    const weight =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[32]++, new Float32Array(size));

    // Xavier/Glorot initialization
    const scale =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[33]++, Math.sqrt(2.0 / (shape[0] + shape[1])));
    /* istanbul ignore next */
    cov_15xmfir4i8().s[34]++;
    for (let i =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[35]++, 0); i < size; i++) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[36]++;
      weight[i] = (Math.random() * 2 - 1) * scale;
    }
    /* istanbul ignore next */
    cov_15xmfir4i8().s[37]++;
    weight.shape = shape;
    /* istanbul ignore next */
    cov_15xmfir4i8().s[38]++;
    return weight;
  }
  forward(
  /* istanbul ignore next */
  _x) {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* (input, training =
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[14][0]++, false)) {
      cov_15xmfir4i8().f[4]++;
      // Add noise for denoising autoencoder
      let x =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[39]++, input);
      cov_15xmfir4i8().s[40]++;
      if (
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[16][0]++, training) &&
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[16][1]++, _this.config.denoisingNoise > 0)) {
        /* istanbul ignore next */
        cov_15xmfir4i8().b[15][0]++;
        cov_15xmfir4i8().s[41]++;
        x = _this.addNoise(input, _this.config.denoisingNoise);
      } else
      /* istanbul ignore next */
      {
        cov_15xmfir4i8().b[15][1]++;
      }

      // Encode
      const encodingResult =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[42]++, yield _this.encode(x, training));

      // Decode
      const reconstruction =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[43]++, yield _this.decode(encodingResult.latent, training));
      cov_15xmfir4i8().s[44]++;
      return {
        reconstruction: reconstruction,
        latent: encodingResult.latent,
        mu: encodingResult.mu,
        logVar: encodingResult.logVar
      };
    }).apply(this, arguments);
  }
  encode(
  /* istanbul ignore next */
  _x2) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* (input, training =
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[17][0]++, false)) {
      cov_15xmfir4i8().f[5]++;
      let x =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[45]++, input);

      // Pass through encoder layers
      cov_15xmfir4i8().s[46]++;
      for (let i =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[47]++, 0); i < _this2.encoderWeights.length; i++) {
        /* istanbul ignore next */
        cov_15xmfir4i8().s[48]++;
        x = _this2.dense(x, _this2.encoderWeights[i], _this2.encoderBiases[i]);

        // Apply activation
        /* istanbul ignore next */
        cov_15xmfir4i8().s[49]++;
        if (_this2.config.activation === 'relu') {
          /* istanbul ignore next */
          cov_15xmfir4i8().b[18][0]++;
          cov_15xmfir4i8().s[50]++;
          x = _this2.relu(x);
        } else {
          /* istanbul ignore next */
          cov_15xmfir4i8().b[18][1]++;
          cov_15xmfir4i8().s[51]++;
          if (_this2.config.activation === 'tanh') {
            /* istanbul ignore next */
            cov_15xmfir4i8().b[19][0]++;
            cov_15xmfir4i8().s[52]++;
            x = _this2.tanh(x);
          } else {
            /* istanbul ignore next */
            cov_15xmfir4i8().b[19][1]++;
            cov_15xmfir4i8().s[53]++;
            if (_this2.config.activation === 'sigmoid') {
              /* istanbul ignore next */
              cov_15xmfir4i8().b[20][0]++;
              cov_15xmfir4i8().s[54]++;
              x = _this2.sigmoid(x);
            } else
            /* istanbul ignore next */
            {
              cov_15xmfir4i8().b[20][1]++;
            }
          }
        }

        // Apply dropout if training (except last layer)
        /* istanbul ignore next */
        cov_15xmfir4i8().s[55]++;
        if (
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[22][0]++, training) &&
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[22][1]++, _this2.config.dropoutRate > 0) &&
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[22][2]++, i < _this2.encoderWeights.length - 1)) {
          /* istanbul ignore next */
          cov_15xmfir4i8().b[21][0]++;
          cov_15xmfir4i8().s[56]++;
          x = _this2.dropout(x, _this2.config.dropoutRate);
        } else
        /* istanbul ignore next */
        {
          cov_15xmfir4i8().b[21][1]++;
        }
      }

      // Handle variational autoencoder
      cov_15xmfir4i8().s[57]++;
      if (_this2.config.variational) {
        /* istanbul ignore next */
        cov_15xmfir4i8().b[23][0]++;
        const mu =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[58]++, _this2.dense(x, _this2.muLayer.weight, _this2.muLayer.bias));
        const logVar =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[59]++, _this2.dense(x, _this2.logVarLayer.weight, _this2.logVarLayer.bias));

        // Reparameterization trick
        const latent =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[60]++, training ?
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[24][0]++, _this2.reparameterize(mu, logVar)) :
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[24][1]++, mu));
        /* istanbul ignore next */
        cov_15xmfir4i8().s[61]++;
        return {
          latent,
          mu,
          logVar
        };
      } else
      /* istanbul ignore next */
      {
        cov_15xmfir4i8().b[23][1]++;
      }
      cov_15xmfir4i8().s[62]++;
      return {
        latent: x,
        mu: null,
        logVar: null
      };
    }).apply(this, arguments);
  }
  decode(
  /* istanbul ignore next */
  _x3) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* (latent, training =
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[25][0]++, false)) {
      cov_15xmfir4i8().f[6]++;
      let x =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[63]++, latent);

      // Pass through decoder layers
      cov_15xmfir4i8().s[64]++;
      for (let i =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[65]++, 0); i < _this3.decoderWeights.length; i++) {
        /* istanbul ignore next */
        cov_15xmfir4i8().s[66]++;
        x = _this3.dense(x, _this3.decoderWeights[i], _this3.decoderBiases[i]);

        // Apply activation (use output activation for last layer)
        /* istanbul ignore next */
        cov_15xmfir4i8().s[67]++;
        if (i === _this3.decoderWeights.length - 1) {
          /* istanbul ignore next */
          cov_15xmfir4i8().b[26][0]++;
          cov_15xmfir4i8().s[68]++;
          if (_this3.config.outputActivation === 'sigmoid') {
            /* istanbul ignore next */
            cov_15xmfir4i8().b[27][0]++;
            cov_15xmfir4i8().s[69]++;
            x = _this3.sigmoid(x);
          } else {
            /* istanbul ignore next */
            cov_15xmfir4i8().b[27][1]++;
            cov_15xmfir4i8().s[70]++;
            if (_this3.config.outputActivation === 'tanh') {
              /* istanbul ignore next */
              cov_15xmfir4i8().b[28][0]++;
              cov_15xmfir4i8().s[71]++;
              x = _this3.tanh(x);
            } else
            /* istanbul ignore next */
            {
              cov_15xmfir4i8().b[28][1]++;
            }
          }
          // 'linear' means no activation
        } else {
          /* istanbul ignore next */
          cov_15xmfir4i8().b[26][1]++;
          cov_15xmfir4i8().s[72]++;
          // Hidden layers
          if (_this3.config.activation === 'relu') {
            /* istanbul ignore next */
            cov_15xmfir4i8().b[29][0]++;
            cov_15xmfir4i8().s[73]++;
            x = _this3.relu(x);
          } else {
            /* istanbul ignore next */
            cov_15xmfir4i8().b[29][1]++;
            cov_15xmfir4i8().s[74]++;
            if (_this3.config.activation === 'tanh') {
              /* istanbul ignore next */
              cov_15xmfir4i8().b[30][0]++;
              cov_15xmfir4i8().s[75]++;
              x = _this3.tanh(x);
            } else {
              /* istanbul ignore next */
              cov_15xmfir4i8().b[30][1]++;
              cov_15xmfir4i8().s[76]++;
              if (_this3.config.activation === 'sigmoid') {
                /* istanbul ignore next */
                cov_15xmfir4i8().b[31][0]++;
                cov_15xmfir4i8().s[77]++;
                x = _this3.sigmoid(x);
              } else
              /* istanbul ignore next */
              {
                cov_15xmfir4i8().b[31][1]++;
              }
            }
          }

          // Apply dropout if training
          /* istanbul ignore next */
          cov_15xmfir4i8().s[78]++;
          if (
          /* istanbul ignore next */
          (cov_15xmfir4i8().b[33][0]++, training) &&
          /* istanbul ignore next */
          (cov_15xmfir4i8().b[33][1]++, _this3.config.dropoutRate > 0)) {
            /* istanbul ignore next */
            cov_15xmfir4i8().b[32][0]++;
            cov_15xmfir4i8().s[79]++;
            x = _this3.dropout(x, _this3.config.dropoutRate);
          } else
          /* istanbul ignore next */
          {
            cov_15xmfir4i8().b[32][1]++;
          }
        }
      }
      cov_15xmfir4i8().s[80]++;
      return x;
    }).apply(this, arguments);
  }
  dense(input, weights, biases) {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[7]++;
    const [batchSize, inputSize] =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[81]++, input.shape);
    const outputSize =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[82]++, biases.length);
    const output =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[83]++, new Float32Array(batchSize * outputSize));
    /* istanbul ignore next */
    cov_15xmfir4i8().s[84]++;
    for (let b =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[85]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[86]++;
      for (let o =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[87]++, 0); o < outputSize; o++) {
        let sum =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[88]++, biases[o]);
        /* istanbul ignore next */
        cov_15xmfir4i8().s[89]++;
        for (let i =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[90]++, 0); i < inputSize; i++) {
          /* istanbul ignore next */
          cov_15xmfir4i8().s[91]++;
          sum += input[b * inputSize + i] * weights[i * outputSize + o];
        }
        /* istanbul ignore next */
        cov_15xmfir4i8().s[92]++;
        output[b * outputSize + o] = sum;
      }
    }
    /* istanbul ignore next */
    cov_15xmfir4i8().s[93]++;
    output.shape = [batchSize, outputSize];
    /* istanbul ignore next */
    cov_15xmfir4i8().s[94]++;
    return output;
  }
  addNoise(input, noiseLevel) {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[8]++;
    const noisy =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[95]++, new Float32Array(input.length));
    /* istanbul ignore next */
    cov_15xmfir4i8().s[96]++;
    for (let i =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[97]++, 0); i < input.length; i++) {
      // Add Gaussian noise
      const noise =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[98]++, (Math.random() - 0.5) * 2 * noiseLevel);
      /* istanbul ignore next */
      cov_15xmfir4i8().s[99]++;
      noisy[i] = Math.max(0, Math.min(1, input[i] + noise));
    }
    /* istanbul ignore next */
    cov_15xmfir4i8().s[100]++;
    noisy.shape = input.shape;
    /* istanbul ignore next */
    cov_15xmfir4i8().s[101]++;
    return noisy;
  }
  reparameterize(mu, logVar) {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[9]++;
    // VAE reparameterization trick: z = mu + sigma * epsilon
    const [batchSize, latentSize] =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[102]++, mu.shape);
    const z =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[103]++, new Float32Array(batchSize * latentSize));
    /* istanbul ignore next */
    cov_15xmfir4i8().s[104]++;
    for (let b =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[105]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[106]++;
      for (let l =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[107]++, 0); l < latentSize; l++) {
        const idx =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[108]++, b * latentSize + l);
        const epsilon =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[109]++, this.sampleGaussian()); // N(0, 1)
        const sigma =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[110]++, Math.exp(0.5 * logVar[idx]));
        /* istanbul ignore next */
        cov_15xmfir4i8().s[111]++;
        z[idx] = mu[idx] + sigma * epsilon;
      }
    }
    /* istanbul ignore next */
    cov_15xmfir4i8().s[112]++;
    z.shape = mu.shape;
    /* istanbul ignore next */
    cov_15xmfir4i8().s[113]++;
    return z;
  }
  sampleGaussian() {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[10]++;
    // Box-Muller transform for sampling from standard normal distribution
    let u =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[114]++, 0),
      v =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[115]++, 0);
    /* istanbul ignore next */
    cov_15xmfir4i8().s[116]++;
    while (u === 0) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[117]++;
      u = Math.random();
    }
    /* istanbul ignore next */
    cov_15xmfir4i8().s[118]++;
    while (v === 0) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[119]++;
      v = Math.random();
    }
    /* istanbul ignore next */
    cov_15xmfir4i8().s[120]++;
    return Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);
  }
  calculateLoss(input, output, mu =
  /* istanbul ignore next */
  (cov_15xmfir4i8().b[34][0]++, null), logVar =
  /* istanbul ignore next */
  (cov_15xmfir4i8().b[35][0]++, null)) {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[11]++;
    const [batchSize] =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[121]++, input.shape);

    // Reconstruction loss (MSE or binary cross-entropy)
    let reconstructionLoss =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[122]++, 0);
    /* istanbul ignore next */
    cov_15xmfir4i8().s[123]++;
    if (this.config.outputActivation === 'sigmoid') {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[36][0]++;
      cov_15xmfir4i8().s[124]++;
      // Binary cross-entropy for outputs in [0, 1]
      for (let i =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[125]++, 0); i < input.length; i++) {
        const epsilon =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[126]++, 1e-7);
        const pred =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[127]++, Math.max(epsilon, Math.min(1 - epsilon, output.reconstruction[i])));
        /* istanbul ignore next */
        cov_15xmfir4i8().s[128]++;
        reconstructionLoss -= input[i] * Math.log(pred) + (1 - input[i]) * Math.log(1 - pred);
      }
    } else {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[36][1]++;
      cov_15xmfir4i8().s[129]++;
      // MSE for continuous outputs
      for (let i =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[130]++, 0); i < input.length; i++) {
        const diff =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[131]++, input[i] - output.reconstruction[i]);
        /* istanbul ignore next */
        cov_15xmfir4i8().s[132]++;
        reconstructionLoss += diff * diff;
      }
    }
    /* istanbul ignore next */
    cov_15xmfir4i8().s[133]++;
    reconstructionLoss /= batchSize;

    // KL divergence for VAE
    let klLoss =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[134]++, 0);
    /* istanbul ignore next */
    cov_15xmfir4i8().s[135]++;
    if (
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[38][0]++, this.config.variational) &&
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[38][1]++, mu) &&
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[38][2]++, logVar)) {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[37][0]++;
      cov_15xmfir4i8().s[136]++;
      for (let i =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[137]++, 0); i < mu.length; i++) {
        /* istanbul ignore next */
        cov_15xmfir4i8().s[138]++;
        klLoss += -0.5 * (1 + logVar[i] - mu[i] * mu[i] - Math.exp(logVar[i]));
      }
      /* istanbul ignore next */
      cov_15xmfir4i8().s[139]++;
      klLoss /= batchSize;
    } else
    /* istanbul ignore next */
    {
      cov_15xmfir4i8().b[37][1]++;
    }

    // Sparsity regularization (encourage sparse activations)
    let sparsityLoss =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[140]++, 0);
    /* istanbul ignore next */
    cov_15xmfir4i8().s[141]++;
    if (this.config.sparseRegularization > 0) {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[39][0]++;
      const targetSparsity =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[142]++, 0.05); // Target average activation
      const latentMean =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[143]++, output.latent.reduce((a, b) => {
        /* istanbul ignore next */
        cov_15xmfir4i8().f[12]++;
        cov_15xmfir4i8().s[144]++;
        return a + b;
      }, 0) / output.latent.length);
      /* istanbul ignore next */
      cov_15xmfir4i8().s[145]++;
      sparsityLoss = this.config.sparseRegularization * Math.abs(latentMean - targetSparsity);
    } else
    /* istanbul ignore next */
    {
      cov_15xmfir4i8().b[39][1]++;
    }
    cov_15xmfir4i8().s[146]++;
    return {
      total: reconstructionLoss + klLoss + sparsityLoss,
      reconstruction: reconstructionLoss,
      kl: klLoss,
      sparsity: sparsityLoss
    };
  }
  train(
  /* istanbul ignore next */
  _x4) {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* (trainingData, options =
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[40][0]++, {})) {
      cov_15xmfir4i8().f[13]++;
      const {
        epochs =
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[41][0]++, 10),
        batchSize =
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[42][0]++, 32),
        learningRate =
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[43][0]++, 0.001),
        validationSplit =
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[44][0]++, 0.1),
        beta =
        /* istanbul ignore next */
        (cov_15xmfir4i8().b[45][0]++, 1.0) // Beta-VAE parameter
      } =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[147]++, options);
      const trainingHistory =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[148]++, []);

      // Split data
      const splitIndex =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[149]++, Math.floor(trainingData.length * (1 - validationSplit)));
      const trainData =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[150]++, trainingData.slice(0, splitIndex));
      const valData =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[151]++, trainingData.slice(splitIndex));
      cov_15xmfir4i8().s[152]++;
      for (let epoch =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[153]++, 0); epoch < epochs; epoch++) {
        let epochLoss =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[154]++, 0);
        let epochReconLoss =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[155]++, 0);
        let epochKLLoss =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[156]++, 0);
        let batchCount =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[157]++, 0);

        // Shuffle training data
        const shuffled =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[158]++, _this4.shuffle(trainData));

        // Process batches
        /* istanbul ignore next */
        cov_15xmfir4i8().s[159]++;
        for (let i =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[160]++, 0); i < shuffled.length; i += batchSize) {
          const batch =
          /* istanbul ignore next */
          (cov_15xmfir4i8().s[161]++, shuffled.slice(i, Math.min(i + batchSize, shuffled.length)));

          // Prepare batch input
          const batchInput =
          /* istanbul ignore next */
          (cov_15xmfir4i8().s[162]++, {
            data: batch.inputs,
            shape: [batch.inputs.length, _this4.config.inputSize]
          });
          /* istanbul ignore next */
          cov_15xmfir4i8().s[163]++;
          batchInput.data.shape = batchInput.shape;

          // Forward pass
          const output =
          /* istanbul ignore next */
          (cov_15xmfir4i8().s[164]++, yield _this4.forward(batchInput.data, true));

          // Calculate losses
          const losses =
          /* istanbul ignore next */
          (cov_15xmfir4i8().s[165]++, _this4.calculateLoss(batchInput.data, output, output.mu, output.logVar));

          // Apply beta weighting for VAE
          const totalLoss =
          /* istanbul ignore next */
          (cov_15xmfir4i8().s[166]++, losses.reconstruction + beta * losses.kl + losses.sparsity);
          /* istanbul ignore next */
          cov_15xmfir4i8().s[167]++;
          epochLoss += totalLoss;
          /* istanbul ignore next */
          cov_15xmfir4i8().s[168]++;
          epochReconLoss += losses.reconstruction;
          /* istanbul ignore next */
          cov_15xmfir4i8().s[169]++;
          epochKLLoss += losses.kl;

          // Backward pass
          /* istanbul ignore next */
          cov_15xmfir4i8().s[170]++;
          /* istanbul ignore next */
          yield _this4.backward(totalLoss, learningRate);
          /* istanbul ignore next */
          cov_15xmfir4i8().s[171]++;
          batchCount++;
        }

        // Validation
        const valLosses =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[172]++, yield _this4.evaluate(valData));
        const avgTrainLoss =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[173]++, epochLoss / batchCount);
        const avgReconLoss =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[174]++, epochReconLoss / batchCount);
        const avgKLLoss =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[175]++, epochKLLoss / batchCount);
        const historyEntry =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[176]++, {
          epoch: epoch + 1,
          trainLoss: avgTrainLoss,
          reconstructionLoss: avgReconLoss,
          klLoss: avgKLLoss,
          valLoss: valLosses.total,
          valReconstructionLoss: valLosses.reconstruction
        });
        /* istanbul ignore next */
        cov_15xmfir4i8().s[177]++;
        trainingHistory.push(historyEntry);
        /* istanbul ignore next */
        cov_15xmfir4i8().s[178]++;
        console.log(`Epoch ${epoch + 1}/${epochs} - ` + `Loss: ${avgTrainLoss.toFixed(4)} ` + `(Recon: ${avgReconLoss.toFixed(4)}, ` + `KL: ${avgKLLoss.toFixed(4)}) - ` + `Val Loss: ${valLosses.total.toFixed(4)}`);
        /* istanbul ignore next */
        cov_15xmfir4i8().s[179]++;
        _this4.updateMetrics(avgTrainLoss);
      }
      cov_15xmfir4i8().s[180]++;
      return {
        history: trainingHistory,
        finalLoss: trainingHistory[trainingHistory.length - 1].trainLoss,
        modelType: 'autoencoder'
      };
    }).apply(this, arguments);
  }
  evaluate(data) {
    /* istanbul ignore next */
    var _this5 = this;
    return _asyncToGenerator(function* () {
      cov_15xmfir4i8().f[14]++;
      let totalLoss =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[181]++, 0);
      let reconLoss =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[182]++, 0);
      let klLoss =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[183]++, 0);
      let batchCount =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[184]++, 0);
      cov_15xmfir4i8().s[185]++;
      for (const batch of data) {
        const batchInput =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[186]++, {
          data: batch.inputs,
          shape: [batch.inputs.length, _this5.config.inputSize]
        });
        /* istanbul ignore next */
        cov_15xmfir4i8().s[187]++;
        batchInput.data.shape = batchInput.shape;
        const output =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[188]++, yield _this5.forward(batchInput.data, false));
        const losses =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[189]++, _this5.calculateLoss(batchInput.data, output, output.mu, output.logVar));
        /* istanbul ignore next */
        cov_15xmfir4i8().s[190]++;
        totalLoss += losses.total;
        /* istanbul ignore next */
        cov_15xmfir4i8().s[191]++;
        reconLoss += losses.reconstruction;
        /* istanbul ignore next */
        cov_15xmfir4i8().s[192]++;
        klLoss += losses.kl;
        /* istanbul ignore next */
        cov_15xmfir4i8().s[193]++;
        batchCount++;
      }
      cov_15xmfir4i8().s[194]++;
      return {
        total: totalLoss / batchCount,
        reconstruction: reconLoss / batchCount,
        kl: klLoss / batchCount
      };
    })();
  }

  // Get only the encoder part for feature extraction
  getEncoder() {
    /* istanbul ignore next */
    var _this6 = this;
    return _asyncToGenerator(function* () {
      cov_15xmfir4i8().f[15]++;
      cov_15xmfir4i8().s[195]++;
      return {
        encode:
        /* istanbul ignore next */
        function () {
          var _ref = _asyncToGenerator(function* (input) {
            /* istanbul ignore next */
            cov_15xmfir4i8().f[16]++;
            const result =
            /* istanbul ignore next */
            (cov_15xmfir4i8().s[196]++, yield _this6.encode(input, false));
            /* istanbul ignore next */
            cov_15xmfir4i8().s[197]++;
            return result.latent;
          });
          return function encode(_x5) {
            return _ref.apply(this, arguments);
          };
        }(),
        config: {
          inputSize: _this6.config.inputSize,
          bottleneckSize: _this6.config.bottleneckSize,
          layers: _this6.config.encoderLayers
        }
      };
    })();
  }

  // Get only the decoder part for generation
  getDecoder() {
    /* istanbul ignore next */
    var _this7 = this;
    return _asyncToGenerator(function* () {
      cov_15xmfir4i8().f[17]++;
      cov_15xmfir4i8().s[198]++;
      return {
        decode:
        /* istanbul ignore next */
        function () {
          var _ref2 = _asyncToGenerator(function* (latent) {
            /* istanbul ignore next */
            cov_15xmfir4i8().f[18]++;
            cov_15xmfir4i8().s[199]++;
            return /* istanbul ignore next */yield _this7.decode(latent, false);
          });
          return function decode(_x6) {
            return _ref2.apply(this, arguments);
          };
        }(),
        config: {
          bottleneckSize: _this7.config.bottleneckSize,
          outputSize: _this7.config.inputSize,
          layers: _this7.config.decoderLayers
        }
      };
    })();
  }

  // Generate new samples (for VAE)
  generate() {
    /* istanbul ignore next */
    var _this8 = this;
    return _asyncToGenerator(function* (numSamples =
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[46][0]++, 1)) {
      cov_15xmfir4i8().f[19]++;
      cov_15xmfir4i8().s[200]++;
      if (!_this8.config.variational) {
        /* istanbul ignore next */
        cov_15xmfir4i8().b[47][0]++;
        cov_15xmfir4i8().s[201]++;
        throw new Error('Generation is only available for variational autoencoders');
      } else
      /* istanbul ignore next */
      {
        cov_15xmfir4i8().b[47][1]++;
      }

      // Sample from standard normal distribution
      const latent =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[202]++, new Float32Array(numSamples * _this8.config.bottleneckSize));
      cov_15xmfir4i8().s[203]++;
      for (let i =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[204]++, 0); i < latent.length; i++) {
        /* istanbul ignore next */
        cov_15xmfir4i8().s[205]++;
        latent[i] = _this8.sampleGaussian();
      }
      cov_15xmfir4i8().s[206]++;
      latent.shape = [numSamples, _this8.config.bottleneckSize];

      // Decode to generate samples
      cov_15xmfir4i8().s[207]++;
      return /* istanbul ignore next */yield _this8.decode(latent, false);
    }).apply(this, arguments);
  }

  // Interpolate between two inputs
  interpolate(
  /* istanbul ignore next */
  _x7,
  /* istanbul ignore next */
  _x8) {
    /* istanbul ignore next */
    var _this9 = this;
    return _asyncToGenerator(function* (input1, input2, steps =
    /* istanbul ignore next */
    (cov_15xmfir4i8().b[48][0]++, 10)) {
      cov_15xmfir4i8().f[20]++;
      // Encode both inputs
      const encoded1 =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[208]++, yield _this9.encode(input1, false));
      const encoded2 =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[209]++, yield _this9.encode(input2, false));
      const interpolations =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[210]++, []);
      cov_15xmfir4i8().s[211]++;
      for (let step =
      /* istanbul ignore next */
      (cov_15xmfir4i8().s[212]++, 0); step <= steps; step++) {
        const alpha =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[213]++, step / steps);
        const interpolatedLatent =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[214]++, new Float32Array(encoded1.latent.length));

        // Linear interpolation in latent space
        /* istanbul ignore next */
        cov_15xmfir4i8().s[215]++;
        for (let i =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[216]++, 0); i < interpolatedLatent.length; i++) {
          /* istanbul ignore next */
          cov_15xmfir4i8().s[217]++;
          interpolatedLatent[i] = (1 - alpha) * encoded1.latent[i] + alpha * encoded2.latent[i];
        }
        /* istanbul ignore next */
        cov_15xmfir4i8().s[218]++;
        interpolatedLatent.shape = encoded1.latent.shape;

        // Decode interpolated latent vector
        const decoded =
        /* istanbul ignore next */
        (cov_15xmfir4i8().s[219]++, yield _this9.decode(interpolatedLatent, false));
        /* istanbul ignore next */
        cov_15xmfir4i8().s[220]++;
        interpolations.push(decoded);
      }
      cov_15xmfir4i8().s[221]++;
      return interpolations;
    }).apply(this, arguments);
  }
  getConfig() {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[21]++;
    cov_15xmfir4i8().s[222]++;
    return /* istanbul ignore next */_objectSpread(_objectSpread({
      type: 'autoencoder',
      variant: this.config.variational ?
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[49][0]++, 'variational') :
      /* istanbul ignore next */
      (cov_15xmfir4i8().b[49][1]++, 'standard')
    }, this.config), {}, {
      parameters: this.countParameters()
    });
  }
  countParameters() {
    /* istanbul ignore next */
    cov_15xmfir4i8().f[22]++;
    let count =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[223]++, 0);

    // Encoder parameters
    /* istanbul ignore next */
    cov_15xmfir4i8().s[224]++;
    for (let i =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[225]++, 0); i < this.encoderWeights.length; i++) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[226]++;
      count += this.encoderWeights[i].length;
      /* istanbul ignore next */
      cov_15xmfir4i8().s[227]++;
      count += this.encoderBiases[i].length;
    }

    // VAE-specific parameters
    /* istanbul ignore next */
    cov_15xmfir4i8().s[228]++;
    if (this.config.variational) {
      /* istanbul ignore next */
      cov_15xmfir4i8().b[50][0]++;
      cov_15xmfir4i8().s[229]++;
      count += this.muLayer.weight.length + this.muLayer.bias.length;
      /* istanbul ignore next */
      cov_15xmfir4i8().s[230]++;
      count += this.logVarLayer.weight.length + this.logVarLayer.bias.length;
    } else
    /* istanbul ignore next */
    {
      cov_15xmfir4i8().b[50][1]++;
    }

    // Decoder parameters
    cov_15xmfir4i8().s[231]++;
    for (let i =
    /* istanbul ignore next */
    (cov_15xmfir4i8().s[232]++, 0); i < this.decoderWeights.length; i++) {
      /* istanbul ignore next */
      cov_15xmfir4i8().s[233]++;
      count += this.decoderWeights[i].length;
      /* istanbul ignore next */
      cov_15xmfir4i8().s[234]++;
      count += this.decoderBiases[i].length;
    }
    /* istanbul ignore next */
    cov_15xmfir4i8().s[235]++;
    return count;
  }
}
export { AutoencoderModel };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,