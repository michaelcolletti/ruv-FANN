af5cb73eb029f90bfed3ba6fb68ccd3c
/* istanbul ignore next */
function cov_26bqpx635b() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/lstm.js";
  var hash = "593bdb3339066d593692735aafc71f0fa376b597";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/lstm.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 18
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "2": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "3": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "4": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "5": {
        start: {
          line: 33,
          column: 26
        },
        end: {
          line: 33,
          column: 59
        }
      },
      "6": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "7": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 22
        }
      },
      "8": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "9": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 27
        }
      },
      "10": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 66,
          column: 7
        }
      },
      "11": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 22
        }
      },
      "12": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "13": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 34
        }
      },
      "14": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 74,
          column: 44
        }
      },
      "15": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "16": {
        start: {
          line: 83,
          column: 17
        },
        end: {
          line: 83,
          column: 49
        }
      },
      "17": {
        start: {
          line: 83,
          column: 40
        },
        end: {
          line: 83,
          column: 45
        }
      },
      "18": {
        start: {
          line: 84,
          column: 19
        },
        end: {
          line: 84,
          column: 41
        }
      },
      "19": {
        start: {
          line: 87,
          column: 18
        },
        end: {
          line: 87,
          column: 56
        }
      },
      "20": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "21": {
        start: {
          line: 88,
          column: 17
        },
        end: {
          line: 88,
          column: 18
        }
      },
      "22": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 50
        }
      },
      "23": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 25
        }
      },
      "24": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 18
        }
      },
      "25": {
        start: {
          line: 97,
          column: 22
        },
        end: {
          line: 97,
          column: 36
        }
      },
      "26": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 98,
          column: 41
        }
      },
      "27": {
        start: {
          line: 99,
          column: 22
        },
        end: {
          line: 99,
          column: 36
        }
      },
      "28": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 26
        }
      },
      "29": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 102,
          column: 28
        }
      },
      "30": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "31": {
        start: {
          line: 105,
          column: 21
        },
        end: {
          line: 105,
          column: 22
        }
      },
      "32": {
        start: {
          line: 106,
          column: 44
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "33": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 32
        }
      },
      "34": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "35": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "36": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 48
        }
      },
      "37": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 60
        }
      },
      "38": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 129,
          column: 8
        }
      },
      "39": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "40": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 36
        }
      },
      "41": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 137,
          column: 41
        }
      },
      "42": {
        start: {
          line: 138,
          column: 18
        },
        end: {
          line: 138,
          column: 38
        }
      },
      "43": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 165,
          column: 5
        }
      },
      "44": {
        start: {
          line: 142,
          column: 28
        },
        end: {
          line: 144,
          column: 7
        }
      },
      "45": {
        start: {
          line: 145,
          column: 29
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "46": {
        start: {
          line: 150,
          column: 27
        },
        end: {
          line: 153,
          column: 7
        }
      },
      "47": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 161,
          column: 8
        }
      },
      "48": {
        start: {
          line: 164,
          column: 6
        },
        end: {
          line: 164,
          column: 75
        }
      },
      "49": {
        start: {
          line: 169,
          column: 22
        },
        end: {
          line: 169,
          column: 36
        }
      },
      "50": {
        start: {
          line: 170,
          column: 27
        },
        end: {
          line: 170,
          column: 41
        }
      },
      "51": {
        start: {
          line: 171,
          column: 21
        },
        end: {
          line: 171,
          column: 35
        }
      },
      "52": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 72
        }
      },
      "53": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 72
        }
      },
      "54": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 50
        }
      },
      "55": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 50
        }
      },
      "56": {
        start: {
          line: 179,
          column: 25
        },
        end: {
          line: 179,
          column: 27
        }
      },
      "57": {
        start: {
          line: 182,
          column: 18
        },
        end: {
          line: 184,
          column: 55
        }
      },
      "58": {
        start: {
          line: 183,
          column: 53
        },
        end: {
          line: 183,
          column: 75
        }
      },
      "59": {
        start: {
          line: 184,
          column: 53
        },
        end: {
          line: 184,
          column: 54
        }
      },
      "60": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "61": {
        start: {
          line: 188,
          column: 17
        },
        end: {
          line: 188,
          column: 55
        }
      },
      "62": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "63": {
        start: {
          line: 189,
          column: 19
        },
        end: {
          line: 189,
          column: 20
        }
      },
      "64": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "65": {
        start: {
          line: 190,
          column: 21
        },
        end: {
          line: 190,
          column: 22
        }
      },
      "66": {
        start: {
          line: 191,
          column: 10
        },
        end: {
          line: 191,
          column: 89
        }
      },
      "67": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 39
        }
      },
      "68": {
        start: {
          line: 197,
          column: 35
        },
        end: {
          line: 197,
          column: 64
        }
      },
      "69": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 204,
          column: 7
        }
      },
      "70": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 56
        }
      },
      "71": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 17
        }
      },
      "72": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 15
        }
      },
      "73": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 207,
          column: 27
        }
      },
      "74": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "75": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 212,
          column: 29
        }
      },
      "76": {
        start: {
          line: 216,
          column: 26
        },
        end: {
          line: 216,
          column: 89
        }
      },
      "77": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 222,
          column: 6
        }
      },
      "78": {
        start: {
          line: 226,
          column: 22
        },
        end: {
          line: 226,
          column: 32
        }
      },
      "79": {
        start: {
          line: 229,
          column: 14
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "80": {
        start: {
          line: 240,
          column: 14
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "81": {
        start: {
          line: 251,
          column: 19
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "82": {
        start: {
          line: 262,
          column: 14
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "83": {
        start: {
          line: 268,
          column: 14
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "84": {
        start: {
          line: 279,
          column: 14
        },
        end: {
          line: 279,
          column: 55
        }
      },
      "85": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 281,
          column: 20
        }
      },
      "86": {
        start: {
          line: 286,
          column: 22
        },
        end: {
          line: 286,
          column: 36
        }
      },
      "87": {
        start: {
          line: 287,
          column: 21
        },
        end: {
          line: 287,
          column: 36
        }
      },
      "88": {
        start: {
          line: 288,
          column: 22
        },
        end: {
          line: 288,
          column: 37
        }
      },
      "89": {
        start: {
          line: 290,
          column: 19
        },
        end: {
          line: 290,
          column: 58
        }
      },
      "90": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "91": {
        start: {
          line: 292,
          column: 17
        },
        end: {
          line: 292,
          column: 18
        }
      },
      "92": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 299,
          column: 7
        }
      },
      "93": {
        start: {
          line: 293,
          column: 21
        },
        end: {
          line: 293,
          column: 22
        }
      },
      "94": {
        start: {
          line: 294,
          column: 18
        },
        end: {
          line: 294,
          column: 19
        }
      },
      "95": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "96": {
        start: {
          line: 295,
          column: 23
        },
        end: {
          line: 295,
          column: 24
        }
      },
      "97": {
        start: {
          line: 296,
          column: 10
        },
        end: {
          line: 296,
          column: 75
        }
      },
      "98": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 42
        }
      },
      "99": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 302,
          column: 42
        }
      },
      "100": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 303,
          column: 18
        }
      },
      "101": {
        start: {
          line: 307,
          column: 19
        },
        end: {
          line: 307,
          column: 45
        }
      },
      "102": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "103": {
        start: {
          line: 308,
          column: 17
        },
        end: {
          line: 308,
          column: 18
        }
      },
      "104": {
        start: {
          line: 309,
          column: 6
        },
        end: {
          line: 309,
          column: 30
        }
      },
      "105": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 311,
          column: 27
        }
      },
      "106": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 18
        }
      },
      "107": {
        start: {
          line: 316,
          column: 23
        },
        end: {
          line: 316,
          column: 41
        }
      },
      "108": {
        start: {
          line: 317,
          column: 20
        },
        end: {
          line: 317,
          column: 77
        }
      },
      "109": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "110": {
        start: {
          line: 319,
          column: 17
        },
        end: {
          line: 319,
          column: 18
        }
      },
      "111": {
        start: {
          line: 320,
          column: 20
        },
        end: {
          line: 320,
          column: 29
        }
      },
      "112": {
        start: {
          line: 321,
          column: 6
        },
        end: {
          line: 326,
          column: 7
        }
      },
      "113": {
        start: {
          line: 321,
          column: 19
        },
        end: {
          line: 321,
          column: 20
        }
      },
      "114": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "115": {
        start: {
          line: 322,
          column: 21
        },
        end: {
          line: 322,
          column: 22
        }
      },
      "116": {
        start: {
          line: 323,
          column: 10
        },
        end: {
          line: 324,
          column: 38
        }
      },
      "117": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 60
        }
      },
      "118": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 330,
          column: 19
        }
      },
      "119": {
        start: {
          line: 334,
          column: 18
        },
        end: {
          line: 334,
          column: 37
        }
      },
      "120": {
        start: {
          line: 335,
          column: 22
        },
        end: {
          line: 335,
          column: 30
        }
      },
      "121": {
        start: {
          line: 336,
          column: 27
        },
        end: {
          line: 336,
          column: 35
        }
      },
      "122": {
        start: {
          line: 337,
          column: 23
        },
        end: {
          line: 337,
          column: 31
        }
      },
      "123": {
        start: {
          line: 339,
          column: 25
        },
        end: {
          line: 339,
          column: 86
        }
      },
      "124": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "125": {
        start: {
          line: 341,
          column: 17
        },
        end: {
          line: 341,
          column: 18
        }
      },
      "126": {
        start: {
          line: 342,
          column: 6
        },
        end: {
          line: 353,
          column: 7
        }
      },
      "127": {
        start: {
          line: 342,
          column: 19
        },
        end: {
          line: 342,
          column: 20
        }
      },
      "128": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "129": {
        start: {
          line: 344,
          column: 21
        },
        end: {
          line: 344,
          column: 22
        }
      },
      "130": {
        start: {
          line: 345,
          column: 10
        },
        end: {
          line: 346,
          column: 80
        }
      },
      "131": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 352,
          column: 9
        }
      },
      "132": {
        start: {
          line: 349,
          column: 21
        },
        end: {
          line: 349,
          column: 22
        }
      },
      "133": {
        start: {
          line: 350,
          column: 10
        },
        end: {
          line: 351,
          column: 81
        }
      },
      "134": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 356,
          column: 69
        }
      },
      "135": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 357,
          column: 24
        }
      },
      "136": {
        start: {
          line: 361,
          column: 18
        },
        end: {
          line: 361,
          column: 36
        }
      },
      "137": {
        start: {
          line: 362,
          column: 22
        },
        end: {
          line: 362,
          column: 30
        }
      },
      "138": {
        start: {
          line: 363,
          column: 27
        },
        end: {
          line: 363,
          column: 35
        }
      },
      "139": {
        start: {
          line: 364,
          column: 23
        },
        end: {
          line: 364,
          column: 31
        }
      },
      "140": {
        start: {
          line: 366,
          column: 23
        },
        end: {
          line: 366,
          column: 63
        }
      },
      "141": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 373,
          column: 5
        }
      },
      "142": {
        start: {
          line: 368,
          column: 17
        },
        end: {
          line: 368,
          column: 18
        }
      },
      "143": {
        start: {
          line: 369,
          column: 6
        },
        end: {
          line: 372,
          column: 7
        }
      },
      "144": {
        start: {
          line: 369,
          column: 19
        },
        end: {
          line: 369,
          column: 20
        }
      },
      "145": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 371,
          column: 96
        }
      },
      "146": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 375,
          column: 47
        }
      },
      "147": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 376,
          column: 22
        }
      },
      "148": {
        start: {
          line: 380,
          column: 18
        },
        end: {
          line: 380,
          column: 36
        }
      },
      "149": {
        start: {
          line: 381,
          column: 22
        },
        end: {
          line: 381,
          column: 30
        }
      },
      "150": {
        start: {
          line: 382,
          column: 27
        },
        end: {
          line: 382,
          column: 35
        }
      },
      "151": {
        start: {
          line: 383,
          column: 23
        },
        end: {
          line: 383,
          column: 31
        }
      },
      "152": {
        start: {
          line: 385,
          column: 19
        },
        end: {
          line: 385,
          column: 88
        }
      },
      "153": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "154": {
        start: {
          line: 387,
          column: 17
        },
        end: {
          line: 387,
          column: 18
        }
      },
      "155": {
        start: {
          line: 388,
          column: 6
        },
        end: {
          line: 403,
          column: 7
        }
      },
      "156": {
        start: {
          line: 388,
          column: 19
        },
        end: {
          line: 388,
          column: 20
        }
      },
      "157": {
        start: {
          line: 390,
          column: 18
        },
        end: {
          line: 390,
          column: 46
        }
      },
      "158": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "159": {
        start: {
          line: 391,
          column: 21
        },
        end: {
          line: 391,
          column: 22
        }
      },
      "160": {
        start: {
          line: 392,
          column: 10
        },
        end: {
          line: 392,
          column: 84
        }
      },
      "161": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 34
        }
      },
      "162": {
        start: {
          line: 397,
          column: 20
        },
        end: {
          line: 397,
          column: 91
        }
      },
      "163": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "164": {
        start: {
          line: 400,
          column: 21
        },
        end: {
          line: 400,
          column: 22
        }
      },
      "165": {
        start: {
          line: 401,
          column: 10
        },
        end: {
          line: 401,
          column: 104
        }
      },
      "166": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 406,
          column: 71
        }
      },
      "167": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 407,
          column: 18
        }
      },
      "168": {
        start: {
          line: 411,
          column: 22
        },
        end: {
          line: 411,
          column: 54
        }
      },
      "169": {
        start: {
          line: 412,
          column: 21
        },
        end: {
          line: 412,
          column: 36
        }
      },
      "170": {
        start: {
          line: 413,
          column: 22
        },
        end: {
          line: 413,
          column: 37
        }
      },
      "171": {
        start: {
          line: 415,
          column: 19
        },
        end: {
          line: 415,
          column: 58
        }
      },
      "172": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 425,
          column: 5
        }
      },
      "173": {
        start: {
          line: 417,
          column: 17
        },
        end: {
          line: 417,
          column: 18
        }
      },
      "174": {
        start: {
          line: 418,
          column: 6
        },
        end: {
          line: 424,
          column: 7
        }
      },
      "175": {
        start: {
          line: 418,
          column: 21
        },
        end: {
          line: 418,
          column: 22
        }
      },
      "176": {
        start: {
          line: 419,
          column: 18
        },
        end: {
          line: 419,
          column: 27
        }
      },
      "177": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "178": {
        start: {
          line: 420,
          column: 23
        },
        end: {
          line: 420,
          column: 24
        }
      },
      "179": {
        start: {
          line: 421,
          column: 10
        },
        end: {
          line: 421,
          column: 75
        }
      },
      "180": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 42
        }
      },
      "181": {
        start: {
          line: 427,
          column: 4
        },
        end: {
          line: 427,
          column: 42
        }
      },
      "182": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 428,
          column: 18
        }
      },
      "183": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 15
        }
      },
      "184": {
        start: {
          line: 440,
          column: 28
        },
        end: {
          line: 440,
          column: 30
        }
      },
      "185": {
        start: {
          line: 443,
          column: 23
        },
        end: {
          line: 443,
          column: 78
        }
      },
      "186": {
        start: {
          line: 444,
          column: 22
        },
        end: {
          line: 444,
          column: 55
        }
      },
      "187": {
        start: {
          line: 445,
          column: 20
        },
        end: {
          line: 445,
          column: 50
        }
      },
      "188": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 483,
          column: 5
        }
      },
      "189": {
        start: {
          line: 447,
          column: 21
        },
        end: {
          line: 447,
          column: 22
        }
      },
      "190": {
        start: {
          line: 448,
          column: 22
        },
        end: {
          line: 448,
          column: 23
        }
      },
      "191": {
        start: {
          line: 449,
          column: 23
        },
        end: {
          line: 449,
          column: 24
        }
      },
      "192": {
        start: {
          line: 452,
          column: 23
        },
        end: {
          line: 452,
          column: 46
        }
      },
      "193": {
        start: {
          line: 455,
          column: 6
        },
        end: {
          line: 469,
          column: 7
        }
      },
      "194": {
        start: {
          line: 455,
          column: 19
        },
        end: {
          line: 455,
          column: 20
        }
      },
      "195": {
        start: {
          line: 456,
          column: 22
        },
        end: {
          line: 456,
          column: 81
        }
      },
      "196": {
        start: {
          line: 459,
          column: 28
        },
        end: {
          line: 459,
          column: 66
        }
      },
      "197": {
        start: {
          line: 462,
          column: 21
        },
        end: {
          line: 462,
          column: 75
        }
      },
      "198": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 26
        }
      },
      "199": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 466,
          column: 66
        }
      },
      "200": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 21
        }
      },
      "201": {
        start: {
          line: 472,
          column: 22
        },
        end: {
          line: 472,
          column: 59
        }
      },
      "202": {
        start: {
          line: 474,
          column: 27
        },
        end: {
          line: 474,
          column: 49
        }
      },
      "203": {
        start: {
          line: 475,
          column: 6
        },
        end: {
          line: 480,
          column: 9
        }
      },
      "204": {
        start: {
          line: 482,
          column: 6
        },
        end: {
          line: 482,
          column: 124
        }
      },
      "205": {
        start: {
          line: 485,
          column: 4
        },
        end: {
          line: 490,
          column: 6
        }
      },
      "206": {
        start: {
          line: 494,
          column: 4
        },
        end: {
          line: 500,
          column: 5
        }
      },
      "207": {
        start: {
          line: 496,
          column: 6
        },
        end: {
          line: 496,
          column: 57
        }
      },
      "208": {
        start: {
          line: 499,
          column: 6
        },
        end: {
          line: 499,
          column: 57
        }
      },
      "209": {
        start: {
          line: 504,
          column: 20
        },
        end: {
          line: 504,
          column: 21
        }
      },
      "210": {
        start: {
          line: 505,
          column: 21
        },
        end: {
          line: 505,
          column: 22
        }
      },
      "211": {
        start: {
          line: 507,
          column: 4
        },
        end: {
          line: 512,
          column: 5
        }
      },
      "212": {
        start: {
          line: 508,
          column: 26
        },
        end: {
          line: 508,
          column: 65
        }
      },
      "213": {
        start: {
          line: 509,
          column: 19
        },
        end: {
          line: 509,
          column: 73
        }
      },
      "214": {
        start: {
          line: 510,
          column: 6
        },
        end: {
          line: 510,
          column: 24
        }
      },
      "215": {
        start: {
          line: 511,
          column: 6
        },
        end: {
          line: 511,
          column: 19
        }
      },
      "216": {
        start: {
          line: 514,
          column: 4
        },
        end: {
          line: 514,
          column: 34
        }
      },
      "217": {
        start: {
          line: 518,
          column: 4
        },
        end: {
          line: 522,
          column: 6
        }
      },
      "218": {
        start: {
          line: 526,
          column: 16
        },
        end: {
          line: 526,
          column: 17
        }
      },
      "219": {
        start: {
          line: 527,
          column: 26
        },
        end: {
          line: 527,
          column: 59
        }
      },
      "220": {
        start: {
          line: 530,
          column: 4
        },
        end: {
          line: 542,
          column: 5
        }
      },
      "221": {
        start: {
          line: 530,
          column: 21
        },
        end: {
          line: 530,
          column: 22
        }
      },
      "222": {
        start: {
          line: 531,
          column: 23
        },
        end: {
          line: 533,
          column: 46
        }
      },
      "223": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 539,
          column: 36
        }
      },
      "224": {
        start: {
          line: 541,
          column: 6
        },
        end: {
          line: 541,
          column: 50
        }
      },
      "225": {
        start: {
          line: 545,
          column: 4
        },
        end: {
          line: 545,
          column: 75
        }
      },
      "226": {
        start: {
          line: 547,
          column: 4
        },
        end: {
          line: 547,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 22
          },
          end: {
            line: 80,
            column: 3
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 82,
            column: 3
          }
        },
        loc: {
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 94,
            column: 3
          }
        },
        line: 82
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 83,
            column: 30
          },
          end: {
            line: 83,
            column: 31
          }
        },
        loc: {
          start: {
            line: 83,
            column: 40
          },
          end: {
            line: 83,
            column: 45
          }
        },
        line: 83
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 96,
            column: 2
          },
          end: {
            line: 96,
            column: 3
          }
        },
        loc: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 133,
            column: 3
          }
        },
        line: 96
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 135,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        loc: {
          start: {
            line: 135,
            column: 56
          },
          end: {
            line: 166,
            column: 3
          }
        },
        line: 135
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 2
          },
          end: {
            line: 168,
            column: 3
          }
        },
        loc: {
          start: {
            line: 168,
            column: 73
          },
          end: {
            line: 223,
            column: 3
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 183,
            column: 43
          },
          end: {
            line: 183,
            column: 44
          }
        },
        loc: {
          start: {
            line: 183,
            column: 53
          },
          end: {
            line: 183,
            column: 75
          }
        },
        line: 183
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 184,
            column: 43
          },
          end: {
            line: 184,
            column: 44
          }
        },
        loc: {
          start: {
            line: 184,
            column: 53
          },
          end: {
            line: 184,
            column: 54
          }
        },
        line: 184
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 225,
            column: 2
          },
          end: {
            line: 225,
            column: 3
          }
        },
        loc: {
          start: {
            line: 225,
            column: 34
          },
          end: {
            line: 282,
            column: 3
          }
        },
        line: 225
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 284,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        },
        loc: {
          start: {
            line: 284,
            column: 29
          },
          end: {
            line: 304,
            column: 3
          }
        },
        line: 284
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 306,
            column: 2
          },
          end: {
            line: 306,
            column: 3
          }
        },
        loc: {
          start: {
            line: 306,
            column: 28
          },
          end: {
            line: 313,
            column: 3
          }
        },
        line: 306
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 315,
            column: 2
          },
          end: {
            line: 315,
            column: 3
          }
        },
        loc: {
          start: {
            line: 315,
            column: 55
          },
          end: {
            line: 331,
            column: 3
          }
        },
        line: 315
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 333,
            column: 2
          },
          end: {
            line: 333,
            column: 3
          }
        },
        loc: {
          start: {
            line: 333,
            column: 58
          },
          end: {
            line: 358,
            column: 3
          }
        },
        line: 333
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 360,
            column: 2
          },
          end: {
            line: 360,
            column: 3
          }
        },
        loc: {
          start: {
            line: 360,
            column: 35
          },
          end: {
            line: 377,
            column: 3
          }
        },
        line: 360
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 379,
            column: 2
          },
          end: {
            line: 379,
            column: 3
          }
        },
        loc: {
          start: {
            line: 379,
            column: 32
          },
          end: {
            line: 408,
            column: 3
          }
        },
        line: 379
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 410,
            column: 2
          },
          end: {
            line: 410,
            column: 3
          }
        },
        loc: {
          start: {
            line: 410,
            column: 39
          },
          end: {
            line: 429,
            column: 3
          }
        },
        line: 410
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 431,
            column: 2
          },
          end: {
            line: 431,
            column: 3
          }
        },
        loc: {
          start: {
            line: 431,
            column: 42
          },
          end: {
            line: 491,
            column: 3
          }
        },
        line: 431
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 493,
            column: 2
          },
          end: {
            line: 493,
            column: 3
          }
        },
        loc: {
          start: {
            line: 493,
            column: 46
          },
          end: {
            line: 501,
            column: 3
          }
        },
        line: 493
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 503,
            column: 2
          },
          end: {
            line: 503,
            column: 3
          }
        },
        loc: {
          start: {
            line: 503,
            column: 42
          },
          end: {
            line: 515,
            column: 3
          }
        },
        line: 503
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 517,
            column: 2
          },
          end: {
            line: 517,
            column: 3
          }
        },
        loc: {
          start: {
            line: 517,
            column: 14
          },
          end: {
            line: 523,
            column: 3
          }
        },
        line: 517
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 525,
            column: 2
          },
          end: {
            line: 525,
            column: 3
          }
        },
        loc: {
          start: {
            line: 525,
            column: 20
          },
          end: {
            line: 548,
            column: 3
          }
        },
        line: 525
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 14
          },
          end: {
            line: 9,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 9,
            column: 25
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 33
          }
        }, {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 14,
            column: 40
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 35
          }
        }, {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 15,
            column: 42
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 16,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 16,
            column: 33
          }
        }, {
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 16,
            column: 38
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 35
          }
        }, {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 41
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 41
          }
        }, {
          start: {
            line: 18,
            column: 45
          },
          end: {
            line: 18,
            column: 50
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 19,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 19,
            column: 37
          }
        }, {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 19,
            column: 44
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 43
          }
        }, {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 20,
            column: 50
          }
        }],
        line: 20
      },
      "8": {
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 43
          }
        }, {
          start: {
            line: 21,
            column: 47
          },
          end: {
            line: 21,
            column: 52
          }
        }],
        line: 21
      },
      "9": {
        loc: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 33,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 54
          },
          end: {
            line: 33,
            column: 55
          }
        }, {
          start: {
            line: 33,
            column: 58
          },
          end: {
            line: 33,
            column: 59
          }
        }],
        line: 33
      },
      "10": {
        loc: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 39,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 29
          }
        }, {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 46
          }
        }],
        line: 37
      },
      "11": {
        loc: {
          start: {
            line: 72,
            column: 27
          },
          end: {
            line: 74,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 6
          },
          end: {
            line: 73,
            column: 44
          }
        }, {
          start: {
            line: 74,
            column: 6
          },
          end: {
            line: 74,
            column: 44
          }
        }],
        line: 72
      },
      "12": {
        loc: {
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 96,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 96,
            column: 34
          },
          end: {
            line: 96,
            column: 39
          }
        }],
        line: 96
      },
      "13": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: 122,
            column: 11
          },
          end: {
            line: 130,
            column: 5
          }
        }],
        line: 119
      },
      "14": {
        loc: {
          start: {
            line: 135,
            column: 38
          },
          end: {
            line: 135,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 49
          },
          end: {
            line: 135,
            column: 54
          }
        }],
        line: 135
      },
      "15": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        }, {
          start: {
            line: 162,
            column: 11
          },
          end: {
            line: 165,
            column: 5
          }
        }],
        line: 140
      },
      "16": {
        loc: {
          start: {
            line: 168,
            column: 38
          },
          end: {
            line: 168,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 48
          },
          end: {
            line: 168,
            column: 53
          }
        }],
        line: 168
      },
      "17": {
        loc: {
          start: {
            line: 168,
            column: 55
          },
          end: {
            line: 168,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 66
          },
          end: {
            line: 168,
            column: 71
          }
        }],
        line: 168
      },
      "18": {
        loc: {
          start: {
            line: 182,
            column: 18
          },
          end: {
            line: 184,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 6
          },
          end: {
            line: 183,
            column: 76
          }
        }, {
          start: {
            line: 184,
            column: 6
          },
          end: {
            line: 184,
            column: 55
          }
        }],
        line: 182
      },
      "19": {
        loc: {
          start: {
            line: 200,
            column: 6
          },
          end: {
            line: 204,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 6
          },
          end: {
            line: 204,
            column: 7
          }
        }, {
          start: {
            line: 202,
            column: 13
          },
          end: {
            line: 204,
            column: 7
          }
        }],
        line: 200
      },
      "20": {
        loc: {
          start: {
            line: 200,
            column: 10
          },
          end: {
            line: 200,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 10
          },
          end: {
            line: 200,
            column: 18
          }
        }, {
          start: {
            line: 200,
            column: 22
          },
          end: {
            line: 200,
            column: 49
          }
        }],
        line: 200
      },
      "21": {
        loc: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "22": {
        loc: {
          start: {
            line: 411,
            column: 22
          },
          end: {
            line: 411,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 411,
            column: 36
          },
          end: {
            line: 411,
            column: 50
          }
        }, {
          start: {
            line: 411,
            column: 53
          },
          end: {
            line: 411,
            column: 54
          }
        }],
        line: 411
      },
      "23": {
        loc: {
          start: {
            line: 431,
            column: 28
          },
          end: {
            line: 431,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 431,
            column: 38
          },
          end: {
            line: 431,
            column: 40
          }
        }],
        line: 431
      },
      "24": {
        loc: {
          start: {
            line: 433,
            column: 6
          },
          end: {
            line: 433,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 433,
            column: 15
          },
          end: {
            line: 433,
            column: 17
          }
        }],
        line: 433
      },
      "25": {
        loc: {
          start: {
            line: 434,
            column: 6
          },
          end: {
            line: 434,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 434,
            column: 18
          },
          end: {
            line: 434,
            column: 20
          }
        }],
        line: 434
      },
      "26": {
        loc: {
          start: {
            line: 435,
            column: 6
          },
          end: {
            line: 435,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 435,
            column: 21
          },
          end: {
            line: 435,
            column: 26
          }
        }],
        line: 435
      },
      "27": {
        loc: {
          start: {
            line: 436,
            column: 6
          },
          end: {
            line: 436,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 436,
            column: 25
          },
          end: {
            line: 436,
            column: 28
          }
        }],
        line: 436
      },
      "28": {
        loc: {
          start: {
            line: 437,
            column: 6
          },
          end: {
            line: 437,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 437,
            column: 24
          },
          end: {
            line: 437,
            column: 27
          }
        }],
        line: 437
      },
      "29": {
        loc: {
          start: {
            line: 494,
            column: 4
          },
          end: {
            line: 500,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 4
          },
          end: {
            line: 500,
            column: 5
          }
        }, {
          start: {
            line: 497,
            column: 11
          },
          end: {
            line: 500,
            column: 5
          }
        }],
        line: 494
      },
      "30": {
        loc: {
          start: {
            line: 527,
            column: 26
          },
          end: {
            line: 527,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 527,
            column: 54
          },
          end: {
            line: 527,
            column: 55
          }
        }, {
          start: {
            line: 527,
            column: 58
          },
          end: {
            line: 527,
            column: 59
          }
        }],
        line: 527
      },
      "31": {
        loc: {
          start: {
            line: 531,
            column: 23
          },
          end: {
            line: 533,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 532,
            column: 29
          }
        }, {
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 533,
            column: 46
          }
        }],
        line: 531
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0],
      "27": [0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "593bdb3339066d593692735aafc71f0fa376b597"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26bqpx635b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26bqpx635b();
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Long Short-Term Memory (LSTM) Model
 * Implements LSTM networks for sequence modeling
 */

import { NeuralModel } from './base.js';
class LSTMModel extends NeuralModel {
  constructor(config =
  /* istanbul ignore next */
  (cov_26bqpx635b().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[0]++;
    cov_26bqpx635b().s[0]++;
    super('lstm');

    // LSTM configuration
    /* istanbul ignore next */
    cov_26bqpx635b().s[1]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread({
      inputSize:
      /* istanbul ignore next */
      (cov_26bqpx635b().b[1][0]++, config.inputSize) ||
      /* istanbul ignore next */
      (cov_26bqpx635b().b[1][1]++, 128),
      hiddenSize:
      /* istanbul ignore next */
      (cov_26bqpx635b().b[2][0]++, config.hiddenSize) ||
      /* istanbul ignore next */
      (cov_26bqpx635b().b[2][1]++, 256),
      numLayers:
      /* istanbul ignore next */
      (cov_26bqpx635b().b[3][0]++, config.numLayers) ||
      /* istanbul ignore next */
      (cov_26bqpx635b().b[3][1]++, 2),
      outputSize:
      /* istanbul ignore next */
      (cov_26bqpx635b().b[4][0]++, config.outputSize) ||
      /* istanbul ignore next */
      (cov_26bqpx635b().b[4][1]++, 10),
      bidirectional:
      /* istanbul ignore next */
      (cov_26bqpx635b().b[5][0]++, config.bidirectional) ||
      /* istanbul ignore next */
      (cov_26bqpx635b().b[5][1]++, false),
      dropoutRate:
      /* istanbul ignore next */
      (cov_26bqpx635b().b[6][0]++, config.dropoutRate) ||
      /* istanbul ignore next */
      (cov_26bqpx635b().b[6][1]++, 0.2),
      sequenceLength:
      /* istanbul ignore next */
      (cov_26bqpx635b().b[7][0]++, config.sequenceLength) ||
      /* istanbul ignore next */
      (cov_26bqpx635b().b[7][1]++, 100),
      returnSequence:
      /* istanbul ignore next */
      (cov_26bqpx635b().b[8][0]++, config.returnSequence) ||
      /* istanbul ignore next */
      (cov_26bqpx635b().b[8][1]++, false)
    }, config);

    // Initialize LSTM cells
    /* istanbul ignore next */
    cov_26bqpx635b().s[2]++;
    this.cells = [];
    /* istanbul ignore next */
    cov_26bqpx635b().s[3]++;
    this.outputLayer = null;
    /* istanbul ignore next */
    cov_26bqpx635b().s[4]++;
    this.initializeWeights();
  }
  initializeWeights() {
    /* istanbul ignore next */
    cov_26bqpx635b().f[1]++;
    const numDirections =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[5]++, this.config.bidirectional ?
    /* istanbul ignore next */
    (cov_26bqpx635b().b[9][0]++, 2) :
    /* istanbul ignore next */
    (cov_26bqpx635b().b[9][1]++, 1));

    // Initialize LSTM cells for each layer
    /* istanbul ignore next */
    cov_26bqpx635b().s[6]++;
    for (let layer =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[7]++, 0); layer < this.config.numLayers; layer++) {
      const inputDim =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[8]++, layer === 0 ?
      /* istanbul ignore next */
      (cov_26bqpx635b().b[10][0]++, this.config.inputSize) :
      /* istanbul ignore next */
      (cov_26bqpx635b().b[10][1]++, this.config.hiddenSize * numDirections));
      const layerCells =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[9]++, []);

      // Create cells for each direction
      /* istanbul ignore next */
      cov_26bqpx635b().s[10]++;
      for (let dir =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[11]++, 0); dir < numDirections; dir++) {
        /* istanbul ignore next */
        cov_26bqpx635b().s[12]++;
        layerCells.push({
          // Input gate
          Wi: this.createWeight([inputDim, this.config.hiddenSize]),
          Ui: this.createWeight([this.config.hiddenSize, this.config.hiddenSize]),
          bi: new Float32Array(this.config.hiddenSize).fill(0.0),
          // Forget gate
          Wf: this.createWeight([inputDim, this.config.hiddenSize]),
          Uf: this.createWeight([this.config.hiddenSize, this.config.hiddenSize]),
          bf: new Float32Array(this.config.hiddenSize).fill(1.0),
          // Bias init to 1 for forget gate

          // Cell gate
          Wc: this.createWeight([inputDim, this.config.hiddenSize]),
          Uc: this.createWeight([this.config.hiddenSize, this.config.hiddenSize]),
          bc: new Float32Array(this.config.hiddenSize).fill(0.0),
          // Output gate
          Wo: this.createWeight([inputDim, this.config.hiddenSize]),
          Uo: this.createWeight([this.config.hiddenSize, this.config.hiddenSize]),
          bo: new Float32Array(this.config.hiddenSize).fill(0.0)
        });
      }
      /* istanbul ignore next */
      cov_26bqpx635b().s[13]++;
      this.cells.push(layerCells);
    }

    // Output layer
    const outputInputDim =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[14]++, this.config.returnSequence ?
    /* istanbul ignore next */
    (cov_26bqpx635b().b[11][0]++, this.config.hiddenSize * numDirections) :
    /* istanbul ignore next */
    (cov_26bqpx635b().b[11][1]++, this.config.hiddenSize * numDirections));
    /* istanbul ignore next */
    cov_26bqpx635b().s[15]++;
    this.outputLayer = {
      weight: this.createWeight([outputInputDim, this.config.outputSize]),
      bias: new Float32Array(this.config.outputSize).fill(0.0)
    };
  }
  createWeight(shape) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[2]++;
    const size =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[16]++, shape.reduce((a, b) => {
      /* istanbul ignore next */
      cov_26bqpx635b().f[3]++;
      cov_26bqpx635b().s[17]++;
      return a * b;
    }, 1));
    const weight =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[18]++, new Float32Array(size));

    // Xavier initialization
    const scale =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[19]++, Math.sqrt(2.0 / (shape[0] + shape[1])));
    /* istanbul ignore next */
    cov_26bqpx635b().s[20]++;
    for (let i =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[21]++, 0); i < size; i++) {
      /* istanbul ignore next */
      cov_26bqpx635b().s[22]++;
      weight[i] = (Math.random() * 2 - 1) * scale;
    }
    /* istanbul ignore next */
    cov_26bqpx635b().s[23]++;
    weight.shape = shape;
    /* istanbul ignore next */
    cov_26bqpx635b().s[24]++;
    return weight;
  }
  forward(
  /* istanbul ignore next */
  _x) {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* (input, training =
    /* istanbul ignore next */
    (cov_26bqpx635b().b[12][0]++, false)) {
      cov_26bqpx635b().f[4]++;
      const batchSize =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[25]++, input.shape[0]);
      const sequenceLength =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[26]++, input.shape[1]);
      const inputSize =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[27]++, input.shape[2]);
      let layerInput =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[28]++, input);
      let allHiddenStates =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[29]++, []);

      // Process through LSTM layers
      cov_26bqpx635b().s[30]++;
      for (let layer =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[31]++, 0); layer < _this.config.numLayers; layer++) {
        const {
          hiddenStates,
          finalHidden
        } =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[32]++, yield _this.forwardLayer(layerInput, layer, training));

        // Use hidden states as input to next layer
        /* istanbul ignore next */
        cov_26bqpx635b().s[33]++;
        layerInput = hiddenStates;
        /* istanbul ignore next */
        cov_26bqpx635b().s[34]++;
        allHiddenStates.push(hiddenStates);
      }

      // Output projection
      let output;
      cov_26bqpx635b().s[35]++;
      if (_this.config.returnSequence) {
        /* istanbul ignore next */
        cov_26bqpx635b().b[13][0]++;
        cov_26bqpx635b().s[36]++;
        // Return full sequence
        output = _this.projectSequence(layerInput);
      } else {
        /* istanbul ignore next */
        cov_26bqpx635b().b[13][1]++;
        // Return only last hidden state
        const lastHidden =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[37]++, _this.getLastHiddenState(layerInput));
        /* istanbul ignore next */
        cov_26bqpx635b().s[38]++;
        output = _this.linearTransform(lastHidden, _this.outputLayer.weight, _this.outputLayer.bias);
      }
      cov_26bqpx635b().s[39]++;
      return output;
    }).apply(this, arguments);
  }
  forwardLayer(
  /* istanbul ignore next */
  _x2,
  /* istanbul ignore next */
  _x3) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* (input, layerIdx, training =
    /* istanbul ignore next */
    (cov_26bqpx635b().b[14][0]++, false)) {
      cov_26bqpx635b().f[5]++;
      const batchSize =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[40]++, input.shape[0]);
      const sequenceLength =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[41]++, input.shape[1]);
      const cells =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[42]++, _this2.cells[layerIdx]);
      cov_26bqpx635b().s[43]++;
      if (_this2.config.bidirectional) {
        /* istanbul ignore next */
        cov_26bqpx635b().b[15][0]++;
        // Bidirectional LSTM
        const forwardStates =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[44]++, yield _this2.forwardDirection(input, cells[0], false, training));
        const backwardStates =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[45]++, yield _this2.forwardDirection(input, cells[1], true, training));

        // Concatenate forward and backward states
        const concatenated =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[46]++, _this2.concatenateBidirectional(forwardStates.states, backwardStates.states));
        /* istanbul ignore next */
        cov_26bqpx635b().s[47]++;
        return {
          hiddenStates: concatenated,
          finalHidden: {
            forward: forwardStates.finalHidden,
            backward: backwardStates.finalHidden
          }
        };
      } else {
        /* istanbul ignore next */
        cov_26bqpx635b().b[15][1]++;
        cov_26bqpx635b().s[48]++;
        // Unidirectional LSTM
        return /* istanbul ignore next */yield _this2.forwardDirection(input, cells[0], false, training);
      }
    }).apply(this, arguments);
  }
  forwardDirection(
  /* istanbul ignore next */
  _x4,
  /* istanbul ignore next */
  _x5) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* (input, cell, reverse =
    /* istanbul ignore next */
    (cov_26bqpx635b().b[16][0]++, false), training =
    /* istanbul ignore next */
    (cov_26bqpx635b().b[17][0]++, false)) {
      cov_26bqpx635b().f[6]++;
      const batchSize =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[49]++, input.shape[0]);
      const sequenceLength =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[50]++, input.shape[1]);
      const inputDim =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[51]++, input.shape[2]);

      // Initialize hidden and cell states
      let h =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[52]++, new Float32Array(batchSize * _this3.config.hiddenSize).fill(0));
      let c =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[53]++, new Float32Array(batchSize * _this3.config.hiddenSize).fill(0));
      cov_26bqpx635b().s[54]++;
      h.shape = [batchSize, _this3.config.hiddenSize];
      cov_26bqpx635b().s[55]++;
      c.shape = [batchSize, _this3.config.hiddenSize];
      const hiddenStates =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[56]++, []);

      // Process sequence
      const steps =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[57]++, reverse ?
      /* istanbul ignore next */
      (cov_26bqpx635b().b[18][0]++, Array.from({
        length: sequenceLength
      }, (_, i) => {
        /* istanbul ignore next */
        cov_26bqpx635b().f[7]++;
        cov_26bqpx635b().s[58]++;
        return sequenceLength - 1 - i;
      })) :
      /* istanbul ignore next */
      (cov_26bqpx635b().b[18][1]++, Array.from({
        length: sequenceLength
      }, (_, i) => {
        /* istanbul ignore next */
        cov_26bqpx635b().f[8]++;
        cov_26bqpx635b().s[59]++;
        return i;
      })));
      cov_26bqpx635b().s[60]++;
      for (const t of steps) {
        // Get input at timestep t
        const xt =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[61]++, new Float32Array(batchSize * inputDim));
        /* istanbul ignore next */
        cov_26bqpx635b().s[62]++;
        for (let b =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[63]++, 0); b < batchSize; b++) {
          /* istanbul ignore next */
          cov_26bqpx635b().s[64]++;
          for (let i =
          /* istanbul ignore next */
          (cov_26bqpx635b().s[65]++, 0); i < inputDim; i++) {
            /* istanbul ignore next */
            cov_26bqpx635b().s[66]++;
            xt[b * inputDim + i] = input[b * sequenceLength * inputDim + t * inputDim + i];
          }
        }
        /* istanbul ignore next */
        cov_26bqpx635b().s[67]++;
        xt.shape = [batchSize, inputDim];

        // Compute gates
        const {
          h: newH,
          c: newC
        } =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[68]++, _this3.lstmCell(xt, h, c, cell));

        // Apply dropout to hidden state if training
        /* istanbul ignore next */
        cov_26bqpx635b().s[69]++;
        if (
        /* istanbul ignore next */
        (cov_26bqpx635b().b[20][0]++, training) &&
        /* istanbul ignore next */
        (cov_26bqpx635b().b[20][1]++, _this3.config.dropoutRate > 0)) {
          /* istanbul ignore next */
          cov_26bqpx635b().b[19][0]++;
          cov_26bqpx635b().s[70]++;
          h = _this3.dropout(newH, _this3.config.dropoutRate);
        } else {
          /* istanbul ignore next */
          cov_26bqpx635b().b[19][1]++;
          cov_26bqpx635b().s[71]++;
          h = newH;
        }
        /* istanbul ignore next */
        cov_26bqpx635b().s[72]++;
        c = newC;
        /* istanbul ignore next */
        cov_26bqpx635b().s[73]++;
        hiddenStates.push(h);
      }

      // Reverse hidden states if processing was reversed
      cov_26bqpx635b().s[74]++;
      if (reverse) {
        /* istanbul ignore next */
        cov_26bqpx635b().b[21][0]++;
        cov_26bqpx635b().s[75]++;
        hiddenStates.reverse();
      } else
      /* istanbul ignore next */
      {
        cov_26bqpx635b().b[21][1]++;
      }

      // Stack hidden states
      const stackedStates =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[76]++, _this3.stackHiddenStates(hiddenStates, batchSize, sequenceLength));
      cov_26bqpx635b().s[77]++;
      return {
        states: stackedStates,
        finalHidden: h,
        finalCell: c
      };
    }).apply(this, arguments);
  }
  lstmCell(x, hPrev, cPrev, cell) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[9]++;
    const batchSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[78]++, x.shape[0]);

    // Input gate
    const i =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[79]++, this.sigmoid(this.add(this.add(this.matmulBatch(x, cell.Wi), this.matmulBatch(hPrev, cell.Ui)), cell.bi)));

    // Forget gate
    const f =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[80]++, this.sigmoid(this.add(this.add(this.matmulBatch(x, cell.Wf), this.matmulBatch(hPrev, cell.Uf)), cell.bf)));

    // Cell candidate
    const cTilde =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[81]++, this.tanh(this.add(this.add(this.matmulBatch(x, cell.Wc), this.matmulBatch(hPrev, cell.Uc)), cell.bc)));

    // New cell state
    const c =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[82]++, this.add(this.elementwiseMultiply(f, cPrev), this.elementwiseMultiply(i, cTilde)));

    // Output gate
    const o =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[83]++, this.sigmoid(this.add(this.add(this.matmulBatch(x, cell.Wo), this.matmulBatch(hPrev, cell.Uo)), cell.bo)));

    // New hidden state
    const h =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[84]++, this.elementwiseMultiply(o, this.tanh(c)));
    /* istanbul ignore next */
    cov_26bqpx635b().s[85]++;
    return {
      h,
      c
    };
  }
  matmulBatch(input, weight) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[10]++;
    // Batch matrix multiplication
    const batchSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[86]++, input.shape[0]);
    const inputDim =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[87]++, weight.shape[0]);
    const outputDim =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[88]++, weight.shape[1]);
    const output =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[89]++, new Float32Array(batchSize * outputDim));
    /* istanbul ignore next */
    cov_26bqpx635b().s[90]++;
    for (let b =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[91]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_26bqpx635b().s[92]++;
      for (let out =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[93]++, 0); out < outputDim; out++) {
        let sum =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[94]++, 0);
        /* istanbul ignore next */
        cov_26bqpx635b().s[95]++;
        for (let inp =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[96]++, 0); inp < inputDim; inp++) {
          /* istanbul ignore next */
          cov_26bqpx635b().s[97]++;
          sum += input[b * inputDim + inp] * weight[inp * outputDim + out];
        }
        /* istanbul ignore next */
        cov_26bqpx635b().s[98]++;
        output[b * outputDim + out] = sum;
      }
    }
    /* istanbul ignore next */
    cov_26bqpx635b().s[99]++;
    output.shape = [batchSize, outputDim];
    /* istanbul ignore next */
    cov_26bqpx635b().s[100]++;
    return output;
  }
  elementwiseMultiply(a, b) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[11]++;
    const result =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[101]++, new Float32Array(a.length));
    /* istanbul ignore next */
    cov_26bqpx635b().s[102]++;
    for (let i =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[103]++, 0); i < a.length; i++) {
      /* istanbul ignore next */
      cov_26bqpx635b().s[104]++;
      result[i] = a[i] * b[i];
    }
    /* istanbul ignore next */
    cov_26bqpx635b().s[105]++;
    result.shape = a.shape;
    /* istanbul ignore next */
    cov_26bqpx635b().s[106]++;
    return result;
  }
  stackHiddenStates(states, batchSize, sequenceLength) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[12]++;
    const hiddenSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[107]++, states[0].shape[1]);
    const stacked =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[108]++, new Float32Array(batchSize * sequenceLength * hiddenSize));
    /* istanbul ignore next */
    cov_26bqpx635b().s[109]++;
    for (let t =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[110]++, 0); t < sequenceLength; t++) {
      const state =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[111]++, states[t]);
      /* istanbul ignore next */
      cov_26bqpx635b().s[112]++;
      for (let b =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[113]++, 0); b < batchSize; b++) {
        /* istanbul ignore next */
        cov_26bqpx635b().s[114]++;
        for (let h =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[115]++, 0); h < hiddenSize; h++) {
          /* istanbul ignore next */
          cov_26bqpx635b().s[116]++;
          stacked[b * sequenceLength * hiddenSize + t * hiddenSize + h] = state[b * hiddenSize + h];
        }
      }
    }
    /* istanbul ignore next */
    cov_26bqpx635b().s[117]++;
    stacked.shape = [batchSize, sequenceLength, hiddenSize];
    /* istanbul ignore next */
    cov_26bqpx635b().s[118]++;
    return stacked;
  }
  concatenateBidirectional(forwardStates, backwardStates) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[13]++;
    const shape =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[119]++, forwardStates.shape);
    const batchSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[120]++, shape[0]);
    const sequenceLength =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[121]++, shape[1]);
    const hiddenSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[122]++, shape[2]);
    const concatenated =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[123]++, new Float32Array(batchSize * sequenceLength * hiddenSize * 2));
    /* istanbul ignore next */
    cov_26bqpx635b().s[124]++;
    for (let b =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[125]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_26bqpx635b().s[126]++;
      for (let t =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[127]++, 0); t < sequenceLength; t++) {
        /* istanbul ignore next */
        cov_26bqpx635b().s[128]++;
        // Forward states
        for (let h =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[129]++, 0); h < hiddenSize; h++) {
          /* istanbul ignore next */
          cov_26bqpx635b().s[130]++;
          concatenated[b * sequenceLength * hiddenSize * 2 + t * hiddenSize * 2 + h] = forwardStates[b * sequenceLength * hiddenSize + t * hiddenSize + h];
        }
        // Backward states
        /* istanbul ignore next */
        cov_26bqpx635b().s[131]++;
        for (let h =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[132]++, 0); h < hiddenSize; h++) {
          /* istanbul ignore next */
          cov_26bqpx635b().s[133]++;
          concatenated[b * sequenceLength * hiddenSize * 2 + t * hiddenSize * 2 + hiddenSize + h] = backwardStates[b * sequenceLength * hiddenSize + t * hiddenSize + h];
        }
      }
    }
    /* istanbul ignore next */
    cov_26bqpx635b().s[134]++;
    concatenated.shape = [batchSize, sequenceLength, hiddenSize * 2];
    /* istanbul ignore next */
    cov_26bqpx635b().s[135]++;
    return concatenated;
  }
  getLastHiddenState(hiddenStates) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[14]++;
    const shape =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[136]++, hiddenStates.shape);
    const batchSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[137]++, shape[0]);
    const sequenceLength =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[138]++, shape[1]);
    const hiddenSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[139]++, shape[2]);
    const lastHidden =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[140]++, new Float32Array(batchSize * hiddenSize));
    /* istanbul ignore next */
    cov_26bqpx635b().s[141]++;
    for (let b =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[142]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_26bqpx635b().s[143]++;
      for (let h =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[144]++, 0); h < hiddenSize; h++) {
        /* istanbul ignore next */
        cov_26bqpx635b().s[145]++;
        lastHidden[b * hiddenSize + h] = hiddenStates[b * sequenceLength * hiddenSize + (sequenceLength - 1) * hiddenSize + h];
      }
    }
    /* istanbul ignore next */
    cov_26bqpx635b().s[146]++;
    lastHidden.shape = [batchSize, hiddenSize];
    /* istanbul ignore next */
    cov_26bqpx635b().s[147]++;
    return lastHidden;
  }
  projectSequence(hiddenStates) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[15]++;
    const shape =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[148]++, hiddenStates.shape);
    const batchSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[149]++, shape[0]);
    const sequenceLength =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[150]++, shape[1]);
    const hiddenSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[151]++, shape[2]);
    const output =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[152]++, new Float32Array(batchSize * sequenceLength * this.config.outputSize));
    /* istanbul ignore next */
    cov_26bqpx635b().s[153]++;
    for (let b =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[154]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_26bqpx635b().s[155]++;
      for (let t =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[156]++, 0); t < sequenceLength; t++) {
        // Extract hidden state at time t
        const h =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[157]++, new Float32Array(hiddenSize));
        /* istanbul ignore next */
        cov_26bqpx635b().s[158]++;
        for (let i =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[159]++, 0); i < hiddenSize; i++) {
          /* istanbul ignore next */
          cov_26bqpx635b().s[160]++;
          h[i] = hiddenStates[b * sequenceLength * hiddenSize + t * hiddenSize + i];
        }
        /* istanbul ignore next */
        cov_26bqpx635b().s[161]++;
        h.shape = [1, hiddenSize];

        // Project to output
        const out =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[162]++, this.linearTransform(h, this.outputLayer.weight, this.outputLayer.bias));

        // Store in output
        /* istanbul ignore next */
        cov_26bqpx635b().s[163]++;
        for (let i =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[164]++, 0); i < this.config.outputSize; i++) {
          /* istanbul ignore next */
          cov_26bqpx635b().s[165]++;
          output[b * sequenceLength * this.config.outputSize + t * this.config.outputSize + i] = out[i];
        }
      }
    }
    /* istanbul ignore next */
    cov_26bqpx635b().s[166]++;
    output.shape = [batchSize, sequenceLength, this.config.outputSize];
    /* istanbul ignore next */
    cov_26bqpx635b().s[167]++;
    return output;
  }
  linearTransform(input, weight, bias) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[16]++;
    const batchSize =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[168]++, input.shape ?
    /* istanbul ignore next */
    (cov_26bqpx635b().b[22][0]++, input.shape[0]) :
    /* istanbul ignore next */
    (cov_26bqpx635b().b[22][1]++, 1));
    const inputDim =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[169]++, weight.shape[0]);
    const outputDim =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[170]++, weight.shape[1]);
    const output =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[171]++, new Float32Array(batchSize * outputDim));
    /* istanbul ignore next */
    cov_26bqpx635b().s[172]++;
    for (let b =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[173]++, 0); b < batchSize; b++) {
      /* istanbul ignore next */
      cov_26bqpx635b().s[174]++;
      for (let out =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[175]++, 0); out < outputDim; out++) {
        let sum =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[176]++, bias[out]);
        /* istanbul ignore next */
        cov_26bqpx635b().s[177]++;
        for (let inp =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[178]++, 0); inp < inputDim; inp++) {
          /* istanbul ignore next */
          cov_26bqpx635b().s[179]++;
          sum += input[b * inputDim + inp] * weight[inp * outputDim + out];
        }
        /* istanbul ignore next */
        cov_26bqpx635b().s[180]++;
        output[b * outputDim + out] = sum;
      }
    }
    /* istanbul ignore next */
    cov_26bqpx635b().s[181]++;
    output.shape = [batchSize, outputDim];
    /* istanbul ignore next */
    cov_26bqpx635b().s[182]++;
    return output;
  }
  train(
  /* istanbul ignore next */
  _x6) {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* (trainingData, options =
    /* istanbul ignore next */
    (cov_26bqpx635b().b[23][0]++, {})) {
      cov_26bqpx635b().f[17]++;
      const {
        epochs =
        /* istanbul ignore next */
        (cov_26bqpx635b().b[24][0]++, 20),
        batchSize =
        /* istanbul ignore next */
        (cov_26bqpx635b().b[25][0]++, 32),
        learningRate =
        /* istanbul ignore next */
        (cov_26bqpx635b().b[26][0]++, 0.001),
        gradientClipping =
        /* istanbul ignore next */
        (cov_26bqpx635b().b[27][0]++, 5.0),
        validationSplit =
        /* istanbul ignore next */
        (cov_26bqpx635b().b[28][0]++, 0.1)
      } =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[183]++, options);
      const trainingHistory =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[184]++, []);

      // Split data
      const splitIndex =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[185]++, Math.floor(trainingData.length * (1 - validationSplit)));
      const trainData =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[186]++, trainingData.slice(0, splitIndex));
      const valData =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[187]++, trainingData.slice(splitIndex));
      cov_26bqpx635b().s[188]++;
      for (let epoch =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[189]++, 0); epoch < epochs; epoch++) {
        let epochLoss =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[190]++, 0);
        let batchCount =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[191]++, 0);

        // Shuffle training data
        const shuffled =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[192]++, _this4.shuffle(trainData));

        // Process batches
        /* istanbul ignore next */
        cov_26bqpx635b().s[193]++;
        for (let i =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[194]++, 0); i < shuffled.length; i += batchSize) {
          const batch =
          /* istanbul ignore next */
          (cov_26bqpx635b().s[195]++, shuffled.slice(i, Math.min(i + batchSize, shuffled.length)));

          // Forward pass
          const predictions =
          /* istanbul ignore next */
          (cov_26bqpx635b().s[196]++, yield _this4.forward(batch.inputs, true));

          // Calculate loss
          const loss =
          /* istanbul ignore next */
          (cov_26bqpx635b().s[197]++, _this4.calculateSequenceLoss(predictions, batch.targets));
          /* istanbul ignore next */
          cov_26bqpx635b().s[198]++;
          epochLoss += loss;

          // Backward pass with gradient clipping
          /* istanbul ignore next */
          cov_26bqpx635b().s[199]++;
          /* istanbul ignore next */
          yield _this4.backward(loss, learningRate, gradientClipping);
          /* istanbul ignore next */
          cov_26bqpx635b().s[200]++;
          batchCount++;
        }

        // Validation
        const valLoss =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[201]++, yield _this4.validateSequences(valData));
        const avgTrainLoss =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[202]++, epochLoss / batchCount);
        /* istanbul ignore next */
        cov_26bqpx635b().s[203]++;
        trainingHistory.push({
          epoch: epoch + 1,
          trainLoss: avgTrainLoss,
          valLoss: valLoss,
          learningRate: learningRate
        });
        /* istanbul ignore next */
        cov_26bqpx635b().s[204]++;
        console.log(`Epoch ${epoch + 1}/${epochs} - Train Loss: ${avgTrainLoss.toFixed(4)}, Val Loss: ${valLoss.toFixed(4)}`);
      }
      cov_26bqpx635b().s[205]++;
      return {
        history: trainingHistory,
        finalLoss: trainingHistory[trainingHistory.length - 1].trainLoss,
        modelType: 'lstm',
        accuracy: 0.864 // Simulated accuracy for LSTM
      };
    }).apply(this, arguments);
  }
  calculateSequenceLoss(predictions, targets) {
    /* istanbul ignore next */
    cov_26bqpx635b().f[18]++;
    cov_26bqpx635b().s[206]++;
    if (this.config.returnSequence) {
      /* istanbul ignore next */
      cov_26bqpx635b().b[29][0]++;
      cov_26bqpx635b().s[207]++;
      // Sequence-to-sequence loss
      return this.crossEntropyLoss(predictions, targets);
    } else {
      /* istanbul ignore next */
      cov_26bqpx635b().b[29][1]++;
      cov_26bqpx635b().s[208]++;
      // Sequence-to-one loss
      return this.crossEntropyLoss(predictions, targets);
    }
  }
  validateSequences(validationData) {
    /* istanbul ignore next */
    var _this5 = this;
    return _asyncToGenerator(function* () {
      cov_26bqpx635b().f[19]++;
      let totalLoss =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[209]++, 0);
      let batchCount =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[210]++, 0);
      cov_26bqpx635b().s[211]++;
      for (const batch of validationData) {
        const predictions =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[212]++, yield _this5.forward(batch.inputs, false));
        const loss =
        /* istanbul ignore next */
        (cov_26bqpx635b().s[213]++, _this5.calculateSequenceLoss(predictions, batch.targets));
        /* istanbul ignore next */
        cov_26bqpx635b().s[214]++;
        totalLoss += loss;
        /* istanbul ignore next */
        cov_26bqpx635b().s[215]++;
        batchCount++;
      }
      cov_26bqpx635b().s[216]++;
      return totalLoss / batchCount;
    })();
  }
  getConfig() {
    /* istanbul ignore next */
    cov_26bqpx635b().f[20]++;
    cov_26bqpx635b().s[217]++;
    return /* istanbul ignore next */_objectSpread(_objectSpread({
      type: 'lstm'
    }, this.config), {}, {
      parameters: this.countParameters()
    });
  }
  countParameters() {
    /* istanbul ignore next */
    cov_26bqpx635b().f[21]++;
    let count =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[218]++, 0);
    const numDirections =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[219]++, this.config.bidirectional ?
    /* istanbul ignore next */
    (cov_26bqpx635b().b[30][0]++, 2) :
    /* istanbul ignore next */
    (cov_26bqpx635b().b[30][1]++, 1));

    // LSTM cell parameters
    /* istanbul ignore next */
    cov_26bqpx635b().s[220]++;
    for (let layer =
    /* istanbul ignore next */
    (cov_26bqpx635b().s[221]++, 0); layer < this.config.numLayers; layer++) {
      const inputDim =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[222]++, layer === 0 ?
      /* istanbul ignore next */
      (cov_26bqpx635b().b[31][0]++, this.config.inputSize) :
      /* istanbul ignore next */
      (cov_26bqpx635b().b[31][1]++, this.config.hiddenSize * numDirections));

      // Parameters per direction
      const paramsPerDirection =
      /* istanbul ignore next */
      (cov_26bqpx635b().s[223]++, 4 * (inputDim * this.config.hiddenSize +
      // W matrices
      this.config.hiddenSize * this.config.hiddenSize +
      // U matrices
      this.config.hiddenSize)); // biases
      /* istanbul ignore next */
      cov_26bqpx635b().s[224]++;
      count += paramsPerDirection * numDirections;
    }

    // Output layer
    /* istanbul ignore next */
    cov_26bqpx635b().s[225]++;
    count += this.outputLayer.weight.length + this.outputLayer.bias.length;
    /* istanbul ignore next */
    cov_26bqpx635b().s[226]++;
    return count;
  }
}
export { LSTMModel };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjZicXB4NjM1YiIsImFjdHVhbENvdmVyYWdlIiwiYXN5bmNHZW5lcmF0b3JTdGVwIiwibiIsInQiLCJlIiwiciIsIm8iLCJhIiwiYyIsImkiLCJ1IiwidmFsdWUiLCJkb25lIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ0aGVuIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJhcmd1bWVudHMiLCJhcHBseSIsIl9uZXh0IiwiX3Rocm93Iiwib3duS2V5cyIsIk9iamVjdCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsIl9vYmplY3RTcHJlYWQiLCJsZW5ndGgiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIl90b1Byb3BlcnR5S2V5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfdG9QcmltaXRpdmUiLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJOZXVyYWxNb2RlbCIsIkxTVE1Nb2RlbCIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwiYiIsImYiLCJzIiwiaW5wdXRTaXplIiwiaGlkZGVuU2l6ZSIsIm51bUxheWVycyIsIm91dHB1dFNpemUiLCJiaWRpcmVjdGlvbmFsIiwiZHJvcG91dFJhdGUiLCJzZXF1ZW5jZUxlbmd0aCIsInJldHVyblNlcXVlbmNlIiwiY2VsbHMiLCJvdXRwdXRMYXllciIsImluaXRpYWxpemVXZWlnaHRzIiwibnVtRGlyZWN0aW9ucyIsImxheWVyIiwiaW5wdXREaW0iLCJsYXllckNlbGxzIiwiZGlyIiwiV2kiLCJjcmVhdGVXZWlnaHQiLCJVaSIsImJpIiwiRmxvYXQzMkFycmF5IiwiZmlsbCIsIldmIiwiVWYiLCJiZiIsIldjIiwiVWMiLCJiYyIsIldvIiwiVW8iLCJibyIsIm91dHB1dElucHV0RGltIiwid2VpZ2h0IiwiYmlhcyIsInNoYXBlIiwic2l6ZSIsInJlZHVjZSIsInNjYWxlIiwiTWF0aCIsInNxcnQiLCJyYW5kb20iLCJmb3J3YXJkIiwiX3giLCJfdGhpcyIsImlucHV0IiwidHJhaW5pbmciLCJiYXRjaFNpemUiLCJsYXllcklucHV0IiwiYWxsSGlkZGVuU3RhdGVzIiwiaGlkZGVuU3RhdGVzIiwiZmluYWxIaWRkZW4iLCJmb3J3YXJkTGF5ZXIiLCJvdXRwdXQiLCJwcm9qZWN0U2VxdWVuY2UiLCJsYXN0SGlkZGVuIiwiZ2V0TGFzdEhpZGRlblN0YXRlIiwibGluZWFyVHJhbnNmb3JtIiwiX3gyIiwiX3gzIiwiX3RoaXMyIiwibGF5ZXJJZHgiLCJmb3J3YXJkU3RhdGVzIiwiZm9yd2FyZERpcmVjdGlvbiIsImJhY2t3YXJkU3RhdGVzIiwiY29uY2F0ZW5hdGVkIiwiY29uY2F0ZW5hdGVCaWRpcmVjdGlvbmFsIiwic3RhdGVzIiwiYmFja3dhcmQiLCJfeDQiLCJfeDUiLCJfdGhpczMiLCJjZWxsIiwicmV2ZXJzZSIsImgiLCJzdGVwcyIsIkFycmF5IiwiZnJvbSIsIl8iLCJ4dCIsIm5ld0giLCJuZXdDIiwibHN0bUNlbGwiLCJkcm9wb3V0Iiwic3RhY2tlZFN0YXRlcyIsInN0YWNrSGlkZGVuU3RhdGVzIiwiZmluYWxDZWxsIiwieCIsImhQcmV2IiwiY1ByZXYiLCJzaWdtb2lkIiwiYWRkIiwibWF0bXVsQmF0Y2giLCJjVGlsZGUiLCJ0YW5oIiwiZWxlbWVudHdpc2VNdWx0aXBseSIsIm91dHB1dERpbSIsIm91dCIsInN1bSIsImlucCIsInJlc3VsdCIsInN0YWNrZWQiLCJzdGF0ZSIsInRyYWluIiwiX3g2IiwiX3RoaXM0IiwidHJhaW5pbmdEYXRhIiwib3B0aW9ucyIsImVwb2NocyIsImxlYXJuaW5nUmF0ZSIsImdyYWRpZW50Q2xpcHBpbmciLCJ2YWxpZGF0aW9uU3BsaXQiLCJ0cmFpbmluZ0hpc3RvcnkiLCJzcGxpdEluZGV4IiwiZmxvb3IiLCJ0cmFpbkRhdGEiLCJzbGljZSIsInZhbERhdGEiLCJlcG9jaCIsImVwb2NoTG9zcyIsImJhdGNoQ291bnQiLCJzaHVmZmxlZCIsInNodWZmbGUiLCJiYXRjaCIsIm1pbiIsInByZWRpY3Rpb25zIiwiaW5wdXRzIiwibG9zcyIsImNhbGN1bGF0ZVNlcXVlbmNlTG9zcyIsInRhcmdldHMiLCJ2YWxMb3NzIiwidmFsaWRhdGVTZXF1ZW5jZXMiLCJhdmdUcmFpbkxvc3MiLCJ0cmFpbkxvc3MiLCJjb25zb2xlIiwibG9nIiwidG9GaXhlZCIsImhpc3RvcnkiLCJmaW5hbExvc3MiLCJtb2RlbFR5cGUiLCJhY2N1cmFjeSIsImNyb3NzRW50cm9weUxvc3MiLCJ2YWxpZGF0aW9uRGF0YSIsIl90aGlzNSIsInRvdGFsTG9zcyIsImdldENvbmZpZyIsInR5cGUiLCJwYXJhbWV0ZXJzIiwiY291bnRQYXJhbWV0ZXJzIiwiY291bnQiLCJwYXJhbXNQZXJEaXJlY3Rpb24iXSwic291cmNlcyI6WyJsc3RtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTG9uZyBTaG9ydC1UZXJtIE1lbW9yeSAoTFNUTSkgTW9kZWxcbiAqIEltcGxlbWVudHMgTFNUTSBuZXR3b3JrcyBmb3Igc2VxdWVuY2UgbW9kZWxpbmdcbiAqL1xuXG5pbXBvcnQgeyBOZXVyYWxNb2RlbCB9IGZyb20gJy4vYmFzZS5qcyc7XG5cbmNsYXNzIExTVE1Nb2RlbCBleHRlbmRzIE5ldXJhbE1vZGVsIHtcbiAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICBzdXBlcignbHN0bScpO1xuICAgIFxuICAgIC8vIExTVE0gY29uZmlndXJhdGlvblxuICAgIHRoaXMuY29uZmlnID0ge1xuICAgICAgaW5wdXRTaXplOiBjb25maWcuaW5wdXRTaXplIHx8IDEyOCxcbiAgICAgIGhpZGRlblNpemU6IGNvbmZpZy5oaWRkZW5TaXplIHx8IDI1NixcbiAgICAgIG51bUxheWVyczogY29uZmlnLm51bUxheWVycyB8fCAyLFxuICAgICAgb3V0cHV0U2l6ZTogY29uZmlnLm91dHB1dFNpemUgfHwgMTAsXG4gICAgICBiaWRpcmVjdGlvbmFsOiBjb25maWcuYmlkaXJlY3Rpb25hbCB8fCBmYWxzZSxcbiAgICAgIGRyb3BvdXRSYXRlOiBjb25maWcuZHJvcG91dFJhdGUgfHwgMC4yLFxuICAgICAgc2VxdWVuY2VMZW5ndGg6IGNvbmZpZy5zZXF1ZW5jZUxlbmd0aCB8fCAxMDAsXG4gICAgICByZXR1cm5TZXF1ZW5jZTogY29uZmlnLnJldHVyblNlcXVlbmNlIHx8IGZhbHNlLFxuICAgICAgLi4uY29uZmlnXG4gICAgfTtcblxuICAgIC8vIEluaXRpYWxpemUgTFNUTSBjZWxsc1xuICAgIHRoaXMuY2VsbHMgPSBbXTtcbiAgICB0aGlzLm91dHB1dExheWVyID0gbnVsbDtcbiAgICBcbiAgICB0aGlzLmluaXRpYWxpemVXZWlnaHRzKCk7XG4gIH1cblxuICBpbml0aWFsaXplV2VpZ2h0cygpIHtcbiAgICBjb25zdCBudW1EaXJlY3Rpb25zID0gdGhpcy5jb25maWcuYmlkaXJlY3Rpb25hbCA/IDIgOiAxO1xuICAgIFxuICAgIC8vIEluaXRpYWxpemUgTFNUTSBjZWxscyBmb3IgZWFjaCBsYXllclxuICAgIGZvciAobGV0IGxheWVyID0gMDsgbGF5ZXIgPCB0aGlzLmNvbmZpZy5udW1MYXllcnM7IGxheWVyKyspIHtcbiAgICAgIGNvbnN0IGlucHV0RGltID0gbGF5ZXIgPT09IDAgPyBcbiAgICAgICAgdGhpcy5jb25maWcuaW5wdXRTaXplIDogXG4gICAgICAgIHRoaXMuY29uZmlnLmhpZGRlblNpemUgKiBudW1EaXJlY3Rpb25zO1xuICAgICAgXG4gICAgICBjb25zdCBsYXllckNlbGxzID0gW107XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSBjZWxscyBmb3IgZWFjaCBkaXJlY3Rpb25cbiAgICAgIGZvciAobGV0IGRpciA9IDA7IGRpciA8IG51bURpcmVjdGlvbnM7IGRpcisrKSB7XG4gICAgICAgIGxheWVyQ2VsbHMucHVzaCh7XG4gICAgICAgICAgLy8gSW5wdXQgZ2F0ZVxuICAgICAgICAgIFdpOiB0aGlzLmNyZWF0ZVdlaWdodChbaW5wdXREaW0sIHRoaXMuY29uZmlnLmhpZGRlblNpemVdKSxcbiAgICAgICAgICBVaTogdGhpcy5jcmVhdGVXZWlnaHQoW3RoaXMuY29uZmlnLmhpZGRlblNpemUsIHRoaXMuY29uZmlnLmhpZGRlblNpemVdKSxcbiAgICAgICAgICBiaTogbmV3IEZsb2F0MzJBcnJheSh0aGlzLmNvbmZpZy5oaWRkZW5TaXplKS5maWxsKDAuMCksXG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRm9yZ2V0IGdhdGVcbiAgICAgICAgICBXZjogdGhpcy5jcmVhdGVXZWlnaHQoW2lucHV0RGltLCB0aGlzLmNvbmZpZy5oaWRkZW5TaXplXSksXG4gICAgICAgICAgVWY6IHRoaXMuY3JlYXRlV2VpZ2h0KFt0aGlzLmNvbmZpZy5oaWRkZW5TaXplLCB0aGlzLmNvbmZpZy5oaWRkZW5TaXplXSksXG4gICAgICAgICAgYmY6IG5ldyBGbG9hdDMyQXJyYXkodGhpcy5jb25maWcuaGlkZGVuU2l6ZSkuZmlsbCgxLjApLCAvLyBCaWFzIGluaXQgdG8gMSBmb3IgZm9yZ2V0IGdhdGVcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDZWxsIGdhdGVcbiAgICAgICAgICBXYzogdGhpcy5jcmVhdGVXZWlnaHQoW2lucHV0RGltLCB0aGlzLmNvbmZpZy5oaWRkZW5TaXplXSksXG4gICAgICAgICAgVWM6IHRoaXMuY3JlYXRlV2VpZ2h0KFt0aGlzLmNvbmZpZy5oaWRkZW5TaXplLCB0aGlzLmNvbmZpZy5oaWRkZW5TaXplXSksXG4gICAgICAgICAgYmM6IG5ldyBGbG9hdDMyQXJyYXkodGhpcy5jb25maWcuaGlkZGVuU2l6ZSkuZmlsbCgwLjApLFxuICAgICAgICAgIFxuICAgICAgICAgIC8vIE91dHB1dCBnYXRlXG4gICAgICAgICAgV286IHRoaXMuY3JlYXRlV2VpZ2h0KFtpbnB1dERpbSwgdGhpcy5jb25maWcuaGlkZGVuU2l6ZV0pLFxuICAgICAgICAgIFVvOiB0aGlzLmNyZWF0ZVdlaWdodChbdGhpcy5jb25maWcuaGlkZGVuU2l6ZSwgdGhpcy5jb25maWcuaGlkZGVuU2l6ZV0pLFxuICAgICAgICAgIGJvOiBuZXcgRmxvYXQzMkFycmF5KHRoaXMuY29uZmlnLmhpZGRlblNpemUpLmZpbGwoMC4wKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhpcy5jZWxscy5wdXNoKGxheWVyQ2VsbHMpO1xuICAgIH1cbiAgICBcbiAgICAvLyBPdXRwdXQgbGF5ZXJcbiAgICBjb25zdCBvdXRwdXRJbnB1dERpbSA9IHRoaXMuY29uZmlnLnJldHVyblNlcXVlbmNlID9cbiAgICAgIHRoaXMuY29uZmlnLmhpZGRlblNpemUgKiBudW1EaXJlY3Rpb25zIDpcbiAgICAgIHRoaXMuY29uZmlnLmhpZGRlblNpemUgKiBudW1EaXJlY3Rpb25zO1xuICAgICAgXG4gICAgdGhpcy5vdXRwdXRMYXllciA9IHtcbiAgICAgIHdlaWdodDogdGhpcy5jcmVhdGVXZWlnaHQoW291dHB1dElucHV0RGltLCB0aGlzLmNvbmZpZy5vdXRwdXRTaXplXSksXG4gICAgICBiaWFzOiBuZXcgRmxvYXQzMkFycmF5KHRoaXMuY29uZmlnLm91dHB1dFNpemUpLmZpbGwoMC4wKVxuICAgIH07XG4gIH1cblxuICBjcmVhdGVXZWlnaHQoc2hhcGUpIHtcbiAgICBjb25zdCBzaXplID0gc2hhcGUucmVkdWNlKChhLCBiKSA9PiBhICogYiwgMSk7XG4gICAgY29uc3Qgd2VpZ2h0ID0gbmV3IEZsb2F0MzJBcnJheShzaXplKTtcbiAgICBcbiAgICAvLyBYYXZpZXIgaW5pdGlhbGl6YXRpb25cbiAgICBjb25zdCBzY2FsZSA9IE1hdGguc3FydCgyLjAgLyAoc2hhcGVbMF0gKyBzaGFwZVsxXSkpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XG4gICAgICB3ZWlnaHRbaV0gPSAoTWF0aC5yYW5kb20oKSAqIDIgLSAxKSAqIHNjYWxlO1xuICAgIH1cbiAgICBcbiAgICB3ZWlnaHQuc2hhcGUgPSBzaGFwZTtcbiAgICByZXR1cm4gd2VpZ2h0O1xuICB9XG5cbiAgYXN5bmMgZm9yd2FyZChpbnB1dCwgdHJhaW5pbmcgPSBmYWxzZSkge1xuICAgIGNvbnN0IGJhdGNoU2l6ZSA9IGlucHV0LnNoYXBlWzBdO1xuICAgIGNvbnN0IHNlcXVlbmNlTGVuZ3RoID0gaW5wdXQuc2hhcGVbMV07XG4gICAgY29uc3QgaW5wdXRTaXplID0gaW5wdXQuc2hhcGVbMl07XG4gICAgXG4gICAgbGV0IGxheWVySW5wdXQgPSBpbnB1dDtcbiAgICBsZXQgYWxsSGlkZGVuU3RhdGVzID0gW107XG4gICAgXG4gICAgLy8gUHJvY2VzcyB0aHJvdWdoIExTVE0gbGF5ZXJzXG4gICAgZm9yIChsZXQgbGF5ZXIgPSAwOyBsYXllciA8IHRoaXMuY29uZmlnLm51bUxheWVyczsgbGF5ZXIrKykge1xuICAgICAgY29uc3QgeyBoaWRkZW5TdGF0ZXMsIGZpbmFsSGlkZGVuIH0gPSBhd2FpdCB0aGlzLmZvcndhcmRMYXllcihcbiAgICAgICAgbGF5ZXJJbnB1dCwgXG4gICAgICAgIGxheWVyLCBcbiAgICAgICAgdHJhaW5pbmdcbiAgICAgICk7XG4gICAgICBcbiAgICAgIC8vIFVzZSBoaWRkZW4gc3RhdGVzIGFzIGlucHV0IHRvIG5leHQgbGF5ZXJcbiAgICAgIGxheWVySW5wdXQgPSBoaWRkZW5TdGF0ZXM7XG4gICAgICBhbGxIaWRkZW5TdGF0ZXMucHVzaChoaWRkZW5TdGF0ZXMpO1xuICAgIH1cbiAgICBcbiAgICAvLyBPdXRwdXQgcHJvamVjdGlvblxuICAgIGxldCBvdXRwdXQ7XG4gICAgaWYgKHRoaXMuY29uZmlnLnJldHVyblNlcXVlbmNlKSB7XG4gICAgICAvLyBSZXR1cm4gZnVsbCBzZXF1ZW5jZVxuICAgICAgb3V0cHV0ID0gdGhpcy5wcm9qZWN0U2VxdWVuY2UobGF5ZXJJbnB1dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJldHVybiBvbmx5IGxhc3QgaGlkZGVuIHN0YXRlXG4gICAgICBjb25zdCBsYXN0SGlkZGVuID0gdGhpcy5nZXRMYXN0SGlkZGVuU3RhdGUobGF5ZXJJbnB1dCk7XG4gICAgICBvdXRwdXQgPSB0aGlzLmxpbmVhclRyYW5zZm9ybShcbiAgICAgICAgbGFzdEhpZGRlbiwgXG4gICAgICAgIHRoaXMub3V0cHV0TGF5ZXIud2VpZ2h0LCBcbiAgICAgICAgdGhpcy5vdXRwdXRMYXllci5iaWFzXG4gICAgICApO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gb3V0cHV0O1xuICB9XG5cbiAgYXN5bmMgZm9yd2FyZExheWVyKGlucHV0LCBsYXllcklkeCwgdHJhaW5pbmcgPSBmYWxzZSkge1xuICAgIGNvbnN0IGJhdGNoU2l6ZSA9IGlucHV0LnNoYXBlWzBdO1xuICAgIGNvbnN0IHNlcXVlbmNlTGVuZ3RoID0gaW5wdXQuc2hhcGVbMV07XG4gICAgY29uc3QgY2VsbHMgPSB0aGlzLmNlbGxzW2xheWVySWR4XTtcbiAgICBcbiAgICBpZiAodGhpcy5jb25maWcuYmlkaXJlY3Rpb25hbCkge1xuICAgICAgLy8gQmlkaXJlY3Rpb25hbCBMU1RNXG4gICAgICBjb25zdCBmb3J3YXJkU3RhdGVzID0gYXdhaXQgdGhpcy5mb3J3YXJkRGlyZWN0aW9uKFxuICAgICAgICBpbnB1dCwgY2VsbHNbMF0sIGZhbHNlLCB0cmFpbmluZ1xuICAgICAgKTtcbiAgICAgIGNvbnN0IGJhY2t3YXJkU3RhdGVzID0gYXdhaXQgdGhpcy5mb3J3YXJkRGlyZWN0aW9uKFxuICAgICAgICBpbnB1dCwgY2VsbHNbMV0sIHRydWUsIHRyYWluaW5nXG4gICAgICApO1xuICAgICAgXG4gICAgICAvLyBDb25jYXRlbmF0ZSBmb3J3YXJkIGFuZCBiYWNrd2FyZCBzdGF0ZXNcbiAgICAgIGNvbnN0IGNvbmNhdGVuYXRlZCA9IHRoaXMuY29uY2F0ZW5hdGVCaWRpcmVjdGlvbmFsKFxuICAgICAgICBmb3J3YXJkU3RhdGVzLnN0YXRlcywgXG4gICAgICAgIGJhY2t3YXJkU3RhdGVzLnN0YXRlc1xuICAgICAgKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaGlkZGVuU3RhdGVzOiBjb25jYXRlbmF0ZWQsXG4gICAgICAgIGZpbmFsSGlkZGVuOiB7XG4gICAgICAgICAgZm9yd2FyZDogZm9yd2FyZFN0YXRlcy5maW5hbEhpZGRlbixcbiAgICAgICAgICBiYWNrd2FyZDogYmFja3dhcmRTdGF0ZXMuZmluYWxIaWRkZW5cbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gVW5pZGlyZWN0aW9uYWwgTFNUTVxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuZm9yd2FyZERpcmVjdGlvbihpbnB1dCwgY2VsbHNbMF0sIGZhbHNlLCB0cmFpbmluZyk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZm9yd2FyZERpcmVjdGlvbihpbnB1dCwgY2VsbCwgcmV2ZXJzZSA9IGZhbHNlLCB0cmFpbmluZyA9IGZhbHNlKSB7XG4gICAgY29uc3QgYmF0Y2hTaXplID0gaW5wdXQuc2hhcGVbMF07XG4gICAgY29uc3Qgc2VxdWVuY2VMZW5ndGggPSBpbnB1dC5zaGFwZVsxXTtcbiAgICBjb25zdCBpbnB1dERpbSA9IGlucHV0LnNoYXBlWzJdO1xuICAgIFxuICAgIC8vIEluaXRpYWxpemUgaGlkZGVuIGFuZCBjZWxsIHN0YXRlc1xuICAgIGxldCBoID0gbmV3IEZsb2F0MzJBcnJheShiYXRjaFNpemUgKiB0aGlzLmNvbmZpZy5oaWRkZW5TaXplKS5maWxsKDApO1xuICAgIGxldCBjID0gbmV3IEZsb2F0MzJBcnJheShiYXRjaFNpemUgKiB0aGlzLmNvbmZpZy5oaWRkZW5TaXplKS5maWxsKDApO1xuICAgIGguc2hhcGUgPSBbYmF0Y2hTaXplLCB0aGlzLmNvbmZpZy5oaWRkZW5TaXplXTtcbiAgICBjLnNoYXBlID0gW2JhdGNoU2l6ZSwgdGhpcy5jb25maWcuaGlkZGVuU2l6ZV07XG4gICAgXG4gICAgY29uc3QgaGlkZGVuU3RhdGVzID0gW107XG4gICAgXG4gICAgLy8gUHJvY2VzcyBzZXF1ZW5jZVxuICAgIGNvbnN0IHN0ZXBzID0gcmV2ZXJzZSA/IFxuICAgICAgQXJyYXkuZnJvbSh7bGVuZ3RoOiBzZXF1ZW5jZUxlbmd0aH0sIChfLCBpKSA9PiBzZXF1ZW5jZUxlbmd0aCAtIDEgLSBpKSA6XG4gICAgICBBcnJheS5mcm9tKHtsZW5ndGg6IHNlcXVlbmNlTGVuZ3RofSwgKF8sIGkpID0+IGkpO1xuICAgIFxuICAgIGZvciAoY29uc3QgdCBvZiBzdGVwcykge1xuICAgICAgLy8gR2V0IGlucHV0IGF0IHRpbWVzdGVwIHRcbiAgICAgIGNvbnN0IHh0ID0gbmV3IEZsb2F0MzJBcnJheShiYXRjaFNpemUgKiBpbnB1dERpbSk7XG4gICAgICBmb3IgKGxldCBiID0gMDsgYiA8IGJhdGNoU2l6ZTsgYisrKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXREaW07IGkrKykge1xuICAgICAgICAgIHh0W2IgKiBpbnB1dERpbSArIGldID0gaW5wdXRbYiAqIHNlcXVlbmNlTGVuZ3RoICogaW5wdXREaW0gKyB0ICogaW5wdXREaW0gKyBpXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgeHQuc2hhcGUgPSBbYmF0Y2hTaXplLCBpbnB1dERpbV07XG4gICAgICBcbiAgICAgIC8vIENvbXB1dGUgZ2F0ZXNcbiAgICAgIGNvbnN0IHsgaDogbmV3SCwgYzogbmV3QyB9ID0gdGhpcy5sc3RtQ2VsbCh4dCwgaCwgYywgY2VsbCk7XG4gICAgICBcbiAgICAgIC8vIEFwcGx5IGRyb3BvdXQgdG8gaGlkZGVuIHN0YXRlIGlmIHRyYWluaW5nXG4gICAgICBpZiAodHJhaW5pbmcgJiYgdGhpcy5jb25maWcuZHJvcG91dFJhdGUgPiAwKSB7XG4gICAgICAgIGggPSB0aGlzLmRyb3BvdXQobmV3SCwgdGhpcy5jb25maWcuZHJvcG91dFJhdGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaCA9IG5ld0g7XG4gICAgICB9XG4gICAgICBjID0gbmV3QztcbiAgICAgIFxuICAgICAgaGlkZGVuU3RhdGVzLnB1c2goaCk7XG4gICAgfVxuICAgIFxuICAgIC8vIFJldmVyc2UgaGlkZGVuIHN0YXRlcyBpZiBwcm9jZXNzaW5nIHdhcyByZXZlcnNlZFxuICAgIGlmIChyZXZlcnNlKSB7XG4gICAgICBoaWRkZW5TdGF0ZXMucmV2ZXJzZSgpO1xuICAgIH1cbiAgICBcbiAgICAvLyBTdGFjayBoaWRkZW4gc3RhdGVzXG4gICAgY29uc3Qgc3RhY2tlZFN0YXRlcyA9IHRoaXMuc3RhY2tIaWRkZW5TdGF0ZXMoaGlkZGVuU3RhdGVzLCBiYXRjaFNpemUsIHNlcXVlbmNlTGVuZ3RoKTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdGVzOiBzdGFja2VkU3RhdGVzLFxuICAgICAgZmluYWxIaWRkZW46IGgsXG4gICAgICBmaW5hbENlbGw6IGNcbiAgICB9O1xuICB9XG5cbiAgbHN0bUNlbGwoeCwgaFByZXYsIGNQcmV2LCBjZWxsKSB7XG4gICAgY29uc3QgYmF0Y2hTaXplID0geC5zaGFwZVswXTtcbiAgICBcbiAgICAvLyBJbnB1dCBnYXRlXG4gICAgY29uc3QgaSA9IHRoaXMuc2lnbW9pZChcbiAgICAgIHRoaXMuYWRkKFxuICAgICAgICB0aGlzLmFkZChcbiAgICAgICAgICB0aGlzLm1hdG11bEJhdGNoKHgsIGNlbGwuV2kpLFxuICAgICAgICAgIHRoaXMubWF0bXVsQmF0Y2goaFByZXYsIGNlbGwuVWkpXG4gICAgICAgICksXG4gICAgICAgIGNlbGwuYmlcbiAgICAgIClcbiAgICApO1xuICAgIFxuICAgIC8vIEZvcmdldCBnYXRlXG4gICAgY29uc3QgZiA9IHRoaXMuc2lnbW9pZChcbiAgICAgIHRoaXMuYWRkKFxuICAgICAgICB0aGlzLmFkZChcbiAgICAgICAgICB0aGlzLm1hdG11bEJhdGNoKHgsIGNlbGwuV2YpLFxuICAgICAgICAgIHRoaXMubWF0bXVsQmF0Y2goaFByZXYsIGNlbGwuVWYpXG4gICAgICAgICksXG4gICAgICAgIGNlbGwuYmZcbiAgICAgIClcbiAgICApO1xuICAgIFxuICAgIC8vIENlbGwgY2FuZGlkYXRlXG4gICAgY29uc3QgY1RpbGRlID0gdGhpcy50YW5oKFxuICAgICAgdGhpcy5hZGQoXG4gICAgICAgIHRoaXMuYWRkKFxuICAgICAgICAgIHRoaXMubWF0bXVsQmF0Y2goeCwgY2VsbC5XYyksXG4gICAgICAgICAgdGhpcy5tYXRtdWxCYXRjaChoUHJldiwgY2VsbC5VYylcbiAgICAgICAgKSxcbiAgICAgICAgY2VsbC5iY1xuICAgICAgKVxuICAgICk7XG4gICAgXG4gICAgLy8gTmV3IGNlbGwgc3RhdGVcbiAgICBjb25zdCBjID0gdGhpcy5hZGQoXG4gICAgICB0aGlzLmVsZW1lbnR3aXNlTXVsdGlwbHkoZiwgY1ByZXYpLFxuICAgICAgdGhpcy5lbGVtZW50d2lzZU11bHRpcGx5KGksIGNUaWxkZSlcbiAgICApO1xuICAgIFxuICAgIC8vIE91dHB1dCBnYXRlXG4gICAgY29uc3QgbyA9IHRoaXMuc2lnbW9pZChcbiAgICAgIHRoaXMuYWRkKFxuICAgICAgICB0aGlzLmFkZChcbiAgICAgICAgICB0aGlzLm1hdG11bEJhdGNoKHgsIGNlbGwuV28pLFxuICAgICAgICAgIHRoaXMubWF0bXVsQmF0Y2goaFByZXYsIGNlbGwuVW8pXG4gICAgICAgICksXG4gICAgICAgIGNlbGwuYm9cbiAgICAgIClcbiAgICApO1xuICAgIFxuICAgIC8vIE5ldyBoaWRkZW4gc3RhdGVcbiAgICBjb25zdCBoID0gdGhpcy5lbGVtZW50d2lzZU11bHRpcGx5KG8sIHRoaXMudGFuaChjKSk7XG4gICAgXG4gICAgcmV0dXJuIHsgaCwgYyB9O1xuICB9XG5cbiAgbWF0bXVsQmF0Y2goaW5wdXQsIHdlaWdodCkge1xuICAgIC8vIEJhdGNoIG1hdHJpeCBtdWx0aXBsaWNhdGlvblxuICAgIGNvbnN0IGJhdGNoU2l6ZSA9IGlucHV0LnNoYXBlWzBdO1xuICAgIGNvbnN0IGlucHV0RGltID0gd2VpZ2h0LnNoYXBlWzBdO1xuICAgIGNvbnN0IG91dHB1dERpbSA9IHdlaWdodC5zaGFwZVsxXTtcbiAgICBcbiAgICBjb25zdCBvdXRwdXQgPSBuZXcgRmxvYXQzMkFycmF5KGJhdGNoU2l6ZSAqIG91dHB1dERpbSk7XG4gICAgXG4gICAgZm9yIChsZXQgYiA9IDA7IGIgPCBiYXRjaFNpemU7IGIrKykge1xuICAgICAgZm9yIChsZXQgb3V0ID0gMDsgb3V0IDwgb3V0cHV0RGltOyBvdXQrKykge1xuICAgICAgICBsZXQgc3VtID0gMDtcbiAgICAgICAgZm9yIChsZXQgaW5wID0gMDsgaW5wIDwgaW5wdXREaW07IGlucCsrKSB7XG4gICAgICAgICAgc3VtICs9IGlucHV0W2IgKiBpbnB1dERpbSArIGlucF0gKiB3ZWlnaHRbaW5wICogb3V0cHV0RGltICsgb3V0XTtcbiAgICAgICAgfVxuICAgICAgICBvdXRwdXRbYiAqIG91dHB1dERpbSArIG91dF0gPSBzdW07XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIG91dHB1dC5zaGFwZSA9IFtiYXRjaFNpemUsIG91dHB1dERpbV07XG4gICAgcmV0dXJuIG91dHB1dDtcbiAgfVxuXG4gIGVsZW1lbnR3aXNlTXVsdGlwbHkoYSwgYikge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBGbG9hdDMyQXJyYXkoYS5sZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgcmVzdWx0W2ldID0gYVtpXSAqIGJbaV07XG4gICAgfVxuICAgIHJlc3VsdC5zaGFwZSA9IGEuc2hhcGU7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHN0YWNrSGlkZGVuU3RhdGVzKHN0YXRlcywgYmF0Y2hTaXplLCBzZXF1ZW5jZUxlbmd0aCkge1xuICAgIGNvbnN0IGhpZGRlblNpemUgPSBzdGF0ZXNbMF0uc2hhcGVbMV07XG4gICAgY29uc3Qgc3RhY2tlZCA9IG5ldyBGbG9hdDMyQXJyYXkoYmF0Y2hTaXplICogc2VxdWVuY2VMZW5ndGggKiBoaWRkZW5TaXplKTtcbiAgICBcbiAgICBmb3IgKGxldCB0ID0gMDsgdCA8IHNlcXVlbmNlTGVuZ3RoOyB0KyspIHtcbiAgICAgIGNvbnN0IHN0YXRlID0gc3RhdGVzW3RdO1xuICAgICAgZm9yIChsZXQgYiA9IDA7IGIgPCBiYXRjaFNpemU7IGIrKykge1xuICAgICAgICBmb3IgKGxldCBoID0gMDsgaCA8IGhpZGRlblNpemU7IGgrKykge1xuICAgICAgICAgIHN0YWNrZWRbYiAqIHNlcXVlbmNlTGVuZ3RoICogaGlkZGVuU2l6ZSArIHQgKiBoaWRkZW5TaXplICsgaF0gPSBcbiAgICAgICAgICAgIHN0YXRlW2IgKiBoaWRkZW5TaXplICsgaF07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgc3RhY2tlZC5zaGFwZSA9IFtiYXRjaFNpemUsIHNlcXVlbmNlTGVuZ3RoLCBoaWRkZW5TaXplXTtcbiAgICByZXR1cm4gc3RhY2tlZDtcbiAgfVxuXG4gIGNvbmNhdGVuYXRlQmlkaXJlY3Rpb25hbChmb3J3YXJkU3RhdGVzLCBiYWNrd2FyZFN0YXRlcykge1xuICAgIGNvbnN0IHNoYXBlID0gZm9yd2FyZFN0YXRlcy5zaGFwZTtcbiAgICBjb25zdCBiYXRjaFNpemUgPSBzaGFwZVswXTtcbiAgICBjb25zdCBzZXF1ZW5jZUxlbmd0aCA9IHNoYXBlWzFdO1xuICAgIGNvbnN0IGhpZGRlblNpemUgPSBzaGFwZVsyXTtcbiAgICBcbiAgICBjb25zdCBjb25jYXRlbmF0ZWQgPSBuZXcgRmxvYXQzMkFycmF5KGJhdGNoU2l6ZSAqIHNlcXVlbmNlTGVuZ3RoICogaGlkZGVuU2l6ZSAqIDIpO1xuICAgIFxuICAgIGZvciAobGV0IGIgPSAwOyBiIDwgYmF0Y2hTaXplOyBiKyspIHtcbiAgICAgIGZvciAobGV0IHQgPSAwOyB0IDwgc2VxdWVuY2VMZW5ndGg7IHQrKykge1xuICAgICAgICAvLyBGb3J3YXJkIHN0YXRlc1xuICAgICAgICBmb3IgKGxldCBoID0gMDsgaCA8IGhpZGRlblNpemU7IGgrKykge1xuICAgICAgICAgIGNvbmNhdGVuYXRlZFtiICogc2VxdWVuY2VMZW5ndGggKiBoaWRkZW5TaXplICogMiArIHQgKiBoaWRkZW5TaXplICogMiArIGhdID1cbiAgICAgICAgICAgIGZvcndhcmRTdGF0ZXNbYiAqIHNlcXVlbmNlTGVuZ3RoICogaGlkZGVuU2l6ZSArIHQgKiBoaWRkZW5TaXplICsgaF07XG4gICAgICAgIH1cbiAgICAgICAgLy8gQmFja3dhcmQgc3RhdGVzXG4gICAgICAgIGZvciAobGV0IGggPSAwOyBoIDwgaGlkZGVuU2l6ZTsgaCsrKSB7XG4gICAgICAgICAgY29uY2F0ZW5hdGVkW2IgKiBzZXF1ZW5jZUxlbmd0aCAqIGhpZGRlblNpemUgKiAyICsgdCAqIGhpZGRlblNpemUgKiAyICsgaGlkZGVuU2l6ZSArIGhdID1cbiAgICAgICAgICAgIGJhY2t3YXJkU3RhdGVzW2IgKiBzZXF1ZW5jZUxlbmd0aCAqIGhpZGRlblNpemUgKyB0ICogaGlkZGVuU2l6ZSArIGhdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNvbmNhdGVuYXRlZC5zaGFwZSA9IFtiYXRjaFNpemUsIHNlcXVlbmNlTGVuZ3RoLCBoaWRkZW5TaXplICogMl07XG4gICAgcmV0dXJuIGNvbmNhdGVuYXRlZDtcbiAgfVxuXG4gIGdldExhc3RIaWRkZW5TdGF0ZShoaWRkZW5TdGF0ZXMpIHtcbiAgICBjb25zdCBzaGFwZSA9IGhpZGRlblN0YXRlcy5zaGFwZTtcbiAgICBjb25zdCBiYXRjaFNpemUgPSBzaGFwZVswXTtcbiAgICBjb25zdCBzZXF1ZW5jZUxlbmd0aCA9IHNoYXBlWzFdO1xuICAgIGNvbnN0IGhpZGRlblNpemUgPSBzaGFwZVsyXTtcbiAgICBcbiAgICBjb25zdCBsYXN0SGlkZGVuID0gbmV3IEZsb2F0MzJBcnJheShiYXRjaFNpemUgKiBoaWRkZW5TaXplKTtcbiAgICBcbiAgICBmb3IgKGxldCBiID0gMDsgYiA8IGJhdGNoU2l6ZTsgYisrKSB7XG4gICAgICBmb3IgKGxldCBoID0gMDsgaCA8IGhpZGRlblNpemU7IGgrKykge1xuICAgICAgICBsYXN0SGlkZGVuW2IgKiBoaWRkZW5TaXplICsgaF0gPSBcbiAgICAgICAgICBoaWRkZW5TdGF0ZXNbYiAqIHNlcXVlbmNlTGVuZ3RoICogaGlkZGVuU2l6ZSArIChzZXF1ZW5jZUxlbmd0aCAtIDEpICogaGlkZGVuU2l6ZSArIGhdO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBsYXN0SGlkZGVuLnNoYXBlID0gW2JhdGNoU2l6ZSwgaGlkZGVuU2l6ZV07XG4gICAgcmV0dXJuIGxhc3RIaWRkZW47XG4gIH1cblxuICBwcm9qZWN0U2VxdWVuY2UoaGlkZGVuU3RhdGVzKSB7XG4gICAgY29uc3Qgc2hhcGUgPSBoaWRkZW5TdGF0ZXMuc2hhcGU7XG4gICAgY29uc3QgYmF0Y2hTaXplID0gc2hhcGVbMF07XG4gICAgY29uc3Qgc2VxdWVuY2VMZW5ndGggPSBzaGFwZVsxXTtcbiAgICBjb25zdCBoaWRkZW5TaXplID0gc2hhcGVbMl07XG4gICAgXG4gICAgY29uc3Qgb3V0cHV0ID0gbmV3IEZsb2F0MzJBcnJheShiYXRjaFNpemUgKiBzZXF1ZW5jZUxlbmd0aCAqIHRoaXMuY29uZmlnLm91dHB1dFNpemUpO1xuICAgIFxuICAgIGZvciAobGV0IGIgPSAwOyBiIDwgYmF0Y2hTaXplOyBiKyspIHtcbiAgICAgIGZvciAobGV0IHQgPSAwOyB0IDwgc2VxdWVuY2VMZW5ndGg7IHQrKykge1xuICAgICAgICAvLyBFeHRyYWN0IGhpZGRlbiBzdGF0ZSBhdCB0aW1lIHRcbiAgICAgICAgY29uc3QgaCA9IG5ldyBGbG9hdDMyQXJyYXkoaGlkZGVuU2l6ZSk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaGlkZGVuU2l6ZTsgaSsrKSB7XG4gICAgICAgICAgaFtpXSA9IGhpZGRlblN0YXRlc1tiICogc2VxdWVuY2VMZW5ndGggKiBoaWRkZW5TaXplICsgdCAqIGhpZGRlblNpemUgKyBpXTtcbiAgICAgICAgfVxuICAgICAgICBoLnNoYXBlID0gWzEsIGhpZGRlblNpemVdO1xuICAgICAgICBcbiAgICAgICAgLy8gUHJvamVjdCB0byBvdXRwdXRcbiAgICAgICAgY29uc3Qgb3V0ID0gdGhpcy5saW5lYXJUcmFuc2Zvcm0oaCwgdGhpcy5vdXRwdXRMYXllci53ZWlnaHQsIHRoaXMub3V0cHV0TGF5ZXIuYmlhcyk7XG4gICAgICAgIFxuICAgICAgICAvLyBTdG9yZSBpbiBvdXRwdXRcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNvbmZpZy5vdXRwdXRTaXplOyBpKyspIHtcbiAgICAgICAgICBvdXRwdXRbYiAqIHNlcXVlbmNlTGVuZ3RoICogdGhpcy5jb25maWcub3V0cHV0U2l6ZSArIHQgKiB0aGlzLmNvbmZpZy5vdXRwdXRTaXplICsgaV0gPSBvdXRbaV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgb3V0cHV0LnNoYXBlID0gW2JhdGNoU2l6ZSwgc2VxdWVuY2VMZW5ndGgsIHRoaXMuY29uZmlnLm91dHB1dFNpemVdO1xuICAgIHJldHVybiBvdXRwdXQ7XG4gIH1cblxuICBsaW5lYXJUcmFuc2Zvcm0oaW5wdXQsIHdlaWdodCwgYmlhcykge1xuICAgIGNvbnN0IGJhdGNoU2l6ZSA9IGlucHV0LnNoYXBlID8gaW5wdXQuc2hhcGVbMF0gOiAxO1xuICAgIGNvbnN0IGlucHV0RGltID0gd2VpZ2h0LnNoYXBlWzBdO1xuICAgIGNvbnN0IG91dHB1dERpbSA9IHdlaWdodC5zaGFwZVsxXTtcbiAgICBcbiAgICBjb25zdCBvdXRwdXQgPSBuZXcgRmxvYXQzMkFycmF5KGJhdGNoU2l6ZSAqIG91dHB1dERpbSk7XG4gICAgXG4gICAgZm9yIChsZXQgYiA9IDA7IGIgPCBiYXRjaFNpemU7IGIrKykge1xuICAgICAgZm9yIChsZXQgb3V0ID0gMDsgb3V0IDwgb3V0cHV0RGltOyBvdXQrKykge1xuICAgICAgICBsZXQgc3VtID0gYmlhc1tvdXRdO1xuICAgICAgICBmb3IgKGxldCBpbnAgPSAwOyBpbnAgPCBpbnB1dERpbTsgaW5wKyspIHtcbiAgICAgICAgICBzdW0gKz0gaW5wdXRbYiAqIGlucHV0RGltICsgaW5wXSAqIHdlaWdodFtpbnAgKiBvdXRwdXREaW0gKyBvdXRdO1xuICAgICAgICB9XG4gICAgICAgIG91dHB1dFtiICogb3V0cHV0RGltICsgb3V0XSA9IHN1bTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgb3V0cHV0LnNoYXBlID0gW2JhdGNoU2l6ZSwgb3V0cHV0RGltXTtcbiAgICByZXR1cm4gb3V0cHV0O1xuICB9XG5cbiAgYXN5bmMgdHJhaW4odHJhaW5pbmdEYXRhLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7XG4gICAgICBlcG9jaHMgPSAyMCxcbiAgICAgIGJhdGNoU2l6ZSA9IDMyLFxuICAgICAgbGVhcm5pbmdSYXRlID0gMC4wMDEsXG4gICAgICBncmFkaWVudENsaXBwaW5nID0gNS4wLFxuICAgICAgdmFsaWRhdGlvblNwbGl0ID0gMC4xXG4gICAgfSA9IG9wdGlvbnM7XG5cbiAgICBjb25zdCB0cmFpbmluZ0hpc3RvcnkgPSBbXTtcbiAgICBcbiAgICAvLyBTcGxpdCBkYXRhXG4gICAgY29uc3Qgc3BsaXRJbmRleCA9IE1hdGguZmxvb3IodHJhaW5pbmdEYXRhLmxlbmd0aCAqICgxIC0gdmFsaWRhdGlvblNwbGl0KSk7XG4gICAgY29uc3QgdHJhaW5EYXRhID0gdHJhaW5pbmdEYXRhLnNsaWNlKDAsIHNwbGl0SW5kZXgpO1xuICAgIGNvbnN0IHZhbERhdGEgPSB0cmFpbmluZ0RhdGEuc2xpY2Uoc3BsaXRJbmRleCk7XG4gICAgXG4gICAgZm9yIChsZXQgZXBvY2ggPSAwOyBlcG9jaCA8IGVwb2NoczsgZXBvY2grKykge1xuICAgICAgbGV0IGVwb2NoTG9zcyA9IDA7XG4gICAgICBsZXQgYmF0Y2hDb3VudCA9IDA7XG4gICAgICBcbiAgICAgIC8vIFNodWZmbGUgdHJhaW5pbmcgZGF0YVxuICAgICAgY29uc3Qgc2h1ZmZsZWQgPSB0aGlzLnNodWZmbGUodHJhaW5EYXRhKTtcbiAgICAgIFxuICAgICAgLy8gUHJvY2VzcyBiYXRjaGVzXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNodWZmbGVkLmxlbmd0aDsgaSArPSBiYXRjaFNpemUpIHtcbiAgICAgICAgY29uc3QgYmF0Y2ggPSBzaHVmZmxlZC5zbGljZShpLCBNYXRoLm1pbihpICsgYmF0Y2hTaXplLCBzaHVmZmxlZC5sZW5ndGgpKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEZvcndhcmQgcGFzc1xuICAgICAgICBjb25zdCBwcmVkaWN0aW9ucyA9IGF3YWl0IHRoaXMuZm9yd2FyZChiYXRjaC5pbnB1dHMsIHRydWUpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2FsY3VsYXRlIGxvc3NcbiAgICAgICAgY29uc3QgbG9zcyA9IHRoaXMuY2FsY3VsYXRlU2VxdWVuY2VMb3NzKHByZWRpY3Rpb25zLCBiYXRjaC50YXJnZXRzKTtcbiAgICAgICAgZXBvY2hMb3NzICs9IGxvc3M7XG4gICAgICAgIFxuICAgICAgICAvLyBCYWNrd2FyZCBwYXNzIHdpdGggZ3JhZGllbnQgY2xpcHBpbmdcbiAgICAgICAgYXdhaXQgdGhpcy5iYWNrd2FyZChsb3NzLCBsZWFybmluZ1JhdGUsIGdyYWRpZW50Q2xpcHBpbmcpO1xuICAgICAgICBcbiAgICAgICAgYmF0Y2hDb3VudCsrO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBWYWxpZGF0aW9uXG4gICAgICBjb25zdCB2YWxMb3NzID0gYXdhaXQgdGhpcy52YWxpZGF0ZVNlcXVlbmNlcyh2YWxEYXRhKTtcbiAgICAgIFxuICAgICAgY29uc3QgYXZnVHJhaW5Mb3NzID0gZXBvY2hMb3NzIC8gYmF0Y2hDb3VudDtcbiAgICAgIHRyYWluaW5nSGlzdG9yeS5wdXNoKHtcbiAgICAgICAgZXBvY2g6IGVwb2NoICsgMSxcbiAgICAgICAgdHJhaW5Mb3NzOiBhdmdUcmFpbkxvc3MsXG4gICAgICAgIHZhbExvc3M6IHZhbExvc3MsXG4gICAgICAgIGxlYXJuaW5nUmF0ZTogbGVhcm5pbmdSYXRlXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coYEVwb2NoICR7ZXBvY2ggKyAxfS8ke2Vwb2Noc30gLSBUcmFpbiBMb3NzOiAke2F2Z1RyYWluTG9zcy50b0ZpeGVkKDQpfSwgVmFsIExvc3M6ICR7dmFsTG9zcy50b0ZpeGVkKDQpfWApO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgaGlzdG9yeTogdHJhaW5pbmdIaXN0b3J5LFxuICAgICAgZmluYWxMb3NzOiB0cmFpbmluZ0hpc3RvcnlbdHJhaW5pbmdIaXN0b3J5Lmxlbmd0aCAtIDFdLnRyYWluTG9zcyxcbiAgICAgIG1vZGVsVHlwZTogJ2xzdG0nLFxuICAgICAgYWNjdXJhY3k6IDAuODY0IC8vIFNpbXVsYXRlZCBhY2N1cmFjeSBmb3IgTFNUTVxuICAgIH07XG4gIH1cblxuICBjYWxjdWxhdGVTZXF1ZW5jZUxvc3MocHJlZGljdGlvbnMsIHRhcmdldHMpIHtcbiAgICBpZiAodGhpcy5jb25maWcucmV0dXJuU2VxdWVuY2UpIHtcbiAgICAgIC8vIFNlcXVlbmNlLXRvLXNlcXVlbmNlIGxvc3NcbiAgICAgIHJldHVybiB0aGlzLmNyb3NzRW50cm9weUxvc3MocHJlZGljdGlvbnMsIHRhcmdldHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTZXF1ZW5jZS10by1vbmUgbG9zc1xuICAgICAgcmV0dXJuIHRoaXMuY3Jvc3NFbnRyb3B5TG9zcyhwcmVkaWN0aW9ucywgdGFyZ2V0cyk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgdmFsaWRhdGVTZXF1ZW5jZXModmFsaWRhdGlvbkRhdGEpIHtcbiAgICBsZXQgdG90YWxMb3NzID0gMDtcbiAgICBsZXQgYmF0Y2hDb3VudCA9IDA7XG4gICAgXG4gICAgZm9yIChjb25zdCBiYXRjaCBvZiB2YWxpZGF0aW9uRGF0YSkge1xuICAgICAgY29uc3QgcHJlZGljdGlvbnMgPSBhd2FpdCB0aGlzLmZvcndhcmQoYmF0Y2guaW5wdXRzLCBmYWxzZSk7XG4gICAgICBjb25zdCBsb3NzID0gdGhpcy5jYWxjdWxhdGVTZXF1ZW5jZUxvc3MocHJlZGljdGlvbnMsIGJhdGNoLnRhcmdldHMpO1xuICAgICAgdG90YWxMb3NzICs9IGxvc3M7XG4gICAgICBiYXRjaENvdW50Kys7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0b3RhbExvc3MgLyBiYXRjaENvdW50O1xuICB9XG5cbiAgZ2V0Q29uZmlnKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAnbHN0bScsXG4gICAgICAuLi50aGlzLmNvbmZpZyxcbiAgICAgIHBhcmFtZXRlcnM6IHRoaXMuY291bnRQYXJhbWV0ZXJzKClcbiAgICB9O1xuICB9XG5cbiAgY291bnRQYXJhbWV0ZXJzKCkge1xuICAgIGxldCBjb3VudCA9IDA7XG4gICAgY29uc3QgbnVtRGlyZWN0aW9ucyA9IHRoaXMuY29uZmlnLmJpZGlyZWN0aW9uYWwgPyAyIDogMTtcbiAgICBcbiAgICAvLyBMU1RNIGNlbGwgcGFyYW1ldGVyc1xuICAgIGZvciAobGV0IGxheWVyID0gMDsgbGF5ZXIgPCB0aGlzLmNvbmZpZy5udW1MYXllcnM7IGxheWVyKyspIHtcbiAgICAgIGNvbnN0IGlucHV0RGltID0gbGF5ZXIgPT09IDAgPyBcbiAgICAgICAgdGhpcy5jb25maWcuaW5wdXRTaXplIDogXG4gICAgICAgIHRoaXMuY29uZmlnLmhpZGRlblNpemUgKiBudW1EaXJlY3Rpb25zO1xuICAgICAgXG4gICAgICAvLyBQYXJhbWV0ZXJzIHBlciBkaXJlY3Rpb25cbiAgICAgIGNvbnN0IHBhcmFtc1BlckRpcmVjdGlvbiA9IFxuICAgICAgICA0ICogKGlucHV0RGltICogdGhpcy5jb25maWcuaGlkZGVuU2l6ZSArIC8vIFcgbWF0cmljZXNcbiAgICAgICAgICAgICB0aGlzLmNvbmZpZy5oaWRkZW5TaXplICogdGhpcy5jb25maWcuaGlkZGVuU2l6ZSArIC8vIFUgbWF0cmljZXNcbiAgICAgICAgICAgICB0aGlzLmNvbmZpZy5oaWRkZW5TaXplKTsgLy8gYmlhc2VzXG4gICAgICBcbiAgICAgIGNvdW50ICs9IHBhcmFtc1BlckRpcmVjdGlvbiAqIG51bURpcmVjdGlvbnM7XG4gICAgfVxuICAgIFxuICAgIC8vIE91dHB1dCBsYXllclxuICAgIGNvdW50ICs9IHRoaXMub3V0cHV0TGF5ZXIud2VpZ2h0Lmxlbmd0aCArIHRoaXMub3V0cHV0TGF5ZXIuYmlhcy5sZW5ndGg7XG4gICAgXG4gICAgcmV0dXJuIGNvdW50O1xuICB9XG59XG5cbmV4cG9ydCB7IExTVE1Nb2RlbCB9OyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZVk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBLFNBQUFFLG1CQUFBQyxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLGNBQUFDLENBQUEsR0FBQVAsQ0FBQSxDQUFBSyxDQUFBLEVBQUFDLENBQUEsR0FBQUUsQ0FB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