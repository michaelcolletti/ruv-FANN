{"version":3,"names":["cov_21cgo8c2il","actualCoverage","timeSeriesPresets","s","stock_market_prediction","name","description","model","config","inputSize","hiddenSize","numLayers","outputSize","bidirectional","returnSequence","dropoutRate","attentionMechanism","lookbackWindow","training","batchSize","learningRate","epochs","optimizer","scheduler","lossFunction","earlyStoppingPatience","validationSplit","performance","expectedAccuracy","inferenceTime","memoryUsage","trainingTime","useCase","weather_forecasting","multiHeadAttention","gradientClipping","temperatureScaling","energy_consumption","residualConnections","seasonalDecomposition","augmentation","noiseInjection","timeShift","scalingFactor","predictive_maintenance","convolutionalEncoder","kernelSize","classBalancing","focalLossGamma","validationStrategy","anomaly_detection_iot","encoderLayers","bottleneckSize","decoderLayers","activation","outputActivation","variational","betaKL","windowSize","reconstructionThreshold","onlineAdaptation","adaptationRate","sales_forecasting","externalVariables","productEmbeddingSize","quantiles","hierarchicalReconciliation","network_traffic_prediction","waveletDecomposition","decompositionLevels","deltaHuber","syntheticSpikes","smoothing","healthcare_monitoring","attentionWindow","clinicalConstraints","classWeights","falseNegativePenalty","crypto_prediction","dimensions","heads","layers","ffDimensions","maxLength","features","outputHorizon","priceEmbedding","warmupSteps","volatilityWeighting","syntheticData","agricultural_yield","spatialFeatures","temporalAggregation","dataAugmentation","weatherPerturbation","soilVariation","crossValidation","getTimeSeriesPreset","presetName","f","b","Error","Object","keys","join","availableTimeSeriesPresets"],"sources":["timeseries.js"],"sourcesContent":["/**\n * Time Series Neural Network Presets\n * Production-ready configurations for temporal data analysis and forecasting\n */\n\nexport const timeSeriesPresets = {\n  // Stock Market Prediction\n  stock_market_prediction: {\n    name: 'Stock Market Predictor',\n    description: 'Predict stock prices and market trends',\n    model: 'lstm',\n    config: {\n      inputSize: 20, // OHLCV + technical indicators\n      hiddenSize: 256,\n      numLayers: 4,\n      outputSize: 3, // Next day: [price, low, high]\n      bidirectional: false,\n      returnSequence: false,\n      dropoutRate: 0.3,\n      attentionMechanism: true,\n      lookbackWindow: 60\n    },\n    training: {\n      batchSize: 64,\n      learningRate: 1e-3,\n      epochs: 200,\n      optimizer: 'adam',\n      scheduler: 'exponential',\n      lossFunction: 'mse_with_direction_penalty',\n      earlyStoppingPatience: 20,\n      validationSplit: 0.2\n    },\n    performance: {\n      expectedAccuracy: '72-75% directional accuracy',\n      inferenceTime: '5ms',\n      memoryUsage: '300MB',\n      trainingTime: '6-8 hours on GPU'\n    },\n    useCase: 'Trading systems, portfolio management, risk assessment'\n  },\n\n  // Weather Forecasting\n  weather_forecasting: {\n    name: 'Weather Forecast Model',\n    description: 'Multi-variable weather prediction system',\n    model: 'gru',\n    config: {\n      inputSize: 15, // Temperature, humidity, pressure, wind, etc.\n      hiddenSize: 512,\n      numLayers: 3,\n      outputSize: 45, // 15 variables × 3 days forecast\n      bidirectional: true,\n      returnSequence: true,\n      dropoutRate: 0.2,\n      multiHeadAttention: 8,\n      lookbackWindow: 168 // 7 days of hourly data\n    },\n    training: {\n      batchSize: 32,\n      learningRate: 5e-4,\n      epochs: 150,\n      optimizer: 'adamw',\n      gradientClipping: 1.0,\n      lossFunction: 'weighted_mse',\n      temperatureScaling: true\n    },\n    performance: {\n      expectedAccuracy: '88-91% within 2°C',\n      inferenceTime: '15ms',\n      memoryUsage: '600MB',\n      trainingTime: '24-36 hours on GPU'\n    },\n    useCase: 'Weather services, agriculture, event planning'\n  },\n\n  // Energy Consumption Prediction\n  energy_consumption: {\n    name: 'Energy Demand Forecaster',\n    description: 'Predict energy consumption patterns',\n    model: 'lstm',\n    config: {\n      inputSize: 25, // Multiple features including calendar, weather\n      hiddenSize: 384,\n      numLayers: 3,\n      outputSize: 96, // 4 days hourly forecast\n      bidirectional: true,\n      returnSequence: true,\n      dropoutRate: 0.25,\n      residualConnections: true,\n      seasonalDecomposition: true\n    },\n    training: {\n      batchSize: 48,\n      learningRate: 2e-3,\n      epochs: 100,\n      optimizer: 'adam',\n      lossFunction: 'mape_with_peak_penalty',\n      augmentation: {\n        noiseInjection: 0.05,\n        timeShift: true,\n        scalingFactor: 0.1\n      }\n    },\n    performance: {\n      expectedAccuracy: '94-96% MAPE < 5%',\n      inferenceTime: '10ms',\n      memoryUsage: '450MB',\n      trainingTime: '12-18 hours on GPU'\n    },\n    useCase: 'Smart grid management, capacity planning, cost optimization'\n  },\n\n  // Predictive Maintenance\n  predictive_maintenance: {\n    name: 'Equipment Failure Predictor',\n    description: 'Predict equipment failures before they occur',\n    model: 'gru',\n    config: {\n      inputSize: 50, // Sensor readings\n      hiddenSize: 256,\n      numLayers: 3,\n      outputSize: 2, // [failure_probability, time_to_failure]\n      bidirectional: false,\n      returnSequence: false,\n      dropoutRate: 0.3,\n      convolutionalEncoder: true,\n      kernelSize: 5\n    },\n    training: {\n      batchSize: 128,\n      learningRate: 1e-3,\n      epochs: 150,\n      optimizer: 'adam',\n      classBalancing: 'smote',\n      focalLossGamma: 2.0,\n      validationStrategy: 'time_series_split'\n    },\n    performance: {\n      expectedAccuracy: '91-93% precision',\n      inferenceTime: '3ms',\n      memoryUsage: '200MB',\n      trainingTime: '8-12 hours on GPU'\n    },\n    useCase: 'Manufacturing, aviation, industrial IoT'\n  },\n\n  // Anomaly Detection IoT\n  anomaly_detection_iot: {\n    name: 'IoT Anomaly Detector',\n    description: 'Detect anomalies in IoT sensor streams',\n    model: 'autoencoder',\n    config: {\n      inputSize: 100, // Multiple sensor time window\n      encoderLayers: [80, 60, 40, 20],\n      bottleneckSize: 10,\n      decoderLayers: [20, 40, 60, 80],\n      activation: 'elu',\n      outputActivation: 'linear',\n      variational: true,\n      betaKL: 0.1,\n      windowSize: 100\n    },\n    training: {\n      batchSize: 256,\n      learningRate: 1e-3,\n      epochs: 100,\n      optimizer: 'adam',\n      reconstructionThreshold: 'dynamic_percentile_95',\n      onlineAdaptation: true,\n      adaptationRate: 0.01\n    },\n    performance: {\n      expectedAccuracy: '96-98% detection rate',\n      inferenceTime: '1ms',\n      memoryUsage: '100MB',\n      trainingTime: '4-6 hours on GPU'\n    },\n    useCase: 'Smart home security, industrial monitoring, network intrusion'\n  },\n\n  // Sales Forecasting\n  sales_forecasting: {\n    name: 'Retail Sales Forecaster',\n    description: 'Predict retail sales with seasonality',\n    model: 'lstm',\n    config: {\n      inputSize: 30, // Product features, promotions, calendar\n      hiddenSize: 256,\n      numLayers: 3,\n      outputSize: 30, // 30 days forecast\n      bidirectional: true,\n      returnSequence: true,\n      dropoutRate: 0.35,\n      externalVariables: ['holidays', 'promotions', 'weather'],\n      productEmbeddingSize: 64\n    },\n    training: {\n      batchSize: 64,\n      learningRate: 1e-3,\n      epochs: 120,\n      optimizer: 'adam',\n      lossFunction: 'quantile_loss',\n      quantiles: [0.1, 0.5, 0.9],\n      hierarchicalReconciliation: true\n    },\n    performance: {\n      expectedAccuracy: '85-88% within confidence interval',\n      inferenceTime: '8ms',\n      memoryUsage: '350MB',\n      trainingTime: '10-15 hours on GPU'\n    },\n    useCase: 'Inventory management, supply chain, revenue planning'\n  },\n\n  // Network Traffic Prediction\n  network_traffic_prediction: {\n    name: 'Network Traffic Analyzer',\n    description: 'Predict network load and detect anomalies',\n    model: 'gru',\n    config: {\n      inputSize: 12, // Traffic metrics\n      hiddenSize: 192,\n      numLayers: 2,\n      outputSize: 24, // Next 24 hours\n      bidirectional: false,\n      returnSequence: true,\n      dropoutRate: 0.2,\n      waveletDecomposition: true,\n      decompositionLevels: 3\n    },\n    training: {\n      batchSize: 128,\n      learningRate: 2e-3,\n      epochs: 80,\n      optimizer: 'adam',\n      lossFunction: 'huber',\n      deltaHuber: 1.0,\n      augmentation: {\n        syntheticSpikes: true,\n        smoothing: 0.1\n      }\n    },\n    performance: {\n      expectedAccuracy: '92-94% R-squared',\n      inferenceTime: '4ms',\n      memoryUsage: '150MB',\n      trainingTime: '6-8 hours on GPU'\n    },\n    useCase: 'Network capacity planning, DDoS detection, QoS optimization'\n  },\n\n  // Healthcare Monitoring\n  healthcare_monitoring: {\n    name: 'Patient Vital Signs Monitor',\n    description: 'Monitor and predict patient health events',\n    model: 'lstm',\n    config: {\n      inputSize: 8, // Heart rate, BP, SpO2, temperature, etc.\n      hiddenSize: 128,\n      numLayers: 3,\n      outputSize: 3, // Risk scores for different conditions\n      bidirectional: true,\n      returnSequence: false,\n      dropoutRate: 0.4,\n      attentionWindow: 48, // 48 hours\n      clinicalConstraints: true\n    },\n    training: {\n      batchSize: 32,\n      learningRate: 5e-4,\n      epochs: 200,\n      optimizer: 'adamw',\n      lossFunction: 'weighted_cross_entropy',\n      classWeights: 'balanced',\n      falseNegativePenalty: 5.0\n    },\n    performance: {\n      expectedAccuracy: '94-96% sensitivity',\n      inferenceTime: '2ms',\n      memoryUsage: '120MB',\n      trainingTime: '12-16 hours on GPU'\n    },\n    useCase: 'ICU monitoring, early warning systems, remote patient care'\n  },\n\n  // Cryptocurrency Prediction\n  crypto_prediction: {\n    name: 'Cryptocurrency Price Predictor',\n    description: 'Predict crypto prices with high volatility',\n    model: 'transformer',\n    config: {\n      dimensions: 256,\n      heads: 8,\n      layers: 4,\n      ffDimensions: 1024,\n      maxLength: 500,\n      features: 15, // Price, volume, social sentiment, etc.\n      outputHorizon: 24, // 24 hour prediction\n      dropoutRate: 0.3,\n      priceEmbedding: true\n    },\n    training: {\n      batchSize: 32,\n      learningRate: 1e-4,\n      warmupSteps: 1000,\n      epochs: 150,\n      optimizer: 'adamw',\n      lossFunction: 'log_cosh',\n      volatilityWeighting: true,\n      syntheticData: 0.2\n    },\n    performance: {\n      expectedAccuracy: '68-72% directional accuracy',\n      inferenceTime: '12ms',\n      memoryUsage: '400MB',\n      trainingTime: '18-24 hours on GPU'\n    },\n    useCase: 'Trading bots, portfolio optimization, risk management'\n  },\n\n  // Agricultural Yield Prediction\n  agricultural_yield: {\n    name: 'Crop Yield Predictor',\n    description: 'Predict agricultural yields based on multiple factors',\n    model: 'lstm',\n    config: {\n      inputSize: 35, // Weather, soil, satellite data\n      hiddenSize: 256,\n      numLayers: 3,\n      outputSize: 1, // Yield prediction\n      bidirectional: true,\n      returnSequence: false,\n      dropoutRate: 0.25,\n      spatialFeatures: true,\n      temporalAggregation: 'attention'\n    },\n    training: {\n      batchSize: 24,\n      learningRate: 1e-3,\n      epochs: 100,\n      optimizer: 'adam',\n      lossFunction: 'mae_with_uncertainty',\n      dataAugmentation: {\n        weatherPerturbation: 0.1,\n        soilVariation: 0.05\n      },\n      crossValidation: 'leave_one_year_out'\n    },\n    performance: {\n      expectedAccuracy: '87-90% within 10% error',\n      inferenceTime: '6ms',\n      memoryUsage: '250MB',\n      trainingTime: '8-12 hours on GPU'\n    },\n    useCase: 'Farm management, supply chain planning, insurance'\n  }\n};\n\n// Export utility function to get preset by name\nexport const getTimeSeriesPreset = (presetName) => {\n  if (!timeSeriesPresets[presetName]) {\n    throw new Error(`Time series preset '${presetName}' not found. Available presets: ${Object.keys(timeSeriesPresets).join(', ')}`);\n  }\n  return timeSeriesPresets[presetName];\n};\n\n// Export list of available presets\nexport const availableTimeSeriesPresets = Object.keys(timeSeriesPresets);"],"mappings":"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","ignoreList":[]}