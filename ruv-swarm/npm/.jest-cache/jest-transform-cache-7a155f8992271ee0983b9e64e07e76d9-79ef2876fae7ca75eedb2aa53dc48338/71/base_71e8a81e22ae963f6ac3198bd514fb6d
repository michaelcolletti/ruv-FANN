a932dd1efa7ad54bba087f16a677775e
/* istanbul ignore next */
function cov_39itvpah1() {
  var path = "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/base.js";
  var hash = "6236a93145b35f4d07c76abae260e2af70a337ef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspaces/ruv-FANN/ruv-swarm/npm/src/neural-models/base.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "3": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "4": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "5": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 63
        }
      },
      "6": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 74
        }
      },
      "7": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 16
        }
      },
      "8": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 21
        }
      },
      "9": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 22
        }
      },
      "10": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "11": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 39,
          column: 65
        }
      },
      "12": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 68
        }
      },
      "13": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 24
        }
      },
      "14": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "15": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 34
        }
      },
      "16": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "17": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 70
        }
      },
      "18": {
        start: {
          line: 56,
          column: 14
        },
        end: {
          line: 56,
          column: 24
        }
      },
      "19": {
        start: {
          line: 57,
          column: 14
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "20": {
        start: {
          line: 58,
          column: 14
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "21": {
        start: {
          line: 60,
          column: 19
        },
        end: {
          line: 60,
          column: 42
        }
      },
      "22": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "23": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "24": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "25": {
        start: {
          line: 63,
          column: 19
        },
        end: {
          line: 63,
          column: 20
        }
      },
      "26": {
        start: {
          line: 64,
          column: 18
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "27": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "28": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 22
        }
      },
      "29": {
        start: {
          line: 66,
          column: 10
        },
        end: {
          line: 66,
          column: 45
        }
      },
      "30": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 32
        }
      },
      "31": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 26
        }
      },
      "32": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 18
        }
      },
      "33": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "34": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 68
        }
      },
      "35": {
        start: {
          line: 82,
          column: 19
        },
        end: {
          line: 82,
          column: 45
        }
      },
      "36": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "37": {
        start: {
          line: 83,
          column: 17
        },
        end: {
          line: 83,
          column: 18
        }
      },
      "38": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 30
        }
      },
      "39": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 27
        }
      },
      "40": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 18
        }
      },
      "41": {
        start: {
          line: 93,
          column: 19
        },
        end: {
          line: 93,
          column: 49
        }
      },
      "42": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 31
        }
      },
      "43": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "44": {
        start: {
          line: 96,
          column: 17
        },
        end: {
          line: 96,
          column: 18
        }
      },
      "45": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 97,
          column: 47
        }
      },
      "46": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 31
        }
      },
      "47": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 18
        }
      },
      "48": {
        start: {
          line: 106,
          column: 19
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "49": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "50": {
        start: {
          line: 108,
          column: 17
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "51": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 40
        }
      },
      "52": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 31
        }
      },
      "53": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 18
        }
      },
      "54": {
        start: {
          line: 118,
          column: 19
        },
        end: {
          line: 118,
          column: 49
        }
      },
      "55": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "56": {
        start: {
          line: 120,
          column: 17
        },
        end: {
          line: 120,
          column: 18
        }
      },
      "57": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 48
        }
      },
      "58": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 31
        }
      },
      "59": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 18
        }
      },
      "60": {
        start: {
          line: 130,
          column: 19
        },
        end: {
          line: 130,
          column: 49
        }
      },
      "61": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "62": {
        start: {
          line: 132,
          column: 17
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "63": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 133,
          column: 38
        }
      },
      "64": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 31
        }
      },
      "65": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 18
        }
      },
      "66": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 32
        }
      },
      "67": {
        start: {
          line: 142,
          column: 19
        },
        end: {
          line: 142,
          column: 32
        }
      },
      "68": {
        start: {
          line: 144,
          column: 19
        },
        end: {
          line: 144,
          column: 49
        }
      },
      "69": {
        start: {
          line: 145,
          column: 18
        },
        end: {
          line: 145,
          column: 32
        }
      },
      "70": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "71": {
        start: {
          line: 147,
          column: 17
        },
        end: {
          line: 147,
          column: 18
        }
      },
      "72": {
        start: {
          line: 148,
          column: 6
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "73": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 37
        }
      },
      "74": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 22
        }
      },
      "75": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 155,
          column: 31
        }
      },
      "76": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 18
        }
      },
      "77": {
        start: {
          line: 161,
          column: 15
        },
        end: {
          line: 161,
          column: 16
        }
      },
      "78": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 24
        }
      },
      "79": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "80": {
        start: {
          line: 164,
          column: 17
        },
        end: {
          line: 164,
          column: 18
        }
      },
      "81": {
        start: {
          line: 165,
          column: 19
        },
        end: {
          line: 165,
          column: 75
        }
      },
      "82": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 170,
          column: 7
        }
      },
      "83": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 31
        }
      },
      "84": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 35
        }
      },
      "85": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 37
        }
      },
      "86": {
        start: {
          line: 178,
          column: 15
        },
        end: {
          line: 178,
          column: 16
        }
      },
      "87": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "88": {
        start: {
          line: 180,
          column: 17
        },
        end: {
          line: 180,
          column: 18
        }
      },
      "89": {
        start: {
          line: 181,
          column: 19
        },
        end: {
          line: 181,
          column: 46
        }
      },
      "90": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 182,
          column: 26
        }
      },
      "91": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 185,
          column: 37
        }
      },
      "92": {
        start: {
          line: 190,
          column: 21
        },
        end: {
          line: 190,
          column: 31
        }
      },
      "93": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "94": {
        start: {
          line: 192,
          column: 17
        },
        end: {
          line: 192,
          column: 36
        }
      },
      "95": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 51
        }
      },
      "96": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 62
        }
      },
      "97": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 197,
          column: 20
        }
      },
      "98": {
        start: {
          line: 202,
          column: 22
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "99": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 65
        }
      },
      "100": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 21
        }
      },
      "101": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 68
        }
      },
      "102": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 16
        }
      },
      "103": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 223,
          column: 14
        }
      },
      "104": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 57
        }
      },
      "105": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 235,
          column: 6
        }
      },
      "106": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 243,
          column: 6
        }
      },
      "107": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 29
        }
      },
      "108": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "109": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 249,
          column: 39
        }
      },
      "110": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 251,
          column: 33
        }
      },
      "111": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 30
        }
      },
      "112": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 262,
          column: 6
        }
      },
      "113": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 25
          },
          end: {
            line: 17,
            column: 3
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 20,
            column: 3
          }
        },
        loc: {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        loc: {
          start: {
            line: 24,
            column: 42
          },
          end: {
            line: 26,
            column: 3
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 28,
            column: 3
          }
        },
        loc: {
          start: {
            line: 28,
            column: 37
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        loc: {
          start: {
            line: 34,
            column: 33
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 2
          },
          end: {
            line: 49,
            column: 3
          }
        },
        loc: {
          start: {
            line: 49,
            column: 15
          },
          end: {
            line: 74,
            column: 3
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 76,
            column: 3
          }
        },
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 89,
            column: 3
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 91,
            column: 2
          },
          end: {
            line: 91,
            column: 3
          }
        },
        loc: {
          start: {
            line: 91,
            column: 23
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 91
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        loc: {
          start: {
            line: 104,
            column: 14
          },
          end: {
            line: 114,
            column: 3
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 116,
            column: 2
          },
          end: {
            line: 116,
            column: 3
          }
        },
        loc: {
          start: {
            line: 116,
            column: 17
          },
          end: {
            line: 126,
            column: 3
          }
        },
        line: 116
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 128,
            column: 2
          },
          end: {
            line: 128,
            column: 3
          }
        },
        loc: {
          start: {
            line: 128,
            column: 14
          },
          end: {
            line: 138,
            column: 3
          }
        },
        line: 128
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 140,
            column: 3
          }
        },
        loc: {
          start: {
            line: 140,
            column: 23
          },
          end: {
            line: 157,
            column: 3
          }
        },
        line: 140
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 159,
            column: 2
          },
          end: {
            line: 159,
            column: 3
          }
        },
        loc: {
          start: {
            line: 159,
            column: 41
          },
          end: {
            line: 174,
            column: 3
          }
        },
        line: 159
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 176,
            column: 2
          },
          end: {
            line: 176,
            column: 3
          }
        },
        loc: {
          start: {
            line: 176,
            column: 41
          },
          end: {
            line: 186,
            column: 3
          }
        },
        line: 176
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 188,
            column: 2
          },
          end: {
            line: 188,
            column: 3
          }
        },
        loc: {
          start: {
            line: 188,
            column: 17
          },
          end: {
            line: 198,
            column: 3
          }
        },
        line: 188
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 201,
            column: 2
          },
          end: {
            line: 201,
            column: 3
          }
        },
        loc: {
          start: {
            line: 201,
            column: 23
          },
          end: {
            line: 213,
            column: 3
          }
        },
        line: 201
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 215,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        },
        loc: {
          start: {
            line: 215,
            column: 23
          },
          end: {
            line: 219,
            column: 3
          }
        },
        line: 215
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 221,
            column: 2
          },
          end: {
            line: 221,
            column: 3
          }
        },
        loc: {
          start: {
            line: 221,
            column: 15
          },
          end: {
            line: 224,
            column: 3
          }
        },
        line: 221
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 226,
            column: 2
          },
          end: {
            line: 226,
            column: 3
          }
        },
        loc: {
          start: {
            line: 226,
            column: 22
          },
          end: {
            line: 229,
            column: 3
          }
        },
        line: 226
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 231,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        },
        loc: {
          start: {
            line: 231,
            column: 14
          },
          end: {
            line: 236,
            column: 3
          }
        },
        line: 231
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 238,
            column: 2
          },
          end: {
            line: 238,
            column: 3
          }
        },
        loc: {
          start: {
            line: 238,
            column: 15
          },
          end: {
            line: 244,
            column: 3
          }
        },
        line: 238
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 246,
            column: 3
          }
        },
        loc: {
          start: {
            line: 246,
            column: 39
          },
          end: {
            line: 252,
            column: 3
          }
        },
        line: 246
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 254,
            column: 2
          },
          end: {
            line: 254,
            column: 3
          }
        },
        loc: {
          start: {
            line: 254,
            column: 10
          },
          end: {
            line: 264,
            column: 3
          }
        },
        line: 254
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 20,
            column: 39
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 24,
            column: 40
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 16
          }
        }, {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 28
          }
        }, {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 50
          }
        }, {
          start: {
            line: 52,
            column: 54
          },
          end: {
            line: 52,
            column: 72
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "6": {
        loc: {
          start: {
            line: 148,
            column: 6
          },
          end: {
            line: 152,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 6
          },
          end: {
            line: 152,
            column: 7
          }
        }, {
          start: {
            line: 150,
            column: 13
          },
          end: {
            line: 152,
            column: 7
          }
        }],
        line: 148
      },
      "7": {
        loc: {
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        }, {
          start: {
            line: 168,
            column: 13
          },
          end: {
            line: 170,
            column: 7
          }
        }],
        line: 166
      },
      "8": {
        loc: {
          start: {
            line: 246,
            column: 22
          },
          end: {
            line: 246,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 246,
            column: 33
          },
          end: {
            line: 246,
            column: 37
          }
        }],
        line: 246
      },
      "9": {
        loc: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6236a93145b35f4d07c76abae260e2af70a337ef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_39itvpah1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_39itvpah1();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Base Neural Model Class
 * Abstract base class for all neural network models
 */

class NeuralModel {
  constructor(modelType) {
    /* istanbul ignore next */
    cov_39itvpah1().f[0]++;
    cov_39itvpah1().s[0]++;
    this.modelType = modelType;
    /* istanbul ignore next */
    cov_39itvpah1().s[1]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_39itvpah1().s[2]++;
    this.trainingHistory = [];
    /* istanbul ignore next */
    cov_39itvpah1().s[3]++;
    this.metrics = {
      accuracy: 0,
      loss: 1.0,
      epochsTrained: 0,
      totalSamples: 0
    };
  }

  // Abstract methods to be implemented by subclasses
  forward(
  /* istanbul ignore next */
  _x) {
    /* istanbul ignore next */
    return _asyncToGenerator(function* (input, training =
    /* istanbul ignore next */
    (cov_39itvpah1().b[0][0]++, false)) {
      cov_39itvpah1().f[1]++;
      cov_39itvpah1().s[4]++;
      throw new Error('forward() must be implemented by subclass');
    }).apply(this, arguments);
  }
  train(
  /* istanbul ignore next */
  _x2) {
    /* istanbul ignore next */
    return _asyncToGenerator(function* (trainingData, options =
    /* istanbul ignore next */
    (cov_39itvpah1().b[1][0]++, {})) {
      cov_39itvpah1().f[2]++;
      cov_39itvpah1().s[5]++;
      throw new Error('train() must be implemented by subclass');
    }).apply(this, arguments);
  }
  backward(loss, learningRate) {
    /* istanbul ignore next */
    var _this = this;
    return _asyncToGenerator(function* () {
      cov_39itvpah1().f[3]++;
      cov_39itvpah1().s[6]++;
      // Default backward pass - can be overridden
      console.log(`Backward pass for ${_this.modelType} with loss: ${loss}`);
      cov_39itvpah1().s[7]++;
      return true;
    })();
  }
  validate(validationData) {
    /* istanbul ignore next */
    var _this2 = this;
    return _asyncToGenerator(function* () {
      cov_39itvpah1().f[4]++;
      let totalLoss =
      /* istanbul ignore next */
      (cov_39itvpah1().s[8]++, 0);
      let batchCount =
      /* istanbul ignore next */
      (cov_39itvpah1().s[9]++, 0);
      cov_39itvpah1().s[10]++;
      for (const batch of validationData) {
        const predictions =
        /* istanbul ignore next */
        (cov_39itvpah1().s[11]++, yield _this2.forward(batch.inputs, false));
        const loss =
        /* istanbul ignore next */
        (cov_39itvpah1().s[12]++, _this2.crossEntropyLoss(predictions, batch.targets));
        /* istanbul ignore next */
        cov_39itvpah1().s[13]++;
        totalLoss += loss;
        /* istanbul ignore next */
        cov_39itvpah1().s[14]++;
        batchCount++;
      }
      cov_39itvpah1().s[15]++;
      return totalLoss / batchCount;
    })();
  }

  // Common utility methods
  matmul(a, b) {
    /* istanbul ignore next */
    cov_39itvpah1().f[5]++;
    cov_39itvpah1().s[16]++;
    // Matrix multiplication helper
    // Assumes a is [m, n] and b is [n, p]
    if (
    /* istanbul ignore next */
    (cov_39itvpah1().b[3][0]++, !a.shape) ||
    /* istanbul ignore next */
    (cov_39itvpah1().b[3][1]++, !b.shape) ||
    /* istanbul ignore next */
    (cov_39itvpah1().b[3][2]++, a.shape.length < 2) ||
    /* istanbul ignore next */
    (cov_39itvpah1().b[3][3]++, b.shape.length < 2)) {
      /* istanbul ignore next */
      cov_39itvpah1().b[2][0]++;
      cov_39itvpah1().s[17]++;
      throw new Error('Invalid matrix dimensions for multiplication');
    } else
    /* istanbul ignore next */
    {
      cov_39itvpah1().b[2][1]++;
    }
    const m =
    /* istanbul ignore next */
    (cov_39itvpah1().s[18]++, a.shape[0]);
    const n =
    /* istanbul ignore next */
    (cov_39itvpah1().s[19]++, a.shape[1]);
    const p =
    /* istanbul ignore next */
    (cov_39itvpah1().s[20]++, b.shape[b.shape.length - 1]);
    const result =
    /* istanbul ignore next */
    (cov_39itvpah1().s[21]++, new Float32Array(m * p));
    /* istanbul ignore next */
    cov_39itvpah1().s[22]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[23]++, 0); i < m; i++) {
      /* istanbul ignore next */
      cov_39itvpah1().s[24]++;
      for (let j =
      /* istanbul ignore next */
      (cov_39itvpah1().s[25]++, 0); j < p; j++) {
        let sum =
        /* istanbul ignore next */
        (cov_39itvpah1().s[26]++, 0);
        /* istanbul ignore next */
        cov_39itvpah1().s[27]++;
        for (let k =
        /* istanbul ignore next */
        (cov_39itvpah1().s[28]++, 0); k < n; k++) {
          /* istanbul ignore next */
          cov_39itvpah1().s[29]++;
          sum += a[i * n + k] * b[k * p + j];
        }
        /* istanbul ignore next */
        cov_39itvpah1().s[30]++;
        result[i * p + j] = sum;
      }
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[31]++;
    result.shape = [m, p];
    /* istanbul ignore next */
    cov_39itvpah1().s[32]++;
    return result;
  }
  add(a, b) {
    /* istanbul ignore next */
    cov_39itvpah1().f[6]++;
    cov_39itvpah1().s[33]++;
    // Element-wise addition
    if (a.length !== b.length) {
      /* istanbul ignore next */
      cov_39itvpah1().b[4][0]++;
      cov_39itvpah1().s[34]++;
      throw new Error('Tensors must have same length for addition');
    } else
    /* istanbul ignore next */
    {
      cov_39itvpah1().b[4][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_39itvpah1().s[35]++, new Float32Array(a.length));
    /* istanbul ignore next */
    cov_39itvpah1().s[36]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[37]++, 0); i < a.length; i++) {
      /* istanbul ignore next */
      cov_39itvpah1().s[38]++;
      result[i] = a[i] + b[i];
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[39]++;
    result.shape = a.shape;
    /* istanbul ignore next */
    cov_39itvpah1().s[40]++;
    return result;
  }
  addBias(input, bias) {
    /* istanbul ignore next */
    cov_39itvpah1().f[7]++;
    // Add bias to last dimension
    const result =
    /* istanbul ignore next */
    (cov_39itvpah1().s[41]++, new Float32Array(input.length));
    const lastDim =
    /* istanbul ignore next */
    (cov_39itvpah1().s[42]++, bias.length);
    /* istanbul ignore next */
    cov_39itvpah1().s[43]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[44]++, 0); i < input.length; i++) {
      /* istanbul ignore next */
      cov_39itvpah1().s[45]++;
      result[i] = input[i] + bias[i % lastDim];
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[46]++;
    result.shape = input.shape;
    /* istanbul ignore next */
    cov_39itvpah1().s[47]++;
    return result;
  }
  relu(input) {
    /* istanbul ignore next */
    cov_39itvpah1().f[8]++;
    // ReLU activation
    const result =
    /* istanbul ignore next */
    (cov_39itvpah1().s[48]++, new Float32Array(input.length));
    /* istanbul ignore next */
    cov_39itvpah1().s[49]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[50]++, 0); i < input.length; i++) {
      /* istanbul ignore next */
      cov_39itvpah1().s[51]++;
      result[i] = Math.max(0, input[i]);
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[52]++;
    result.shape = input.shape;
    /* istanbul ignore next */
    cov_39itvpah1().s[53]++;
    return result;
  }
  sigmoid(input) {
    /* istanbul ignore next */
    cov_39itvpah1().f[9]++;
    // Sigmoid activation
    const result =
    /* istanbul ignore next */
    (cov_39itvpah1().s[54]++, new Float32Array(input.length));
    /* istanbul ignore next */
    cov_39itvpah1().s[55]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[56]++, 0); i < input.length; i++) {
      /* istanbul ignore next */
      cov_39itvpah1().s[57]++;
      result[i] = 1 / (1 + Math.exp(-input[i]));
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[58]++;
    result.shape = input.shape;
    /* istanbul ignore next */
    cov_39itvpah1().s[59]++;
    return result;
  }
  tanh(input) {
    /* istanbul ignore next */
    cov_39itvpah1().f[10]++;
    // Tanh activation
    const result =
    /* istanbul ignore next */
    (cov_39itvpah1().s[60]++, new Float32Array(input.length));
    /* istanbul ignore next */
    cov_39itvpah1().s[61]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[62]++, 0); i < input.length; i++) {
      /* istanbul ignore next */
      cov_39itvpah1().s[63]++;
      result[i] = Math.tanh(input[i]);
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[64]++;
    result.shape = input.shape;
    /* istanbul ignore next */
    cov_39itvpah1().s[65]++;
    return result;
  }
  dropout(input, rate) {
    /* istanbul ignore next */
    cov_39itvpah1().f[11]++;
    cov_39itvpah1().s[66]++;
    // Apply dropout during training
    if (rate <= 0) {
      /* istanbul ignore next */
      cov_39itvpah1().b[5][0]++;
      cov_39itvpah1().s[67]++;
      return input;
    } else
    /* istanbul ignore next */
    {
      cov_39itvpah1().b[5][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_39itvpah1().s[68]++, new Float32Array(input.length));
    const scale =
    /* istanbul ignore next */
    (cov_39itvpah1().s[69]++, 1 / (1 - rate));
    /* istanbul ignore next */
    cov_39itvpah1().s[70]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[71]++, 0); i < input.length; i++) {
      /* istanbul ignore next */
      cov_39itvpah1().s[72]++;
      if (Math.random() > rate) {
        /* istanbul ignore next */
        cov_39itvpah1().b[6][0]++;
        cov_39itvpah1().s[73]++;
        result[i] = input[i] * scale;
      } else {
        /* istanbul ignore next */
        cov_39itvpah1().b[6][1]++;
        cov_39itvpah1().s[74]++;
        result[i] = 0;
      }
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[75]++;
    result.shape = input.shape;
    /* istanbul ignore next */
    cov_39itvpah1().s[76]++;
    return result;
  }
  crossEntropyLoss(predictions, targets) {
    /* istanbul ignore next */
    cov_39itvpah1().f[12]++;
    // Cross-entropy loss for classification
    let loss =
    /* istanbul ignore next */
    (cov_39itvpah1().s[77]++, 0);
    const epsilon =
    /* istanbul ignore next */
    (cov_39itvpah1().s[78]++, 1e-7); // For numerical stability
    /* istanbul ignore next */
    cov_39itvpah1().s[79]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[80]++, 0); i < predictions.length; i++) {
      const pred =
      /* istanbul ignore next */
      (cov_39itvpah1().s[81]++, Math.max(epsilon, Math.min(1 - epsilon, predictions[i])));
      /* istanbul ignore next */
      cov_39itvpah1().s[82]++;
      if (targets[i] === 1) {
        /* istanbul ignore next */
        cov_39itvpah1().b[7][0]++;
        cov_39itvpah1().s[83]++;
        loss -= Math.log(pred);
      } else {
        /* istanbul ignore next */
        cov_39itvpah1().b[7][1]++;
        cov_39itvpah1().s[84]++;
        loss -= Math.log(1 - pred);
      }
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[85]++;
    return loss / predictions.length;
  }
  meanSquaredError(predictions, targets) {
    /* istanbul ignore next */
    cov_39itvpah1().f[13]++;
    // MSE loss for regression
    let loss =
    /* istanbul ignore next */
    (cov_39itvpah1().s[86]++, 0);
    /* istanbul ignore next */
    cov_39itvpah1().s[87]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[88]++, 0); i < predictions.length; i++) {
      const diff =
      /* istanbul ignore next */
      (cov_39itvpah1().s[89]++, predictions[i] - targets[i]);
      /* istanbul ignore next */
      cov_39itvpah1().s[90]++;
      loss += diff * diff;
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[91]++;
    return loss / predictions.length;
  }
  shuffle(array) {
    /* istanbul ignore next */
    cov_39itvpah1().f[14]++;
    // Fisher-Yates shuffle
    const shuffled =
    /* istanbul ignore next */
    (cov_39itvpah1().s[92]++, [...array]);
    /* istanbul ignore next */
    cov_39itvpah1().s[93]++;
    for (let i =
    /* istanbul ignore next */
    (cov_39itvpah1().s[94]++, shuffled.length - 1); i > 0; i--) {
      const j =
      /* istanbul ignore next */
      (cov_39itvpah1().s[95]++, Math.floor(Math.random() * (i + 1)));
      /* istanbul ignore next */
      cov_39itvpah1().s[96]++;
      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
    }
    /* istanbul ignore next */
    cov_39itvpah1().s[97]++;
    return shuffled;
  }

  // Model persistence methods
  save(filePath) {
    /* istanbul ignore next */
    var _this3 = this;
    return _asyncToGenerator(function* () {
      cov_39itvpah1().f[15]++;
      const modelData =
      /* istanbul ignore next */
      (cov_39itvpah1().s[98]++, {
        modelType: _this3.modelType,
        config: _this3.getConfig(),
        weights: _this3.getWeights(),
        metrics: _this3.metrics,
        trainingHistory: _this3.trainingHistory
      });

      // In a real implementation, save to file
      cov_39itvpah1().s[99]++;
      console.log(`Saving ${_this3.modelType} model to ${filePath}`);
      cov_39itvpah1().s[100]++;
      return modelData;
    })();
  }
  load(filePath) {
    /* istanbul ignore next */
    var _this4 = this;
    return _asyncToGenerator(function* () {
      cov_39itvpah1().f[16]++;
      cov_39itvpah1().s[101]++;
      // In a real implementation, load from file
      console.log(`Loading ${_this4.modelType} model from ${filePath}`);
      cov_39itvpah1().s[102]++;
      return true;
    })();
  }
  getWeights() {
    /* istanbul ignore next */
    cov_39itvpah1().f[17]++;
    cov_39itvpah1().s[103]++;
    // To be overridden by subclasses
    return {};
  }
  setWeights(weights) {
    /* istanbul ignore next */
    cov_39itvpah1().f[18]++;
    cov_39itvpah1().s[104]++;
    // To be overridden by subclasses
    console.log(`Setting weights for ${this.modelType}`);
  }
  getConfig() {
    /* istanbul ignore next */
    cov_39itvpah1().f[19]++;
    cov_39itvpah1().s[105]++;
    // To be overridden by subclasses
    return {
      modelType: this.modelType
    };
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_39itvpah1().f[20]++;
    cov_39itvpah1().s[106]++;
    return /* istanbul ignore next */_objectSpread(_objectSpread({}, this.metrics), {}, {
      modelType: this.modelType,
      trainingHistory: this.trainingHistory
    });
  }
  updateMetrics(loss, accuracy =
  /* istanbul ignore next */
  (cov_39itvpah1().b[8][0]++, null)) {
    /* istanbul ignore next */
    cov_39itvpah1().f[21]++;
    cov_39itvpah1().s[107]++;
    this.metrics.loss = loss;
    /* istanbul ignore next */
    cov_39itvpah1().s[108]++;
    if (accuracy !== null) {
      /* istanbul ignore next */
      cov_39itvpah1().b[9][0]++;
      cov_39itvpah1().s[109]++;
      this.metrics.accuracy = accuracy;
    } else
    /* istanbul ignore next */
    {
      cov_39itvpah1().b[9][1]++;
    }
    cov_39itvpah1().s[110]++;
    this.metrics.epochsTrained++;
  }
  reset() {
    /* istanbul ignore next */
    cov_39itvpah1().f[22]++;
    cov_39itvpah1().s[111]++;
    // Reset model to initial state
    this.trainingHistory = [];
    /* istanbul ignore next */
    cov_39itvpah1().s[112]++;
    this.metrics = {
      accuracy: 0,
      loss: 1.0,
      epochsTrained: 0,
      totalSamples: 0
    };
    /* istanbul ignore next */
    cov_39itvpah1().s[113]++;
    this.initializeWeights();
  }
}
export { NeuralModel };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,